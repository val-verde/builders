#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=swift-llbuild
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

# Configure the package
cd ${SOURCE_ROOT}
git checkout dutch-master
git pull
mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    -I/sources/swift-llbuild/lib/llvm/Support \
    -Wno-documentation \
    -Wno-macro-redefined \
    -Wno-unused-function \
    ${CXXFLAGS} \
" \
LIBS="\
    -lole32 \
    -luuid \
    ${LIBS} \
" \
SWIFTCFLAGS="\
    -sdk ${SYSROOT} \
    -use-ld=${PACKAGE_ROOT}/bin/${PACKAGE_BASE_NAME}-platform-sdk-mslink \
    -L${SYSROOT}/usr/lib/swift/windows/${HOST_PROCESSOR} \
    ${SWIFTCFLAGS} \
" \
${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -Ddispatch_DIR=/sources/build-staging/swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DFoundation_DIR=/sources/build-staging/swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DLLBUILD_SUPPORT_BINDINGS=Swift \
    -DSQLite3_INCLUDE_DIR=${SYSROOT}/usr/include \
    -DSQLite3_LIBRARY=${SYSROOT}/usr/lib/libsqlite3.dll.a \
    ${SOURCE_ROOT}

# Package the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build

rsync -aPx ${STAGE_ROOT}/lib/*.dll* install${PACKAGE_PREFIX}/lib
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build

# Install the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-install