#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=swift-tools-support-core
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}-${HOST_PROCESSOR}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}

# Configure the package
cd ${SOURCE_ROOT}
git remote set-branches --add origin dutch-android-master
git fetch origin dutch-android-master
git checkout dutch-android-master
mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}
${PACKAGE_BASE_NAME}-platform-sdk-cmake \
   -DCMAKE_C_FLAGS="-D__GLIBC_PREREQ\(a,b\)=1" \
   -DCMAKE_INSTALL_PREFIX=${STAGE_ROOT}/install/${PACKAGE_PREFIX} \
   -DCMAKE_Swift_COMPILER=${PACKAGE_ROOT}/bin/swiftc \
   -DCMAKE_Swift_COMPILER_TARGET=${HOST_TRIPLE} \
   -DCMAKE_Swift_FLAGS="-sdk ${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}/sysroot" \
   ${SOURCE_ROOT}

#Package the components
ninja -j${NUM_PROCESSORS}
cd ${STAGE_ROOT}
mkdir -p install${PACKAGE_PREFIX}
rsync -aPx lib install${PACKAGE_PREFIX}

source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-install