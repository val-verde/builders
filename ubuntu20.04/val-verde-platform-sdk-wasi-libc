#!/bin/bash

set -e

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=wasi-libc
export SOURCE_PACKAGE_VERSION=9999-wasm32
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export QUALIFIED_PACKAGE_NAME=${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export INSTALL_ROOT=${TEMPDIR}/org.${VAL_VERDE_GH_TEAM}/${QUALIFIED_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

# Configure the build components
rm -rf ${STAGE_ROOT}
git clone https://github.com/${VAL_VERDE_GH_TEAM}/${SOURCE_PACKAGE_NAME}.git \
          --branch val-verde-mainline \
          --single-branch \
          ${SOURCE_ROOT}
rsync -aPx ${SOURCE_ROOT}/* \
           ${STAGE_ROOT}/
cd ${STAGE_ROOT}
mkdir -p ${INSTALL_ROOT}${PACKAGE_PREFIX}

# Build the components
CFLAGS=`echo "\
    -D_WASI_EMULATED_MMAN \
    -D_WASI_EMULATED_SIGNAL \
" | xargs`

INSTALL_DIR=${INSTALL_ROOT}${PACKAGE_PREFIX} \
OBJDIR=${STAGE_ROOT} \
THREAD_MODEL=local-exec \
WASM_AR=${BUILD_PACKAGE_PREFIX}/bin/llvm-ar \
WASM_CC=${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-clang \
WASM_CFLAGS=${CFLAGS} \
WASM_NM=${BUILD_PACKAGE_PREFIX}/bin/llvm-nm \
SYSROOT=${STAGE_ROOT}/sysroot \
${BUILD_PACKAGE_PREFIX}/bin/make \
    install

# Build the package
cd ${STAGE_ROOT}
deb-package-build

# Install the package
deb-package-install
