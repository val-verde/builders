#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=swift-corelibs-libdispatch
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}

# Configure the package
mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}
${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DBUILD_TESTING=FALSE \
    -DCMAKE_INSTALL_PREFIX=${STAGE_ROOT}/install${PACKAGE_PREFIX} \
    -DCMAKE_Swift_COMPILER=${PACKAGE_ROOT}/bin/${PACKAGE_BASE_NAME}-platform-sdk-swiftc \
    -DCMAKE_Swift_COMPILER_TARGET=${HOST_TRIPLE} \
    -DCMAKE_Swift_FLAGS="${SWIFTCFLAGS} \
                         -sdk ${SYSROOT}" \
    -DENABLE_SWIFT=TRUE \
    ${SOURCE_ROOT}

# Package the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build

SDK_PLATFORM_DIR=`echo ${SYSTEM_NAME} | tr '[:upper:]' '[:lower:]'`

if [ "${SDK_PLATFORM_DIR}" != "${HOST_OS}" ]; then
    mv install${PACKAGE_PREFIX}/lib/swift/${SDK_PLATFORM_DIR} \
       install${PACKAGE_PREFIX}/lib/swift/${HOST_OS}
fi

source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build
