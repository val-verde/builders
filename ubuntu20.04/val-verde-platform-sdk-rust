#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=rust
export SOURCE_PACKAGE_VERSION=9999-git
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export QUALIFIED_PACKAGE_NAME=${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export INSTALL_ROOT=${TEMPDIR}/org.${VAL_VERDE_GH_TEAM}/${QUALIFIED_PACKAGE_NAME}
export INSTALL_PREFIX=${INSTALL_PREFIX:-${INSTALL_ROOT}${PACKAGE_PREFIX}}
export LLVM_NATIVE_STAGE_ROOT=${LLVM_NATIVE_STAGE_ROOT:-/sources/build-staging/llvm-project-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export DEPENDS="\
    ${PACKAGE_BASE_NAME}-llvm-project-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-z3-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

# Configure the build components
rm -rf ${STAGE_ROOT}
git clone https://github.com/${VAL_VERDE_GH_TEAM}/${SOURCE_PACKAGE_NAME}.git \
          --branch val-verde-mainline \
          --single-branch \
          ${SOURCE_ROOT}
mkdir -p ${STAGE_ROOT} ${INSTALL_ROOT}
cd ${STAGE_ROOT}

rsync -aPx ${SOURCE_ROOT}/${VAL_VERDE_GH_TEAM}-config.toml.in \
           ${STAGE_ROOT}/config.toml

BINDIR=${BUILD_PACKAGE_PREFIX}/bin
BUILD_TRIPLE=${BUILD_PROCESSOR}-unknown-${BUILD_KERNEL}-${BUILD_OS}${BUILD_OS_API_LEVEL}

AR=${BINDIR}/llvm-ar
CC=${BINDIR}/clang
CXX=${BINDIR}/clang++
FILECHECK=${LLVM_NATIVE_STAGE_ROOT}/bin/FileCheck
LD=${BINDIR}/clang
LLVMCONFIG=${LLVM_NATIVE_STAGE_ROOT}/bin/llvm-config
NODE=${BINDIR}/node
PYTHON=${BINDIR}/python3
RANLIB=${BINDIR}/llvm-ranlib

sed -i "s|@@AR@@|${AR}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@BUILD_TRIPLE@@|${BUILD_TRIPLE}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@CC@@|${CC}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@CFLAGS@@|${CFLAGS}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@CXX@@|${CXX}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@CXXFLAGS@@|${CXXFLAGS}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@FILECHECK@@|${FILECHECK}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@INSTALL_PREFIX@@|${INSTALL_PREFIX}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@LD@@|${LD}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@LDFLAGS@@|${LDFLAGS}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@LLVMCONFIG@@|${LLVMCONFIG}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@NODE@@|${NODE}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@PYTHON@@|${PYTHON}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@RANLIB@@|${RANLIB}|g" ${STAGE_ROOT}/config.toml
sed -i "s|@@STAGE_ROOT@@|${STAGE_ROOT}|g" ${STAGE_ROOT}/config.toml

export PKG_CONFIG_PATH=${PKG_CONFIG_PATH:-"${PACKAGE_PREFIX}/lib/pkgconfig"}

# Build the components
${BUILD_PACKAGE_PREFIX}/bin/python3 ${SOURCE_ROOT}/x.py build --config ${STAGE_ROOT}/config.toml
${BUILD_PACKAGE_PREFIX}/bin/python3 ${SOURCE_ROOT}/x.py install --config ${STAGE_ROOT}/config.toml

# Build the package
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-package-${PACKAGE_CLASS}-build

# Install the package
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-package-install
