#!/bin/bash

set -e

if [ "${ENABLE_FLTO}" = "Full" ]; then
    FLTO_CFLAG=-flto
    FLTO_LDFLAG="-s -O2"
fi

BINDIR=${PACKAGE_ROOT}/bin
OPTIMIZATION_LEVEL=${OPTIMIZATION_LEVEL:-z}
SYSROOT=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}/sysroot
SYSTEM_NAME=${SYSTEM_NAME:Linux}

AR=${BINDIR}/llvm-ar
AS=${BINDIR}/llvm-as
CC=${BINDIR}/clang
CPP="${CC} -E"
CXX=${BINDIR}/clang++
LD=${BINDIR}/ld.lld
NM=${BINDIR}/llvm-nm
OBJCOPY=${BINDIR}/llvm-objcopy
OBJDUMP=${BINDIR}/llvm-objdump
RANLIB=${BINDIR}/llvm-ranlib
READELF=${BINDIR}/llvm-readelf
SIZE=${BINDIR}/llvm-size
STRIP=${BINDIR}/llvm-strip
STRINGS=${BINDIR}/llvm-strings

cmake \
    -G Ninja \
    -DCMAKE_AR=${AR} \
    -DCMAKE_ASM_COMPILER=${PACKAGE_ROOT}/bin/clang \
    -DCMAKE_ASM_COMPILER_TARGET=${HOST_PROCESSOR}-${HOST_KERNEL}-${HOST_OS} \
    -DCMAKE_ASM_COMPILER_ID=Clang \
    -DCMAKE_BUILD_TYPE=MinSizeRel \
    -DCMAKE_C_COMPILER=${CC} \
    -DCMAKE_C_COMPILER_TARGET=${HOST_PROCESSOR}-${HOST_KERNEL}-${HOST_OS} \
    -DCMAKE_C_FLAGS_MINSIZEREL="-O${OPTIMIZATION_LEVEL}" \
    -DCMAKE_CXX_COMPILER=${CXX} \
    -DCMAKE_CXX_COMPILER_TARGET=${HOST_PROCESSOR}-${HOST_KERNEL}-${HOST_OS} \
    -DCMAKE_CXX_FLAGS_MINSIZEREL="-O${OPTIMIZATION_LEVEL}" \
    -DCMAKE_CROSSCOMPILING=TRUE \
    -DCMAKE_EXE_LINKER_FLAGS="${FLTO_LDFLAG}" \
    -DCMAKE_LINKER=${LD} \
    -DCMAKE_MODULE_LINKER_FLAGS="${FLTO_LDFLAG}" \
    -DCMAKE_NM=${NM} \
    -DCMAKE_OBJCOPY=${OBJCOPY} \
    -DCMAKE_OBJDUMP=${OBJDUMP} \
    -DCMAKE_PREFIX_PATH=${BINDIR}/lib/pkgconfig \
    -DCMAKE_RANLIB=${RANLIB} \
    -DCMAKE_READELF=${READELF} \
    -DCMAKE_STRINGS=${STRINGS} \
    -DCMAKE_STRIP=${STRIP} \
    -DCMAKE_SHARED_LINKER_FLAGS="${FLTO_LDFLAG}" \
    -DCMAKE_SYSROOT=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}/sysroot \
    -DCMAKE_SYSTEM_NAME=${SYSTEM_NAME} \
    -DCMAKE_SYSTEM_PROCESSOR=${HOST_PROCESSOR} \
    "$@"
