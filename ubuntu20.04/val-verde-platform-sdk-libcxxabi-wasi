#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=libcxxabi
export SOURCE_PACKAGE_VERSION=9999-wasm32
export SOURCE_ROOT=/sources/llvm-project/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export LLVM_NATIVE_STAGE_ROOT=${LLVM_NATIVE_STAGE_ROOT:-/sources/build-staging/llvm-project-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}}
export QUALIFIED_PACKAGE_NAME=${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export INSTALL_ROOT=${TEMPDIR}/org.${PACKAGE_BASE_NAME}/${QUALIFIED_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

# Configure the package
mkdir -p ${STAGE_ROOT} ${INSTALL_ROOT}
cd ${STAGE_ROOT}

CXXFLAGS="\
    -nostdlib++ \
    -D_LIBCPP_BUILDING_LIBRARY \
    -D_LIBCPP_HAS_THREAD_API_PTHREAD=1 \
    -D_REENTRANT \
    ${CXXFLAGS} \
" \
SYSTEM_NAME=Fuchsia \
${BUILDER_SCRIPT_PATH}/${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DLIBCXXABI_ENABLE_ASSERTIONS=FALSE \
    -DLIBCXXABI_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXXABI_ENABLE_SHARED=FALSE \
    -DLIBCXXABI_ENABLE_STATIC=TRUE \
    -DLIBCXXABI_ENABLE_THREADS=TRUE \
    -DLIBCXXABI_HAS_PTHREAD_API=TRUE \
    -DLIBCXXABI_LIBCXX_INCLUDES=/sources/llvm-project/libcxx/include \
    -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=FALSE \
    -DLIBCXXABI_SUPPORTS_FUNWIND_TABLES_FLAG=FALSE \
    -DLIBCXXABI_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_LLVM_UNWINDER=FALSE \
    -DLIBCXXABI_USE_SJLJ_EXCEPTIONS=FALSE \
    -DLLVM_CONFIG_PATH=${LLVM_NATIVE_STAGE_ROOT}/bin/llvm-config \
    ${SOURCE_ROOT}

# Build the components
source ${BUILDER_SCRIPT_PATH}/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build

mkdir -p ${INSTALL_ROOT}${PACKAGE_PREFIX}/include
cp ${SOURCE_ROOT}/include/* \
   ${INSTALL_ROOT}${PACKAGE_PREFIX}/include

# Build the package
source ${BUILDER_SCRIPT_PATH}/${PACKAGE_BASE_NAME}-platform-sdk-package-${PACKAGE_CLASS}-build

# Install the package
source ${BUILDER_SCRIPT_PATH}/${PACKAGE_BASE_NAME}-platform-sdk-package-install
