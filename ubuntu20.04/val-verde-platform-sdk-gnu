#!/bin/bash

set -e

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

# gnu environment
export HOST_TRIPLE=${HOST_PROCESSOR}-${HOST_KERNEL}-${HOST_OS}
export PACKAGE_PREFIX=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk/${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/sysroot/usr
export SYSROOT=${SYSROOT:-${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk/${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/sysroot}
export SYSTEM_NAME=Linux

export CFLAGS=`echo "\
    -I${PACKAGE_PREFIX}/include \
" | xargs`
export CPPFLAGS=`echo "\
    -I${PACKAGE_PREFIX}/include \
" | xargs`
export CXXFLAGS=`echo "\
    -I${PACKAGE_PREFIX}/include \
" | xargs`
export LDFLAGS=`echo "\
    -L${PACKAGE_PREFIX}/lib \
" | xargs`
export SWIFT_BUILD_FLAGS=`echo "\
    -Xcc -I${PACKAGE_PREFIX}/include \
    -Xcxx -I${PACKAGE_PREFIX}/include \
    -Xlinker -L${PACKAGE_PREFIX}/lib \
" | xargs`
export SWIFTCFLAGS=`echo "\
    -I${PACKAGE_PREFIX}/include \
    -L${PACKAGE_PREFIX}/lib \
" | xargs`

# kernel headers builds
MAKE_PROGRAM=/usr/bin/make \
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-kernel-headers-cross

# llvm dependencies
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-llvm-dependencies-gnu

# llvm build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-llvm-project

# cmark build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-cmark

# swift build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift

# lldb build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-lldb

# libdispatch build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-corelibs-libdispatch

# foundation build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-corelibs-foundation

# xctest build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-corelibs-xctest

# llbuild build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-llbuild

# swift tools support core build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-tools-support-core

# yams build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-yams

# swift argument parser build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-argument-parser

# swift driver build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-driver

# swift package manager build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-package-manager

dpkg -i ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-argument-parser-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
        ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
        ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
        ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-corelibs-xctest-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
        ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-driver-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
        ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-llbuild-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
        ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-package-manager-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
        ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-tools-support-core-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
        ${DEB_PATH}/${PACKAGE_BASE_NAME}-yams-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb

# swift-syntax build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-syntax-cross

# swift-format build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-format-cross

# swift-doc build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-doc-cross

# sourcekit-lsp build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-sourcekit-lsp

# baikonur build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-baikonur

# pythonkit build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-pythonkit

# swift tensorflows apis build
# bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-tensorflow-apis

# graphics sdk build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-graphics-sdk-cross

# node + sdk build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-node-cross
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-npm-yarn-cross

# yautja server build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-yarn-yautja-server-cross

# rust build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-rust

