#!/bin/bash

set -e

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

# windows environment
export HOST_TRIPLE=${HOST_PROCESSOR}-${HOST_KERNEL}-${HOST_OS}
export PACKAGE_PREFIX=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk/${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/sysroot
export SYSROOT=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk/${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/sysroot
export SYSTEM_NAME=Windows

export CFLAGS=
export CPPFLAGS=
export CXXFLAGS=
export LDFLAGS=
export SWIFT_BUILD_FLAGS=`echo "\
    -Xcc -I${PACKAGE_PREFIX}/include \
    -Xcxx -I${PACKAGE_PREFIX}/include \
    -Xlinker -L${PACKAGE_PREFIX}/lib \
" | xargs`
export SWIFTCFLAGS=`echo "\
    -sdk ${SYSROOT} \
" | xargs`

# windows mingw-headers build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-mingw-w64-headers

# windows mingw-crt build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-mingw-w64-crt

# windows compiler-rt build (for host)
CLANG_RT_LIB=libclang_rt.builtins-${HOST_PROCESSOR}.a \
DST_CLANG_RT_LIB=libclang_rt.builtins-${HOST_PROCESSOR}.a \
LDFLAGS="-Wl,/force:unresolved" \
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-compiler-rt

# windows libunwind build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-libunwind-windows

# windows mingw-winpthreads build
LD=${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-mslink \
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-winpthreads-cross

# windows libcxxabi build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-libcxxabi-windows

# windows libcxx build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-libcxx-windows

# windows llvm dependencies
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-llvm-dependencies-windows

# windows swift tools build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-tools-windows

# windows swift sdk build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-sdk-windows

# windows graphics sdk build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-graphics-sdk-cross
