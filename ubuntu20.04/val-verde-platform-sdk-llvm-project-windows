#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=llvm-project
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}

# Configure the package
cd ${SOURCE_ROOT}
git checkout dutch-master

mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}
${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DBUILD_SHARED_LIBS=TRUE \
    -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
    -DCLANG_DEFAULT_RTLIB=compiler-rt \
    -DCLANG_INCLUDE_DOCS=FALSE \
    -DCLANG_INCLUDE_TESTS=FALSE \
    -DCLANG_LINK_CLANG_DYLIB=FALSE \
    -DCLANG_TABLEGEN=/sources/build-staging/llvm-project/bin/clang-tblgen \
    -DCLANG_TOOL_ARCMT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_CLANG_IMPORT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_CLANG_REFACTOR_TEST_BUILD=FALSE \
    -DCLANG_TOOL_C_ARCMT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_C_INDEX_TEST_BUILD=FALSE \
    -DCMAKE_ASM_MASM_COMPILER=${PACKAGE_ROOT}/bin/${PACKAGE_BASE_NAME}-platform-sdk-ml64 \
    -DCMAKE_INSTALL_PREFIX=${STAGE_ROOT}/install${PACKAGE_PREFIX} \
    -DCOMPILER_RT_CAN_EXECUTE_TESTS=FALSE \
    -DCOMPILER_RT_INCLUDE_TESTS=FALSE \
    -DHAVE_CXX_ATOMICS_WITH_LIB=TRUE \
    -DHAVE_CXX_ATOMICS64_WITH_LIB=TRUE \
    -DHAVE_GNU_POSIX_REGEX=TRUE \
    -DHAVE_INOTIFY=TRUE \
    -DHAVE_LIBCXXABI=TRUE \
    -DHAVE_LIBUNWIND=TRUE \
    -DHAVE_THREAD_SAFETY_ATTRIBUTES=TRUE \
    -DLIBCXX_CXX_ABI=libcxxabi \
    -DLIBCXX_ENABLE_ABI_LINKER_SCRIPT=TRUE \
    -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=FALSE \
    -DLIBCXX_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXX_ENABLE_FILESYSTEM=FALSE \
    -DLIBCXX_ENABLE_RTTI=TRUE \
    -DLIBCXX_ENABLE_STATIC=FALSE \
    -DLIBCXX_ENABLE_SHARED=TRUE \
    -DLIBCXX_ENABLE_STATIC=FALSE \
    -DLIBCXX_ENABLE_THREADS=TRUE \
    -DLIBCXX_HAS_PTHREAD_API=FALSE \
    -DLIBCXX_HAS_WIN32_THREAD_API=TRUE \
    -DLIBCXX_INCLUDE_BENCHMARKS=FALSE \
    -DLIBCXX_INCLUDE_DOCS=FALSE \
    -DLIBCXX_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXXABI_ENABLE_STATIC=FALSE \
    -DLIBCXXABI_ENABLE_SHARED=TRUE \
    -DLIBCXXABI_ENABLE_THREADS=FALSE \
    -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=FALSE \
    -DLIBCXXABI_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_LLVM_UNWINDER=TRUE \
    -DLIBCXXABI_USE_SJLJ_EXCEPTIONS=FALSE \
    -DLIBOMPTARGET_DEP_LIBFFI_INCLUDE_DIR=${SYSROOT}/include \
    -DLIBOMPTARGET_NVPTX_ALTERNATE_HOST_COMPILER=gcc-8 \
    -DLIBUNWIND_ENABLE_ASSERTIONS=FALSE \
    -DLIBUNWIND_ENABLE_PEDANTIC=FALSE \
    -DLIBUNWIND_ENABLE_SHARED=TRUE \
    -DLIBUNWIND_ENABLE_STATIC=FALSE \
    -DLIBUNWIND_ENABLE_THREADS=TRUE \
    -DLIBUNWIND_INCLUDE_DOCS=FALSE \
    -DLIBUNWIND_USE_COMPILER_RT=TRUE \
    -DLLD_INCLUDE_TESTS=FALSE \
    -DLLVM_BUILD_EXAMPLES=FALSE \
    -DLLVM_BUILD_DOCS=FALSE \
    -DLLVM_BUILD_LLVM_DYLIB=FALSE \
    -DLLVM_BUILD_TESTS=FALSE \
    -DLLVM_BUILD_UTILS=TRUE \
    -DLLVM_CONFIG_PATH=/sources/build-staging/llvm-project/bin/llvm-config \
    -DLLVM_DEFAULT_TARGET_TRIPLE=${HOST_PROCESSOR}-unknown-windows-gnu \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_FFI=TRUE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LLD=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_PIC=FALSE \
    -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;compiler-rt;libclc;lld;mlir;parallel-libs;polly;pstl" \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_ENABLE_THREADS=TRUE \
    -DLLVM_ENABLE_UNWIND_TABLES=FALSE \
    -DLLVM_ENABLE_WARNINGS=FALSE \
    -DLLVM_ENABLE_Z3_SOLVER=TRUE \
    -DLLVM_ENABLE_ZLIB=TRUE \
    -DLLVM_HOST_TRIPLE=${HOST_PROCESSOR}-unknown-windows-gnu \
    -DLLVM_INCLUDE_DOCS=FALSE \
    -DLLVM_INCLUDE_EXAMPLES=FALSE \
    -DLLVM_INCLUDE_GO_TESTS=FALSE \
    -DLLVM_INCLUDE_TESTS=FALSE \
    -DLLVM_INCLUDE_UTILS=TRUE \
    -DLLVM_LINK_LLVM_DYLIB=FALSE \
    -DLLVM_OPTIMIZED_TABLEGEN=TRUE \
    -DLLVM_POLLY_LINK_INTO_TOOLS=TRUE \
    -DLLVM_TABLEGEN=/sources/build-staging/llvm-project/bin/llvm-tblgen \
    -DLLVM_TARGETS_TO_BUILD=all \
    -DLLVM_TOOL_LLVM_C_TEST_BUILD=FALSE \
    -DLLVM_USE_HOST_TOOLS=TRUE \
    -DLLVM_USE_NEWPM=TRUE \
    -DLLVM_USE_RELATIVE_PATHS_IN_DEBUG_INFO=TRUE \
    -DLLVM_USE_RELATIVE_PATHS_IN_FILES=TRUE \
    -DLLVM_Z3_INSTALL_DIR=${PACKAGE_PREFIX} \
    -DMLIR_TABLEGEN=/sources/build-staging/llvm-project/bin/mlir-tblgen \
    -DPYTHON_EXECUTABLE=/usr/bin/python2 \
    -DSANITIZER_CXX_ABI=libc++ \
    -DZ3_INCLUDE_DIR=${SYSROOT}/include \
    -DZ3_LIBRARIES=${SYSROOT}/lib/libz3.dll.a \
    ${SOURCE_ROOT}/llvm

# Package the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build

# Build the package
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-install
