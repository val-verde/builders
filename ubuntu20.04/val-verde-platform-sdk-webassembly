#!/bin/bash

set -e

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

# webassembly environment
export HOST_TRIPLE=${HOST_PROCESSOR}-${HOST_KERNEL}-${HOST_OS} \
export PACKAGE_PREFIX=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk/${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/sysroot \
export SYSROOT=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk/${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/sysroot \
export SYSTEM_NAME=Wasi

export CFLAGS=`echo "\
    -I${PACKAGE_PREFIX}/include \
" | xargs`
export CPPFLAGS=`echo "\
    -I${PACKAGE_PREFIX}/include \
" | xargs`
export CXXFLAGS=`echo "\
    -I${PACKAGE_PREFIX}/include \
" | xargs`
export SWIFT_BUILD_FLAGS=
export LDFLAGS=`echo "\
    -L${PACKAGE_PREFIX}/lib \
" | xargs`
export SWIFTCFLAGS=`echo "\
    -sdk ${SYSROOT} \
" | xargs`

# webassembly libc
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-wasi-libc

# webassembly compiler-rt (bootstrap)
CFLAGS="\
    -nostdlib \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -nostdlib \
    ${CXXFLAGS} \
" \
LDFLAGS="\
    -Wl,--allow-undefined \
    -Wl,--no-entry \
    ${LDFLAGS} \
" \
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-compiler-rt-wasi

# webassembly libcxxabi
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-libcxxabi-wasi

# webassembly libcxx
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-libcxx-wasi

# webassembly compiler-rt (rebuild with c++)
CXXFLAGS="\
    -stdlib++-isystem ${PACKAGE_PREFIX}/include/c++/v1 \
    -I${PACKAGE_PREFIX}/include \
    ${CXXFLAGS} \
" \
LDFLAGS="\
    -L${PACKAGE_PREFIX}/lib \
    ${LDFLAGS} \
" \
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-compiler-rt-wasi
