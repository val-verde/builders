#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=swift
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}
export LLVM_SOURCE_ROOT=/sources/llvm-project
export LLVM_NATIVE_STAGE_ROOT=/sources/build-staging/llvm-project
export LLVM_STAGE_ROOT=/sources/build-staging/llvm-project-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}

# Configure the package
cd ${SOURCE_ROOT}
git remote set-branches --add origin dutch-android-master
git fetch origin dutch-android-master
git checkout dutch-android-master
mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DCMAKE_INSTALL_PREFIX=${STAGE_ROOT}/install${PACKAGE_PREFIX} \
    -DClang_DIR=${LLVM_STAGE_ROOT}/lib/cmake/clang \
    -DICU_I18N_INCLUDE_DIRS=${SYSROOT}/usr/include \
    -DICU_I18N_LIBRARIES=${SYSROOT}/usr/lib/libicui18nswift.so \
    -DICU_UC_INCLUDE_DIRS=${SYSROOT}/usr/include \
    -DICU_UC_LIBRARIES=${SYSROOT}/usr/lib/libicuucswift.so \
    -DLibEdit_INCLUDE_DIRS=${SYSROOT}/usr/include \
    -DLibEdit_LIBRARIES=${SYSROOT}/usr/lib/libedit.so \
    -DLIBXML2_INCLUDE_DIR=${SYSROOT}/usr/include/libxml2 \
    -DLIBXML2_LIBRARY=${SYSROOT}/usr/lib/libxml2.so \
    -DLLVM_BUILD_LIBRARY_DIR=${LLVM_STAGE_ROOT}/lib \
    -DLLVM_BUILD_MAIN_SRC_DIR=${LLVM_SOURCE_ROOT} \
    -DLLVM_DIR=${LLVM_STAGE_ROOT}/lib/cmake/llvm \
    -DLLVM_ENABLE_ASSERTIONS=FALSE \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=TRUE \
    -DLLVM_MAIN_INCLUDE_DIR=${LLVM_SOURCE_ROOT}/llvm/include \
    -DLLVM_TABLEGEN=${LLVM_NATIVE_STAGE_ROOT}/bin/llvm-tblgen \
    -DPython2_EXECUTABLE=/usr/bin/python2 \
    -DSWIFT_ANDROID_NATIVE_SYSROOT=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}/sysroot \
    -DSWIFT_ANDROID_API_LEVEL=${HOST_OS_API_LEVEL} \
    -DSWIFT_ANDROID_DEPLOY_DEVICE_PATH=/data/local/tmp/swift-tests \
    -DSWIFT_ANDROID_NDK_GCC_VERSION=4.9 \
    -DSWIFT_ANDROID_NDK_PATH=${ANDROID_NDK_HOME} \
    -DSWIFT_BUILD_PERF_TESTSUITE=FALSE \
    -DSWIFT_BUILD_RUNTIME_WITH_HOST_COMPILER=TRUE \
    -DSWIFT_BUILD_SOURCEKIT=TRUE \
    -DSWIFT_BUILD_SYNTAXPARSERLIB=TRUE \
    -DSWIFT_ENABLE_EXPERIMENTAL_DIFFERENTIABLE_PROGRAMMING=TRUE \
    -DSWIFT_ENABLE_SOURCEKIT_TESTS=FALSE \
    -DSWIFT_HOST_VARIANT_ARCH=${HOST_PROCESSOR} \
    -DSWIFT_HOST_VARIANT_SDK=ANDROID \
    -DSWIFT_INCLUDE_DOCS=FALSE \
    -DSWIFT_INCLUDE_TESTS=FALSE \
    -DSWIFT_NATIVE_CLANG_TOOLS_PATH=${PACKAGE_ROOT}/bin \
    -DSWIFT_NATIVE_LLVM_TOOLS_PATH=${PACKAGE_ROOT}/bin \
    -DSWIFT_NATIVE_SWIFT_TOOLS_PATH=${PACKAGE_ROOT}/bin \
    -DSWIFT_PATH_TO_CMARK_BUILD=/sources/build-staging/swift-cmark-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} \
    -DSWIFT_PATH_TO_CMARK_SOURCE=/sources/swift-cmark \
    -DSWIFT_PATH_TO_LIBDISPATCH_SOURCE=/sources/swift-corelibs-libdispatch \
    -DSWIFT_TOOL_COMPLETE_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_LLDB_MODULEIMPORT_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SOURCEKITD_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SWIFT_IDE_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SWIFT_REMOTEAST_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SWIFT_SYNTAX_PARSER_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SWIFT_SYNTAX_TEST_BUILD=FALSE \
    -DSWIFT_TOOLS_ENABLE_LTO=${ENABLE_FLTO} \
    -DSWIFT_USE_LINKER=lld \
    -DUSE_POSIX_SEM=1 \
    -DUUID_INCLUDE_DIRS=${SYSROOT}/usr/include \
    -DUUID_LIBRARIES=${SYSROOT}/usr/lib/libuuid.so \
    ${SOURCE_ROOT}

# Package the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build

sed -i 's/\/usr/\.\.\/\.\.\/\.\.\/\.\./g' \
       install${PACKAGE_PREFIX}/lib/swift/${HOST_OS}/${HOST_PROCESSOR}/glibc.modulemap

source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build

# Build the package
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-install
