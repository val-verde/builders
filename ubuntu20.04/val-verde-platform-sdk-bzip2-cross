#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=bzip2
export SOURCE_PACKAGE_VERSION=1.0.8
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export QUALIFIED_PACKAGE_NAME=${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export INSTALL_ROOT=${TEMPDIR}/org.${PACKAGE_BASE_NAME}/${QUALIFIED_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

# Determine source branch

if [ "${HOST_OS}" = "mingw32" ]; then
    BRANCH="dutch-windows-master"
else
    BRANCH=${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}
fi

# Configure the package
rm -rf ${SOURCE_ROOT}
git clone https://github.com/${PACKAGE_BASE_NAME}/${SOURCE_PACKAGE_NAME}.git \
          --branch ${BRANCH} \
          --single-branch \
          ${SOURCE_ROOT}
rsync -aPx ${SOURCE_ROOT}/* \
           ${STAGE_ROOT}/

# Build the components
if [ "${HOST_OS}" != "mingw32" ]; then
    CFLAGS="\
        -fPIC \
        ${CFLAGS} \
    "
fi

mkdir -p ${INSTALL_ROOT}${PACKAGE_PREFIX}
cd ${STAGE_ROOT}

AR=${AR:-${BUILD_PACKAGE_PREFIX}/bin/llvm-ar}
CC=${CC:-${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-clang}
CFLAGS=`echo ${CFLAGS} | xargs`
MAKE_PROGRAM=${MAKE_PROGRAM:-${BUILD_PACKAGE_PREFIX}/bin/make}
RANLIB=${RANLIB:-${BUILD_PACKAGE_PREFIX}/bin/llvm-ranlib}

${MAKE_PROGRAM} \
    AR=${AR} \
    CC=${CC} \
    CFLAGS="${CFLAGS}" \
    PREFIX=${INSTALL_ROOT}${PACKAGE_PREFIX} \
    RANLIB=${RANLIB} \
    install

# Build the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-${PACKAGE_CLASS}-build

# Install the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-install
