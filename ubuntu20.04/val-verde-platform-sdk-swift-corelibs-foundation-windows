#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=swift-corelibs-foundation
export SOURCE_PACKAGE_VERSION=9999-git
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-curl-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-icu4c-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-libxml2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-llvm-project-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

# Configure the build components
cd ${STAGE_ROOT}
CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    -Wno-implicit-int-float-conversion \
    -Wno-nonnull \
    -Wno-pointer-sign \
    -Wno-switch \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CXXFLAGS} \
" \
SWIFTCFLAGS="\
    -use-ld=${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-mslink \
    ${SWIFTCFLAGS} \
" \
package-cmake \
    -Ddispatch_DIR=/sources/build-staging/swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DICU_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DICU_LIBRARY=${PACKAGE_PREFIX}/lib/libicudataswift.dll.a \
    -DICU_I18N_LIBRARY_RELEASE=${PACKAGE_PREFIX}/lib/libicui18nswift.dll.a \
    -DICU_UC_LIBRARY_RELEASE=${PACKAGE_PREFIX}/lib/libicuucswift.dll.a \
    -DCURL_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DCURL_LIBRARY=${PACKAGE_PREFIX}/lib/libcurl_imp.lib \
    -DLIBXML2_INCLUDE_DIR=${PACKAGE_PREFIX}/include/libxml2 \
    -DLIBXML2_LIBRARY=${PACKAGE_PREFIX}/lib/libxml2.dll.a \
    -DOPENSSL_CRYPTO_LIBRARY=${PACKAGE_PREFIX}/lib/libcrypto.dll..a \
    -DOPENSSL_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DOPENSSL_SSL_LIBRARY=${PACKAGE_PREFIX}/lib/libssl.dll.a \
    ${SOURCE_ROOT}

# Build the components
ninja-build

mv ${INSTALL_ROOT}${PACKAGE_PREFIX}/lib/swift/windows/*.a \
   ${INSTALL_ROOT}${PACKAGE_PREFIX}/lib/swift/windows/${HOST_PROCESSOR}

# Build the package
deb-package-build
