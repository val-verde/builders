#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=libcxx
export SOURCE_ROOT=/sources/llvm-project/${SOURCE_PACKAGE_NAME}
export SOURCE_PACKAGE_VERSION=9999-git
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export QUALIFIED_PACKAGE_NAME=${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export INSTALL_ROOT=${TEMPDIR}/org.${PACKAGE_BASE_NAME}/${QUALIFIED_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export LLVM_NATIVE_STAGE_ROOT=${LLVM_NATIVE_STAGE_ROOT:-/sources/build-staging/llvm-project-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}}
export DEPENDS="${PACKAGE_BASE_NAME}-libcxxabi-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0)"

# Configure the package
mkdir -p ${STAGE_ROOT} ${INSTALL_ROOT}
cd ${STAGE_ROOT}

if [ -n "${ENABLE_MUSL_LIBC}" ]; then
    LIBC_CMD="-DLIBCXX_HAS_MUSL_LIBC=TRUE"
fi

CXXFLAGS="\
    -nostdlib++ \
    -D_LIBCXXABI_BUILDING_LIBRARY \
    -Wno-macro-redefined \
    -Wno-unused-command-line-argument \
    ${CXXFLAGS} \
" \
LDFLAGS="\
    -L${PACKAGE_PREFIX}/lib \
    ${LDFLAGS} \
" \
${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DLIBCXX_CXX_ABI=libcxxabi \
    -DLIBCXX_CXX_ABI_INCLUDE_PATHS=${PACKAGE_PREFIX}/include \
    -DLIBCXX_ENABLE_ABI_LINKER_SCRIPT=FALSE \
    -DLIBCXX_ENABLE_ASSERTIONS=FALSE \
    -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=TRUE \
    -DLIBCXX_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXX_ENABLE_FILESYSTEM=FALSE \
    -DLIBCXX_ENABLE_NEW_DELETE_DEFINITIONS=FALSE \
    -DLIBCXX_ENABLE_RTTI=TRUE \
    -DLIBCXX_ENABLE_STATIC=FALSE \
    -DLIBCXX_ENABLE_SHARED=TRUE \
    -DLIBCXX_ENABLE_STATIC=FALSE \
    -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=TRUE \
    -DLIBCXX_ENABLE_THREADS=TRUE \
    -DLIBCXX_HAS_PTHREAD_API=TRUE \
    -DLIBCXX_HAS_WIN32_THREAD_API=FALSE \
    -DLIBCXX_INCLUDE_BENCHMARKS=FALSE \
    -DLIBCXX_INCLUDE_DOCS=FALSE \
    -DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=TRUE \
    -DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=FALSE \
    -DLIBCXX_USE_COMPILER_RT=TRUE \
    -DLLVM_CONFIG_PATH=${LLVM_NATIVE_STAGE_ROOT}/bin/llvm-config \
    "${LIBC_CMD}" \
    ${SOURCE_ROOT}

# Build the components
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build

# Build the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-${PACKAGE_CLASS}-build

# Install the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-install
