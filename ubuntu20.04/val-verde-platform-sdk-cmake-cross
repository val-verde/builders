#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=cmake
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

# Configure the build
rm -rf ${SOURCE_ROOT}
git clone https://github.com/val-verde/${SOURCE_PACKAGE_NAME}.git --single-branch --branch dutch-master ${SOURCE_ROOT}
wget https://raw.githubusercontent.com/libarchive/libarchive/master/contrib/android/include/android_lf.h \
     -O ${SOURCE_ROOT}/Utilities/cmlibarchive/libarchive/android_lf.h

mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

if [ "${HOST_OS}" = "mingw32" ]; then
    CMake_HAVE_CXX_FILESYSTEM=FALSE
else
    CMake_HAVE_CXX_FILESYSTEM=TRUE
fi

${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DBUILD_TESTING=FALSE \
    -DCMake_HAVE_CXX_FILESYSTEM=${CMake_HAVE_CXX_FILESYSTEM} \
    -DCMake_HAVE_CXX_UNIQUE_PTR=TRUE \
    -DHAVE_POLL_FINE_EXITCODE=0 \
    -DHAVE_POLL_FINE_EXITCODE__TRYRUN_OUTPUT=1 \
    ${SOURCE_ROOT}

# Build the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-build

# Install the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-install
