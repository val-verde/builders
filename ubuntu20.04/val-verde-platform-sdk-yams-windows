#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=yams
export SOURCE_PACKAGE_VERSION=9999-git

# Source package build helper functions
source /sources/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-llvm-project-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-xctest-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

# Configure the build components
cd ${STAGE_ROOT}

CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CXXFLAGS} \
" \
SWIFTCFLAGS="\
    -use-ld=${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-mslink \
    ${SWIFTCFLAGS} \
" \
package-cmake \
    -Ddispatch_DIR=/sources/build-staging/swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DBUILD_TESTING=FALSE \
    -DFoundation_DIR=/sources/build-staging/swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    ${SOURCE_ROOT}

# Build the components
ninja-build

# Build the package
deb-package-build
