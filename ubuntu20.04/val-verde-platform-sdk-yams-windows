#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=yams
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}

# Configure the package
mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

export CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CFLAGS} \
"
export CXXFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CXXFLAGS} \
"
export SWIFTCFLAGS="\
    -sdk ${SYSROOT} \
    -use-ld=${PACKAGE_ROOT}/bin/${PACKAGE_BASE_NAME}-platform-sdk-mslink \
    -L${SYSROOT}/usr/lib/swift/windows/${HOST_PROCESSOR} \
    ${SWIFTCFLAGS} \
"
${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -Ddispatch_DIR=/sources/build-staging/swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}/cmake/modules \
    -DCMAKE_INSTALL_PREFIX=${STAGE_ROOT}/install${PACKAGE_PREFIX} \
    -DCMAKE_Swift_COMPILER=${PACKAGE_ROOT}/bin/${PACKAGE_BASE_NAME}-platform-sdk-swiftc \
    -DCMAKE_Swift_COMPILER_TARGET=${HOST_TRIPLE} \
    -DCMAKE_Swift_FLAGS="${SWIFTCFLAGS}" \
    -DFoundation_DIR=/sources/build-staging/swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}/cmake/modules \
    ${SOURCE_ROOT}

# Build the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build

# Build the package
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build
