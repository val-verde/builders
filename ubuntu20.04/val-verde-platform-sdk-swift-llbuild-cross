#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=swift-llbuild
export SOURCE_PACKAGE_VERSION=9999-git
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}

# Source package build helper functions
source /sources/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-llvm-project-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-sqlite-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

# Configure the build components
GIT_URL="https://github.com/${VAL_VERDE_GH_TEAM}/${SOURCE_PACKAGE_NAME}.git" \
git-clone val-verde-mainline

cd ${STAGE_ROOT}
package-cmake \
    -Ddispatch_DIR=/sources/build-staging/swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DFoundation_DIR=/sources/build-staging/swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DLLBUILD_SUPPORT_BINDINGS=Swift \
    -DSQLite3_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DSQLite3_LIBRARY=${PACKAGE_PREFIX}/lib/libsqlite3.so \
    ${SOURCE_ROOT}

# Build the components
ninja-build

rsync -aPx ${STAGE_ROOT}/lib/*.so* \
           ${INSTALL_PREFIX}/lib

# Build the package
deb-package-build
