#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=swift-lldb
export SOURCE_ROOT=/sources/llvm-project/lldb
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export LLVM_SOURCE_ROOT=/sources/llvm-project
export LLVM_NATIVE_STAGE_ROOT=${LLVM_NATIVE_STAGE_ROOT:-/sources/build-staging/llvm-project-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}}
export LLVM_STAGE_ROOT=/sources/build-staging/llvm-project-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export SWIFT_NATIVE_STAGE_ROOT=${SWIFT_NATIVE_STAGE_ROOT:-/sources/build-staging/swift-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}}
export SWIFT_STAGE_ROOT=/sources/build-staging/swift-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

# Configure the package
mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

CFLAGS="\
    -Wno-register \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -Wno-register \
    ${CXXFLAGS} \
" \
${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DClang_DIR=${LLVM_STAGE_ROOT}/lib/cmake/clang \
    -DCLANG_LINK_CLANG_DYLIB=TRUE \
    -DCMAKE_EXE_LINKER_FLAGS="${LDFLAGS} ${LIBS} -O2" \
    -DCURSES_INCLUDE_DIRS=${PACKAGE_PREFIX}/include/ncurses \
    -DCURSES_LIBRARIES="${PACKAGE_PREFIX}/lib/libncurses.so" \
    -DLibEdit_INCLUDE_DIRS=${PACKAGE_PREFIX}/include \
    -DLibEdit_LIBRARIES=${PACKAGE_PREFIX}/lib/libedit.so \
    -DLIBLZMA_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DLIBLZMA_LIBRARY=${PACKAGE_PREFIX}/lib/liblzma.so \
    -DLIBXML2_INCLUDE_DIR=${PACKAGE_PREFIX}/include/libxml2 \
    -DLIBXML2_LIBRARY=${PACKAGE_PREFIX}/lib/libxml2.so \
    -DLLDB_ENABLE_PYTHON=TRUE \
    -DLLDB_ENABLE_SWIFT_SUPPORT=TRUE \
    -DLLDB_ENABLE_WERROR=FALSE \
    -DLLDB_INCLUDE_TESTS=FALSE \
    -DLLDB_PATH_TO_NATIVE_SWIFT_BUILD=${SWIFT_NATIVE_STAGE_ROOT}/lib/cmake/swift \
    -DLLDB_PYTHON_DEFAULT_RELATIVE_PATH=lib/python2.7 \
    -DLLDB_TABLEGEN=/sources/build-staging/swift-lldb-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}/bin/lldb-tblgen \
    -DLLVM_BUILD_LIBRARY_DIR=${LLVM_STAGE_ROOT}/lib \
    -DLLVM_BUILD_MAIN_SRC_DIR=${LLVM_SOURCE_ROOT}/llvm \
    -DLLVM_DIR=${LLVM_STAGE_ROOT}/lib/cmake/llvm \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_ASSERTIONS=FALSE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LLD=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_INCLUDE_TESTS=FALSE \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=TRUE \
    -DLLVM_LINK_LLVM_DYLIB=TRUE \
    -DLLVM_MAIN_INCLUDE_DIR=${LLVM_SOURCE_ROOT}/llvm/include \
    -DLLVM_TABLEGEN=${LLVM_NATIVE_STAGE_ROOT}/bin/llvm-tblgen \
    -DNATIVE_Clang_DIR=${LLVM_NATIVE_STAGE_ROOT}/lib/cmake/clang \
    -DNATIVE_LLVM_DIR=${LLVM_NATIVE_STAGE_ROOT}/lib/cmake/lib \
    -DPANEL_LIBRARIES=${PACKAGE_PREFIX}/lib/libpanel.so \
    -DPYTHON_EXECUTABLE=/usr/bin/python2 \
    -DPYTHON_INCLUDE_DIRS=${PACKAGE_PREFIX}/include/python2.7 \
    -DPYTHON_LIBRARIES=${PACKAGE_PREFIX}/lib/libpython2.7.so \
    -DSwift_DIR=${SWIFT_STAGE_ROOT}/lib/cmake/swift \
    -DSWIG_EXECUTABLE=/usr/bin/swig \
    ${SOURCE_ROOT}

# Package the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build

# Build the package
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-install
