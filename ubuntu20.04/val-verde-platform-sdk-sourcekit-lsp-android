#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=sourcekit-lsp
export SOURCE_PACKAGE_VERSION=9999-git
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export QUALIFIED_PACKAGE_NAME=${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export INSTALL_ROOT=${TEMPDIR}/org.${PACKAGE_BASE_NAME}/${QUALIFIED_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export DEPENDS="\
    ${PACKAGE_BASE_NAME}-swift-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"
# Configure the package
rm -rf ${SOURCE_ROOT}
git clone https://github.com/${PACKAGE_BASE_NAME}/${SOURCE_PACKAGE_NAME}.git \
          --branch dutch-android-master \
          --single-branch \
          ${SOURCE_ROOT}

mkdir -p ${STAGE_ROOT} ${INSTALL_ROOT}
cd ${SOURCE_ROOT}

if [ "${HOST_OS_API_LEVEL}" -lt "28" ]; then
    SWIFT_BUILD_FLAGS="\
        -Xswiftc -DDISABLE_POSIX_SPAWN \
        ${SWIFT_BUILD_FLAGS} \
    "
fi

# Build the components
SWIFT_BUILD_FLAGS="\
    -Xcc -D__GLIBC_PREREQ(a,b)=0 \
    -Xlinker -lc++ \
    -Xlinker -lncurses \
    -Xlinker -lunwind \
    ${SWIFT_BUILD_FLAGS} \
" \
${PACKAGE_BASE_NAME}-platform-sdk-swift-build

cd ${STAGE_ROOT}

mkdir -p ${INSTALL_ROOT}${PACKAGE_PREFIX}/bin
cp `find -type f -name sourcekit-lsp\*` \
   ${INSTALL_ROOT}${PACKAGE_PREFIX}/bin

# Build the package
source ${BUILDER_SCRIPT_PATH}CKAGE_BASE_NAME}-platform-sdk-package-${PACKAGE_CLASS}-build

# Install the package
source ${BUILDER_SCRIPT_PATH}CKAGE_BASE_NAME}-platform-sdk-package-install
