#!/bin/bash

set -e

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=lua
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export QUALIFIED_PACKAGE_NAME=${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export INSTALL_ROOT=${TEMPDIR}/org.${VAL_VERDE_GH_TEAM}/${QUALIFIED_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export DEPENDS="${PACKAGE_BASE_NAME}-zlib-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0)"

# Configure the build components
rm -rf ${STAGE_ROOT}
GIT_URL="https://github.com/${SOURCE_PACKAGE_NAME}/${SOURCE_PACKAGE_NAME}.git" \
git-clone master

rsync -aPx ${SOURCE_ROOT}/* \
           ${STAGE_ROOT}/

# Build the components
if [ "${HOST_OS}" = "mingw32" ]; then
    MYLDFLAGS=""
else
    CFLAGS="\
        -fPIC \
        ${CFLAGS} \
    "
    MYCFLAGS="\
        -DDLUA_USE_LINUX \
    "
    MYLDFLAGS="\
        -Wl,-E \
    "
fi

mkdir -p ${INSTALL_ROOT}${PACKAGE_PREFIX}
cd ${STAGE_ROOT}

ARFLAGS="rc"
MYLIBS="\
    -lm \
"
AR=${AR:-"${BUILD_PACKAGE_PREFIX}/bin/llvm-ar ${ARFLAGS}"}
CC=${CC:-${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-clang}
CFLAGS=`echo ${CFLAGS} | xargs`
MAKE_PROGRAM=${MAKE_PROGRAM:-${BUILD_PACKAGE_PREFIX}/bin/make}
MYCFLAGS=`echo ${MYCFLAGS} | xargs`
MYLDFLAGS=`echo ${MYLDFLAGS} | xargs`
MYLIBS=`echo ${MYLIBS} | xargs`
RANLIB=${RANLIB:-${BUILD_PACKAGE_PREFIX}/bin/llvm-ranlib}

${MAKE_PROGRAM} \
    AR="${AR}" \
    CC="${CC}" \
    CFLAGS="${CFLAGS}" \
    MYCFLAGS="${MYCFLAGS}" \
    MYLDFLAGS="${MYLDFLAGS}" \
    MYLIBS="${MYLIBS}" \
    RANLIB="${RANLIB}"

rsync -aPx *.h \
           ${INSTALL_ROOT}${PACKAGE_PREFIX}/include/
echo "
#pragma once

extern \"C\" {
    #include \"lua.h\"
    #include \"lualib.h\"
    #include \"lauxlib.h\"
}
" > ${INSTALL_ROOT}${PACKAGE_PREFIX}/include/lua.hpp

rsync -aPx liblua.a \
           ${INSTALL_ROOT}${PACKAGE_PREFIX}/lib/

mkdir -p ${INSTALL_ROOT}${PACKAGE_PREFIX}/lib/pkgconfig/
echo "
V=git
R=git

prefix=${PACKAGE_PREFIX}
INSTALL_INC=\${prefix}/include
INSTALL_LIB=\${prefix}/lib
exec_prefix=\${prefix}
libdir=\${exec_prefix}/lib
includedir=\${prefix}/include

Name: Lua
Description: An Extensible Extension Language
Version: \${R}
Requires:
Libs: -L\${libdir} -llua -lm -ldl
Cflags: -I\${includedir}
" > ${INSTALL_ROOT}${PACKAGE_PREFIX}/lib/pkgconfig/lua.pc

# Build the package
deb-package-build

# Install the package
deb-package-install
