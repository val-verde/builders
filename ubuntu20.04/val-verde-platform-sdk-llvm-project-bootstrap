#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=llvm-project
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}-${HOST_PROCESSOR}

# Configure the build
git clone https://github.com/val-verde/${SOURCE_PACKAGE_NAME}.git --single-branch --branch dutch-master ${SOURCE_ROOT}
mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

export BINDIR=/usr/bin \
       CC=clang \
       CXX=clang++
${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
    -DCLANG_DEFAULT_RTLIB=compiler-rt \
    -DCLANG_INCLUDE_DOCS=FALSE \
    -DCLANG_INCLUDE_TESTS=FALSE \
    -DCLANG_LINK_CLANG_DYLIB=FALSE \
    -DCLANG_TOOL_ARCMT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_CLANG_IMPORT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_CLANG_REFACTOR_TEST_BUILD=FALSE \
    -DCLANG_TOOL_C_ARCMT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_C_INDEX_TEST_BUILD=FALSE \
    -DCMAKE_INSTALL_PREFIX=${STAGE_ROOT}/install${PACKAGE_PREFIX} \
    -DCOMPILER_RT_CAN_EXECUTE_TESTS=FALSE \
    -DCOMPILER_RT_INCLUDE_TESTS=FALSE \
    -DHAVE_CXX_ATOMICS_WITH_LIB=TRUE \
    -DHAVE_CXX_ATOMICS64_WITH_LIB=TRUE \
    -DHAVE_GNU_POSIX_REGEX=TRUE \
    -DHAVE_INOTIFY=TRUE \
    -DHAVE_LIBUNWIND=TRUE \
    -DHAVE_THREAD_SAFETY_ATTRIBUTES=TRUE \
    -DLIBCXX_ENABLE_ABI_LINKER_SCRIPT=FALSE \
    -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=TRUE \
    -DLIBCXX_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXX_ENABLE_FILESYSTEM=TRUE \
    -DLIBCXX_ENABLE_RTTI=TRUE \
    -DLIBCXX_ENABLE_STATIC=FALSE \
    -DLIBCXX_ENABLE_SHARED=TRUE \
    -DLIBCXX_ENABLE_STATIC=FALSE \
    -DLIBCXX_ENABLE_THREADS=TRUE \
    -DLIBCXX_HAS_PTHREAD_API=TRUE \
    -DLIBCXX_HAS_WIN32_THREAD_API=FALSE \
    -DLIBCXX_INCLUDE_BENCHMARKS=FALSE \
    -DLIBCXX_INCLUDE_DOCS=FALSE \
    -DLIBCXX_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXXABI_ENABLE_STATIC=FALSE \
    -DLIBCXXABI_ENABLE_SHARED=TRUE \
    -DLIBCXXABI_ENABLE_THREADS=TRUE \
    -DLIBCXXABI_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_LLVM_UNWINDER=TRUE \
    -DLIBCXXABI_USE_SJLJ_EXCEPTIONS=FALSE \
    -DLIBUNWIND_USE_COMPILER_RT=TRUE \
    -DLLVM_BUILD_EXAMPLES=FALSE \
    -DLLVM_BUILD_DOCS=FALSE \
    -DLLVM_BUILD_LLVM_DYLIB=FALSE \
    -DLLVM_BUILD_TESTS=FALSE \
    -DLLVM_BUILD_UTILS=FALSE \
    -DLLVM_DEFAULT_TARGET_TRIPLE=${HOST_PROCESSOR}-unknown-${HOST_KERNEL}-${HOST_OS} \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_FFI=TRUE \
    -DLLVM_ENABLE_LIBCXX=FALSE \
    -DLLVM_ENABLE_LLD=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_PROJECTS="clang;compiler-rt;libcxx;libcxxabi;libunwind;lld" \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_ENABLE_THREADS=TRUE \
    -DLLVM_ENABLE_UNWIND_TABLES=FALSE \
    -DLLVM_ENABLE_WARNINGS=FALSE \
    -DLLVM_ENABLE_Z3_SOLVER=TRUE \
    -DLLVM_ENABLE_ZLIB=TRUE \
    -DLLVM_ENABLE_Z3_SOLVER=TRUE \
    -DLLVM_HOST_TRIPLE=${HOST_PROCESSOR}-unknown-${HOST_KERNEL}-${HOST_OS} \
    -DLLVM_INCLUDE_DOCS=FALSE \
    -DLLVM_INCLUDE_EXAMPLES=FALSE \
    -DLLVM_INCLUDE_GO_TESTS=FALSE \
    -DLLVM_INCLUDE_TESTS=FALSE \
    -DLLVM_INCLUDE_UTILS=TRUE \
    -DLLVM_LINK_LLVM_DYLIB=FALSE \
    -DLLVM_OPTIMIZED_TABLEGEN=TRUE \
    -DLLVM_POLLY_LINK_INTO_TOOLS=TRUE \
    -DLLVM_TARGETS_TO_BUILD=X86 \
    -DLLVM_TOOL_LLVM_C_TEST_BUILD=FALSE \
    -DLLVM_USE_HOST_TOOLS=TRUE \
    -DLLVM_USE_NEWPM=TRUE \
    -DLLVM_USE_RELATIVE_PATHS_IN_DEBUG_INFO=TRUE \
    -DLLVM_USE_RELATIVE_PATHS_IN_FILES=TRUE \
    -DLLVM_Z3_INSTALL_DIR=${PACKAGE_PREFIX} \
    -DPYTHON_EXECUTABLE=/usr/bin/python2 \
    -DSANITIZER_CXX_ABI=libc++ \
    -DZ3_RETURNCODE=1 \
    -DZ3_RETURNCODE__TRYRUN_OUTPUT=4.8.0 \
    ${SOURCE_ROOT}/llvm

# Build the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build

# Build the package
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-install

# Clean up packages
apt remove -y clang libllvm10 lld
apt autoremove -y
