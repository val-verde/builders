#!/bin/bash

set -e

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

# Set all environment vars
export SOURCE_PACKAGE_NAME=sourcekit-lsp
export SOURCE_PACKAGE_VERSION=9999-git
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export QUALIFIED_PACKAGE_NAME=${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export INSTALL_ROOT=${TEMPDIR}/org.${VAL_VERDE_GH_TEAM}/${QUALIFIED_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export DEPENDS="\
    ${PACKAGE_BASE_NAME}-swift-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

# Configure the build components
rm -rf ${STAGE_ROOT}
GIT_URL="https://github.com/${VAL_VERDE_GH_TEAM}/${SOURCE_PACKAGE_NAME}.git" \
git-clone val-verde-mainline

mkdir -p ${STAGE_ROOT} ${INSTALL_ROOT}
cd ${SOURCE_ROOT}

# Build the components
SDK_PLATFORM_DIR=`echo ${SYSTEM_NAME} | tr '[:upper:]' '[:lower:]'`
SWIFT_BUILD_FLAGS="\
    -Xcc -DLLVM_ON_WIN32=1 \
    -Xcc -I${STAGE_ROOT}/checkouts/swift-llbuild/lib/llvm/Support \
    -Xlinker -lc++ \
    -Xswiftc -I${PACKAGE_PREFIX}/lib/swift/${SDK_PLATFORM_DIR} \
    -Xswiftc -I${PACKAGE_PREFIX}/lib/swift/${SDK_PLATFORM_DIR}/Block \
    ${SWIFT_BUILD_FLAGS} \
" \
${VAL_VERDE_GH_TEAM}-platform-sdk-swift-build

cd ${STAGE_ROOT}
mkdir -p ${INSTALL_ROOT}${PACKAGE_PREFIX}/bin
cp `find -type f -name sourcekit-lsp\*` \
   ${INSTALL_ROOT}${PACKAGE_PREFIX}/bin

# Build the package
deb-package-build

# Install the package
deb-package-install
