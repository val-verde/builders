#!/bin/bash

set -e

export COMPILER_TARGET=${HOST_PROCESSOR}-unknown-windows-gnu

# windows libdispatch build
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-corelibs-libdispatch-windows

# windows foundation build
DISABLE_POLLY=TRUE \
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-corelibs-foundation-windows

# windows xctest build
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-corelibs-xctest-windows

# windows llbuild build
DISABLE_POLLY=TRUE \
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-llbuild-windows

# windows swift-tools-support-core build
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-tools-support-core-windows

# windows yams build
bash ${PACKAGE_BASE_NAME}-platform-sdk-yams-windows

# windows swift-argument-parser build
CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CXXFLAGS} \
" \
SWIFTCFLAGS="\
    -use-ld=${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-mslink \
    -L${PACKAGE_PREFIX}/lib/swift/windows/${HOST_PROCESSOR} \
    ${SWIFTCFLAGS} \
" \
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-argument-parser-cross

# windows swift-driver build
CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CXXFLAGS} \
" \
SWIFTCFLAGS="\
    -use-ld=${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-mslink \
    -L${PACKAGE_PREFIX}/lib/swift/windows/${HOST_PROCESSOR} \
    ${SWIFTCFLAGS} \
" \
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-driver-cross

# windows swiftpm build
CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CXXFLAGS} \
" \
SWIFTCFLAGS="\
    -use-ld=${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-mslink \
    -L${PACKAGE_PREFIX}/lib/swift/windows/${HOST_PROCESSOR} \
    ${SWIFTCFLAGS} \
" \
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-package-manager-cross

SWIFT_PM_PACKAGES=`echo ${SWIFT_PM_PACKAGES} | sed "s|${PACKAGE_BASE_NAME}|${DEB_PATH}/${PACKAGE_BASE_NAME}|g"`;
SWIFT_PM_PACKAGES=`echo ${SWIFT_PM_PACKAGES} | sed "s|${BUILD_ARCH}|${BUILD_ARCH}.deb|g"`;
dpkg -i ${SWIFT_PM_PACKAGES} \
    ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-argument-parser-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
    ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
    ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
    ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-driver-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
    ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-llbuild-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
    ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-package-manager-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
    ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-tools-support-core-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
    ${DEB_PATH}/${PACKAGE_BASE_NAME}-swift-corelibs-xctest-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb \
    ${DEB_PATH}/${PACKAGE_BASE_NAME}-yams-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}.deb


# windows swift-syntax build
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-syntax-cross

# windows swift-format build
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-format-cross

# windows swift-doc build
bash ${PACKAGE_BASE_NAME}-platform-sdk-swift-doc-cross

# windows sourcekit-lsp build

DISABLE_POLLY=TRUE \
bash ${PACKAGE_BASE_NAME}-platform-sdk-sourcekit-lsp-windows
