#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=libarchive
export SOURCE_PACKAGE_VERSION=3.4.3
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}

# Source package build helper functions
source /sources/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-bzip2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-libiconv-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-xz-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-zlib-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

GIT_URL=https://github.com/${VAL_VERDE_GH_TEAM}/${SOURCE_PACKAGE_NAME}.git \
git-clone val-verde-mainline

cd ${STAGE_ROOT}

if [ "${HOST_OS}" = "mingw32" ]; then
    LIBLZMA_LIBRARY=${PACKAGE_PREFIX}/lib/liblzma.dll.a
    ZLIB_LIBRARY=${PACKAGE_PREFIX}/lib/libz.dll.a
else
    export DEPENDS="\
        ${PACKAGE_BASE_NAME}-acl-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
	${DEPENDS} \
    "
    ACL_LIBRARY=${PACKAGE_PREFIX}/lib/libacl.so
    LIBLZMA_LIBRARY=${PACKAGE_PREFIX}/lib/liblzma.so
    ZLIB_LIBRARY=${PACKAGE_PREFIX}/lib/libz.so
fi

package-cmake \
    -DACL_LIBRARY=${ACL_LIBRARY} \
    -DBZIP2_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DBZIP2_LIBRARIES=${PACKAGE_PREFIX}/lib/libbz2.a \
    -DENABLE_CAT_SHARED=TRUE \
    -DENABLE_CPIO_SHARED=TRUE \
    -DENABLE_LibGCC=FALSE \
    -DENABLE_TAR_SHARED=TRUE \
    -DENABLE_TEST=FALSE \
    -DLIBLZMA_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DLIBLZMA_LIBRARY=${LIBLZMA_LIBRARY} \
    -DZLIB_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DZLIB_LIBRARY=${ZLIB_LIBRARY} \
    -DZLIB_WINAPI_EXITCODE=0 \
    -DZLIB_WINAPI_EXITCODE__TRYRUN_OUTPUT=1 \
    ${SOURCE_ROOT}

# Build the components
ninja-build

# Build the package
deb-package-build

# Install the package
deb-package-install
