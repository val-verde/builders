#!/bin/bash

set -e

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

BINDIR=${BINDIR:-${BUILD_PACKAGE_PREFIX}/bin}
BINTOOLS_PREFIX=${BINTOOLS_PREFIX:-llvm-}
BINTOOLS_PATH_PREFIX=${BINDIR}/${BINTOOLS_PREFIX}
CONFIGURE_HOST_TRIPLE=${CONFIGURE_HOST_TRIPLE:-${HOST_TRIPLE}}
LINKER_OPTIMIZATION_LEVEL=${LINKER_OPTIMIZATION_LEVEL:-2}
OPTIMIZATION_FLAGS=${OPTIMIZATION_FLAGS:-"-DNDEBUG"}
OPTIMIZATION_LEVEL=${OPTIMIZATION_LEVEL:-z}
SYSROOT=${SYSROOT:-${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/sysroot}

if [ -z "${DISABLE_POLLY}" ]; then
    CFLAGS="\
        -mllvm -polly \
        ${CFLAGS} \
    "
    CXXFLAGS="\
        -mllvm -polly \
        ${CXXFLAGS} \
    "
fi

if [ "${BUILD_TRIPLE}" != "${HOST_TRIPLE}" ]; then
    HOST_TOOL_FLAGS=`echo "\
        --sysroot=${SYSROOT} \
        --target=${HOST_TRIPLE} \
    " | xargs`
    HOST_LDFLAGS=`echo "\
        --sysroot=${SYSROOT} \
    " | xargs`
fi

if [ -z "${DISABLE_STRIP}" ]; then
    LDFLAGS="\
        -s \
        ${LDFLAGS} \
    "
fi

if [ -z "${ENABLE_LLVM_VERIFIER}" ]; then
    LDFLAGS="\
        -disable-verify \
        ${LDFLAGS} \
    "
fi

if [ -n "${ENABLE_FLTO}" ]; then
    FLTO_OPTION=`echo ${ENABLE_FLTO} | tr '[:upper:]' '[:lower:]'`
    FLTO_CFLAG="-flto=${FLTO_OPTION}"
    LDFLAGS="\
        ${FLTO_CFLAG} \
        ${LDFLAGS} \
    "
fi

AR=${OBJCOPY:-${BINTOOLS_PATH_PREFIX}ar}
AS=${CC:-${BINDIR}/clang}
CC=${CC:-${BINDIR}/clang}
CCLD=${CCLD:-${BINDIR}/clang}
CPP=${CPP:-${BINDIR}/clang-cpp}
CXX=${CXX:-${BINDIR}/clang++}
DLLTOOL=${DLLTOOL:-${BINTOOLS_PATH_PREFIX}dlltool}
LD=${LD:-${BINDIR}/ld.lld}
MANIFEST_TOOL=${MANIFEST_TOOL:-${BINTOOLS_PATH_PREFIX}mt}
NM=${NM:-${BINTOOLS_PATH_PREFIX}nm}
OBJCOPY=${OBJCOPY:-${BINTOOLS_PATH_PREFIX}objcopy}
OBJDUMP=${OBJDUMP:-${BINTOOLS_PATH_PREFIX}objdump}
RANLIB=${RANLIB:-${BINTOOLS_PATH_PREFIX}ranlib}
RC=${RC:-${BINDIR}/${VAL_VERDE_GH_TEAM}-platform-sdk-rc}
PKG_CONFIG_PATH=${PKG_CONFIG_PATH:-"${PACKAGE_PREFIX}/lib/pkgconfig"}
READELF=${READELF:-${BINTOOLS_PATH_PREFIX}readelf}
SIZE=${SIZE:-${BINTOOLS_PATH_PREFIX}size}
STRINGS=${STRINGS:-${BINTOOLS_PATH_PREFIX}strings}
STRIP=${STRIP:-${BINTOOLS_PATH_PREFIX}strip}

if [ -n "${HOST_ARCH}" ]; then
    ARCH_FLAGS="\
        -march=${HOST_ARCH} \
        ${ARCH_FLAGS} \
    "
fi

if [ -n "${HOST_CPU}" ]; then
    ARCH_FLAGS="\
        -mtune=${HOST_CPU} \
        ${ARCH_FLAGS} \
    "
fi

ASFLAGS=`echo "\
    ${ARCH_FLAGS} \
    ${FLTO_CFLAG} \
    ${HOST_TOOL_FLAGS} \
    ${OPTIMIZATION_FLAGS} \
    ${ASMFLAGS} \
" | xargs`
CFLAGS=`echo "\
    ${ARCH_FLAGS} \
    ${FLTO_CFLAG} \
    ${HOST_TOOL_FLAGS} \
    ${OPTIMIZATION_FLAGS} \
    ${CFLAGS} \
" | xargs`
CPPFLAGS=`echo "\
    ${ARCH_FLAGS} \
    ${FLTO_CFLAG} \
    ${HOST_TOOL_FLAGS} \
    ${OPTIMIZATION_FLAGS} \
    ${CPPFLAGS} \
" | xargs`
CXXFLAGS=`echo "\
    ${ARCH_FLAGS} \
    ${FLTO_CFLAG} \
    ${HOST_TOOL_FLAGS} \
    ${OPTIMIZATION_FLAGS} \
    ${CXXFLAGS} \
" | xargs`
LDFLAGS=`echo "\
    ${FLTO_LDFLAG} \
    ${HOST_LDFLAGS} \
    ${LDFLAGS} \
" | xargs`
LIBS="${LIBS}"

create_host_tool ${AS} ASFLAGS ${STAGE_ROOT}/host-clang-as 
create_host_tool ${CC} CFLAGS ${STAGE_ROOT}/host-clang
create_host_tool ${CPP} CPPFLAGS ${STAGE_ROOT}/host-clang-cpp
create_host_tool ${CXX} CXXFLAGS ${STAGE_ROOT}/host-clang++
create_host_tool ${LD} LDFLAGS ${STAGE_ROOT}/host-clang-ld

AR=${AR} \
AS=${STAGE_ROOT}/host-clang-as \
ASFLAGS="-O${OPTIMIZATION_LEVEL}" \
CC=${STAGE_ROOT}/host-clang \
CFLAGS="-O${OPTIMIZATION_LEVEL}" \
CPP=${STAGE_ROOT}/host-clang-cpp \
CPPFLAGS="-O${OPTIMIZATION_LEVEL}" \
CXX=${STAGE_ROOT}/host-clang++ \
CXXFLAGS="-O${OPTIMIZATION_LEVEL}" \
DLLTOOL=${DLLTOOL} \
LD=${STAGE_ROOT}/host-clang-ld \
LDFLAGS="-O${LINKER_OPTIMIZATION_LEVEL}" \
LIBS="${LIBS}" \
LIBTOOLFLAGS="-avoid-version" \
MANIFEST_TOOL=${MANIFEST_TOOL} \
NM=${NM} \
OBJCOPY=${OBJCOPY} \
OBJDUMP=${OBJDUMP} \
PKG_CONFIG_PATH=${PKG_CONFIG_PATH} \
RANLIB=${RANLIB} \
RC=${RC} \
RCFLAGS=${RCFLAGS} \
READELF=${READELF} \
SIZE=${SIZE} \
STRIP=${STRIP} \
STRINGS=${STRINGS} \
WINDRES=${RC} \
"$@" \
    --build=${BUILD_TRIPLE} \
    --host=${CONFIGURE_HOST_TRIPLE} \
    ${CONFIGURE_FLAGS}
