#!/bin/bash

set -e

if [ "${ENABLE_FLTO}" = "Full" ]; then
    FLTO_CFLAG=-flto
    FLTO_LDFLAG="-s -O2"
fi

BINDIR=${PACKAGE_ROOT}/bin
OPTIMIZATION_LEVEL=${OPTIMIZATION_LEVEL:-z}
SYSROOT=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}/sysroot

AR=${BINDIR}/llvm-ar
AS=${BINDIR}/llvm-as
CC=${BINDIR}/${PACKAGE_BASE_NAME}-platform-sdk-clang
CPP="${CC} -E"
CXX=${BINDIR}/${PACKAGE_BASE_NAME}-platform-sdk-clang++
LD=${BINDIR}/ld.lld
NM=${BINDIR}/llvm-nm
OBJCOPY=${BINDIR}/llvm-objcopy
OBJDUMP=${BINDIR}/llvm-objdump
RANLIB=${BINDIR}/llvm-ranlib
READELF=${BINDIR}/llvm-readelf
SIZE=${BINDIR}/llvm-size
STRIP=${BINDIR}/llvm-strip
STRINGS=${BINDIR}/llvm-strings

"$@" AR=${AR} \
     AS=${AS} \
     CC=${CC} \
     CFLAGS="${ARCH_FLAGS} ${FLTO_CFLAG} -O${OPTIMIZATION_LEVEL} ${CFLAGS}" \
     CPP="${CPP}" \
     CXX=${CXX} \
     CXXFLAGS="${ARCH_FLAGS} ${FLTO_CFLAG} -O${OPTIMIZATION_LEVEL} ${CXXFLAGS}" \
     LD=${LD} \
     LDFLAGS="${ARCH_FLAGS} ${FLTO_LDFLAG} -lc++_shared --sysroot=${SYSROOT} ${LDFLAGS}" \
     LIBTOOLFLAGS="-avoid-version" \
     NM=${NM} \
     OBJDUMP=${OBJDUMP} \
     PKG_CONFIG_PATH=${PACKAGE_PREFIX}/lib/pkgconfig \
     RANLIB=${RANLIB} \
     READELF=${READELF} \
     SIZE=${SIZE} \
     STRIP=${STRIP} \
     STRINGS=${STRINGS} \
    --build=${BUILD_PROCESSOR}-${BUILD_KERNEL}-${BUILD_OS} \
    --host=${HOST_PROCESSOR}-${HOST_KERNEL}-${HOST_OS}
