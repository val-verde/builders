#!/bin/bash

set -e
# Replace all sources to ${PACKAGE_ROOT}/src/${PACKAGE_NAME}
# Replace all build-staging to ${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}/build
# SOURCE_ROOT to ${PACKAGE_ROOT}/src (global variable)
# All fetched resources should be tar'ed, alien'ed and stored in sources (and the deb packages here should be appended with src)
# Variable-ize where possible
# Intermediates where there are steps between ninja and ninja install, these should be 
# ${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_PROCESSOR}/build/${SOURCE_PACKAGE_NAME}
# Copy , chmod +x, stage into install and make deb files for each (cmake/clang++/swift build)
# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=llvm-project
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}-${HOST_PROCESSOR}

# Configure the package
rm -rf ${STAGE_ROOT}/*
cd ${STAGE_ROOT}
${BUILD_PROCESSOR}-${BUILD_KERNEL}-${BUILD_OS}-cmake \
    -DBUILD_SHARED_LIBS=TRUE \
    -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
    -DCLANG_DEFAULT_RTLIB=compiler-rt \
    -DCLANG_INCLUDE_DOCS=FALSE \
    -DCLANG_INCLUDE_TESTS=FALSE \
    -DCLANG_LINK_CLANG_DYLIB=FALSE \
    -DCLANG_TOOL_ARCMT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_CLANG_IMPORT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_CLANG_REFACTOR_TEST_BUILD=FALSE \
    -DCLANG_TOOL_C_ARCMT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_C_INDEX_TEST_BUILD=FALSE \
    -DCMAKE_INSTALL_PREFIX=${STAGE_ROOT}/install/${PACKAGE_PREFIX} \
    -DCOMPILER_RT_CAN_EXECUTE_TESTS=FALSE \
    -DHAVE_LIBUNWIND=TRUE \
    -DCOMPILER_RT_INCLUDE_TESTS=FALSE \
    -DHAVE_CXX_ATOMICS_WITH_LIB=TRUE \
    -DHAVE_CXX_ATOMICS64_WITH_LIB=TRUE \
    -DHAVE_GNU_POSIX_REGEX=TRUE \
    -DLIBCXX_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_LLVM_UNWINDER=TRUE \
    -DHAVE_INOTIFY=TRUE \
    -DHAVE_THREAD_SAFETY_ATTRIBUTES=TRUE \
    -DLIBUNWIND_USE_COMPILER_RT=TRUE \
    -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=FALSE \
    -DLIBCXX_ENABLE_SHARED=TRUE \
    -DLIBCXX_ENABLE_STATIC=FALSE \
    -DLIBCXX_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_LLVM_UNWINDER=TRUE \
    -DLIBOMPTARGET_DEP_LIBFFI_INCLUDE_DIR:PATH=/usr/include/${HOST_PROCESSOR}-${HOST_KERNEL}-${HOST_OS} \
    -DLIBOMPTARGET_DEP_LIBELF_LIBRARIES:FILEPATH=/usr/lib/${HOST_PROCESSOR}-${HOST_KERNEL}-${HOST_OS}/libelf.so \
    -DLIBOMPTARGET_NVPTX_ALTERNATE_HOST_COMPILER=gcc-8 \
    -DLIBUNWIND_USE_COMPILER_RT=TRUE \
    -DLLD_INCLUDE_TESTS=FALSE \
    -DLLVM_BUILD_EXAMPLES=FALSE \
    -DLLVM_BUILD_DOCS=FALSE \
    -DLLVM_BUILD_LLVM_DYLIB=FALSE \
    -DLLVM_BUILD_TESTS=FALSE \
    -DLLVM_BUILD_UTILS=TRUE \
    -DLLVM_DEFAULT_TARGET_TRIPLE=${HOST_PROCESSOR}-unknown-${HOST_KERNEL}-${HOST_OS} \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LLD=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;compiler-rt;libclc;libcxx;libcxxabi;libunwind;lld;mlir;openmp;parallel-libs;polly;pstl" \
    -DLLVM_ENABLE_UNWIND_TABLES=FALSE \
    -DLLVM_ENABLE_Z3_SOLVER=TRUE \
    -DLLVM_HOST_TRIPLE=${HOST_PROCESSOR}-unknown-${HOST_KERNEL}-${HOST_OS} \
    -DLLVM_INCLUDE_DOCS=FALSE \
    -DLLVM_INCLUDE_GO_TESTS=FALSE \
    -DLLVM_INCLUDE_EXAMPLES=FALSE \
    -DLLVM_INCLUDE_TESTS=FALSE \
    -DLLVM_INCLUDE_UTILS=TRUE \
    -DLLVM_LINK_LLVM_DYLIB=FALSE \
    -DSANITIZER_CXX_ABI=libc++ \
    -DLLVM_POLLY_LINK_INTO_TOOLS=TRUE \
    -DLLVM_TARGETS_TO_BUILD=all \
    -DLLVM_TOOL_LLVM_C_TEST_BUILD=FALSE \
    -DLLVM_USE_NEWPM=TRUE \
    ${SOURCE_ROOT}/llvm

ninja -j${NUM_PROCESSORS} MLIRCallOpInterfacesIncGen MLIRTypeInferOpInterfaceIncGen


# Build the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build

# Build the package
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-install


