#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=gcc
export SOURCE_PACKAGE_VERSION=10.1.0
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${TARGET_OS}${TARGET_OS_API_LEVEL}-${TARGET_PROCESSOR}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${TARGET_OS}${TARGET_OS_API_LEVEL}-${TARGET_PROCESSOR}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

cd /sources
wget -c https://ftp.gnu.org/gnu/${SOURCE_PACKAGE_NAME}/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}.tar.gz
tar -zxf ${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}.tar.gz

mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

BINDIR=${BUILD_PACKAGE_PREFIX}/bin
OPTIMIZATION_FLAGS=${OPTIMIZATION_FLAGS:-"-DNDEBUG"}

AS_FOR_TARGET=${AS_FOR_TARGET:-${BINDIR}/llvm-as}
LD_FOR_TARGET=${LD_FOR_TARGET:-${BINDIR}/ld.lld}
RC_FOR_TARGET=${RC_FOR_TARGET:-${BINDIR}/llvm-rc}
TARGET_SYSROOT=${TARGET_SYSROOT:-${PACKAGE_PREFIX}}
TARGET_TRIPLE=${TARGET_TRIPLE:-${TARGET_PROCESSOR}-${TARGET_KERNEL}-${TARGET_OS}${TARGET_OS_API_LEVEL}}

WARNING_CFLAGS="\
   -Wno-array-bounds \
   -Wno-cast-qual \
   -Wno-char-subscripts \
   -Wno-constant-logical-operand \
   -Wno-deprecated \
   -Wno-format-security \
   -Wno-gnu-zero-variadic-macro-arguments \
   -Wno-ignored-attributes \
   -Wno-misleading-indentation \
   -Wno-mismatched-tags \
   -Wno-missing-braces \
   -Wno-pedantic \
   -Wno-shift-count-overflow \
   -Wno-string-compare \
   -Wno-string-plus-int \
   -Wno-tautological-compare \
   -Wno-undefined-internal \
   -Wno-unknown-warning-option \
   -Wno-unused-command-line-argument \
   -Wno-unused-const-variable \
   -Wno-unused-function \
   -Wno-unused-parameter \
   -Wno-unused-private-field \
   -Wno-varargs \
"

CFLAGS_FOR_TARGET="${CFLAGS_FOR_TARGET} ${TARGET_ARCH_FLAGS} ${OPTIMIZATION_FLAGS} -O${OPTIMIZATION_LEVEL}"
CPPFLAGS_FOR_TARGET="${CFLAGS_FOR_TARGET} ${CPPFLAGS_FOR_TARGET}"
CXXFLAGS_FOR_TARGET="${CFLAGS_FOR_TARGET} ${CXXFLAGS_FOR_TARGET}"

CFLAGS="\
    ${CFLAGS} \
    ${WARNING_CFLAGS} \
" \
CPPFLAGS="\
    ${CPPFLAGS} \
    ${WARNING_CFLAGS} \
" \
CXXFLAGS="\
    ${CXXFLAGS} \
    ${WARNING_CFLAGS} \
" \
${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-configure \
    ${SOURCE_ROOT}/configure \
    --disable-bootstrap \
    --disable-gomp \
    --disable-libatomic \
    --disable-libgcc \
    --disable-libquadmath \
    --disable-libssp \
    --disable-multilib \
    --disable-werror \
    --enable-languages=c \
    --prefix=${STAGE_ROOT}/install${BUILD_PACKAGE_PREFIX} \
    --target=${TARGET_TRIPLE} \
    --with-build-sysroot=${TARGET_SYSROOT} \
    --with-native-system-header-dir=/include \
    --with-sysroot=${TARGET_SYSROOT} \
    AR_FOR_TARGET=${BINDIR}/llvm-ar \
    AS_FOR_TARGET="${AS_FOR_TARGET}" \
    CFLAGS_FOR_TARGET="${CFLAGS_FOR_TARGET}" \
    CPPFLAGS_FOR_TARGET="${CPPFLAGS_FOR_TARGET}" \
    CXXFLAGS_FOR_TARGET="${CXXFLAGS_FOR_TARGET}" \
    DLLTOOL_FOR_TARGET=${BINDIR}/llvm-dlltool \
    GCC_FOR_TARGET="${CC_FOR_TARGET}" \
    LIPO_FOR_TARGET=${BINDIR}/llvm-lipo \
    LD_FOR_TARGET="${LD_FOR_TARGET}" \
    LDFLAGS_FOR_TARGET="${LDFLAGS_FOR_TARGET}" \
    NM_FOR_TARGET=${BINDIR}/llvm-nm \
    OBJCOPY_FOR_TARGET=${BINDIR}/llvm-objcopy \
    OBJDUMP_FOR_TARGET=${BINDIR}/llvm-objdump \
    RANLIB_FOR_TARGET=${BINDIR}/llvm-ranlib \
    READELF_FOR_TARGET=${BINDIR}/llvm-readelf \
    RC_FOR_TARGET="${RC_FOR_TARGET}" \
    SIZE_FOR_TARGET=${BINDIR}/llvm-size \
    STRIP_FOR_TARGET=${BINDIR}/llvm-strip \
    STRINGS_FOR_TARGET=${BINDIR}/llvm-strings

# Build the package
make -j${NUM_PROCESSORS} all-gcc
make -j${NUM_PROCESSORS} install-gcc
rm -rf install${PACKAGE_PREFIX}/${TARGET_PROCESSOR}-${TARGET_KERNEL}-${TARGET_OS} \
       install${PACKAGE_PREFIX}/lib/gcc

source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-${PACKAGE_CLASS}-build

# Install the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-install