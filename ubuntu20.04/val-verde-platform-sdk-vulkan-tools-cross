#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=vulkan-tools
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

rm -rf ${SOURCE_ROOT}
git clone https://github.com/KhronosGroup/${SOURCE_PACKAGE_NAME}.git \
          --branch master \
          --single-branch \
          ${SOURCE_ROOT}

mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

if [ "${HOST_OS}" = "mingw32" ]; then
    LIB_SUFFIX=dll.a
    LIB_VERSION_SUFFIX=-1
    export LIBS="\
        -lgdi32 \
        ${LDFLAGS} \
    "
else
    LIB_SUFFIX=so
fi

${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DBUILD_ICD=FALSE \
    -DBUILD_WSI_DIRECTFB_SUPPORT=FALSE \
    -DBUILD_WSI_WAYLAND_SUPPORT=FALSE \
    -DBUILD_WSI_XLIB_SUPPORT=FALSE \
    -DGLSLANG_VALIDATOR=${BUILD_PACKAGE_PREFIX}/bin/glslangValidator \
    -DVulkan_LIBRARY=${PACKAGE_PREFIX}/lib/libvulkan${LIB_VERSION_SUFFIX}.${LIB_SUFFIX} \
    ${SOURCE_ROOT}

# Build the components
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build

# Build the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-build

# Install the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-install
