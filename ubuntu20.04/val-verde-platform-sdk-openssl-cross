#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=openssl
export SOURCE_PACKAGE_VERSION=1.1.1h
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

export-compiler-environment
generate-compiler-tools

# Configure the build components
cd /sources
wget -c https://www.openssl.org/source/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}.tar.gz
tar -zxf ${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}.tar.gz
mkdir -p ${STAGE_ROOT} ${INSTALL_ROOT}

cd ${STAGE_ROOT}

OPENSSL_DIR=/etc/ssl
OPENSSL_OS=${HOST_OS}
OPENSSL_PROCESSOR=${HOST_PROCESSOR}

if [ "${HOST_OS}" = "android" ]; then
    OPENSSL_DIR=/data/local/tmp${PACKAGE_PREFIX}/etc/ssl
    OPENSSL_DEFINES="-D__ANDROID_API__=${HOST_OS_API_LEVEL}"

    export ANDROID_NDK_HOME=${TEMPDIR}/org.${VAL_VERDE_GH_TEAM}/android-ndk-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}${BUILD_PACKAGE_PREFIX}/android-ndk-${ANDROID_NDK_VERSION}
    export PATH=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/${BUILD_KERNEL}-${BUILD_PROCESSOR}/bin:${PATH}

    if [ "${OPENSSL_PROCESSOR}" = "aarch64" ]; then
        OPENSSL_PROCESSOR=arm64
    fi
elif [ "${HOST_OS}" = "gnu" ] || \
     [ "${HOST_OS}" = "musl" ]; then
    OPENSSL_OS=linux
elif [ "${HOST_OS}" = "mingw32" ]; then
    OPENSSL_DIR=${PACKAGE_PREFIX}/etc/ssl
fi

OPENSSL_TARGET=${OPENSSL_OS}-${OPENSSL_PROCESSOR}

if [ "${HOST_OS}" = "mingw32" ]; then
    OPENSSL_TARGET=mingw64
fi

${SOURCE_ROOT}/Configure \
    --prefix=${INSTALL_ROOT}${PACKAGE_PREFIX} \
    --openssldir=${OPENSSL_DIR} \
    "${OPENSSL_DEFINES}" \
    ${OPENSSL_TARGET}

# Build the components
make -j${NUM_PROCESSORS}

TARGETS="install_sw install_ssldirs" \
make-build

# Build the package
deb-package-build

# Install the package
deb-package-install
