#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=openssl
export SOURCE_PACKAGE_VERSION=1.1.1g
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export QUALIFIED_PACKAGE_NAME=${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export INSTALL_ROOT=${TEMPDIR}/org.${PACKAGE_BASE_NAME}/${QUALIFIED_PACKAGE_NAME}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

rm -rf ${SOURCE_ROOT}
cd /sources
wget -c https://www.openssl.org/source/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}.tar.gz
tar -zxf ${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}.tar.gz
mkdir -p ${STAGE_ROOT} ${INSTALL_ROOT}
cd ${STAGE_ROOT}

OPENSSL_DIR=/etc/ssl
OPENSSL_OS=${HOST_OS}
OPENSSL_PROCESSOR=${HOST_PROCESSOR}

if [ "${HOST_OS}" = "android" ]; then
    OPENSSL_DIR=/data/local/tmp${PACKAGE_PREFIX}/etc/ssl
    OPENSSL_DEFINES="-D__ANDROID_API__=${HOST_OS_API_LEVEL}"

    export ANDROID_NDK_HOME=${TEMPDIR}/org.${PACKAGE_BASE_NAME}/android-ndk-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}${BUILD_PACKAGE_PREFIX}/android-ndk-${ANDROID_NDK_VERSION}
    export PATH=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/${BUILD_KERNEL}-${BUILD_PROCESSOR}/bin:${PATH}
elif [ "${HOST_OS}" = "gnu" ]; then
    OPENSSL_OS=linux
elif [ "${HOST_OS}" = "mingw32" ]; then
    OPENSSL_DIR=${PACKAGE_PREFIX}/etc/ssl
fi

if [ "${OPENSSL_PROCESSOR}" = "aarch64" ]; then
    OPENSSL_PROCESSOR=arm64
fi

OPENSSL_TARGET=${OPENSSL_OS}-${OPENSSL_PROCESSOR}

if [ "${HOST_OS}" = "mingw32" ]; then
    OPENSSL_TARGET=mingw64
fi

AR=${AR:-${BUILD_PACKAGE_PREFIX}/bin/llvm-ar} \
CC=${CC:-${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-clang} \
RANLIB=${RANLIB:-${BUILD_PACKAGE_PREFIX}/bin/llvm-ranlib} \
RC=${RC:-${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-rc} \
${SOURCE_ROOT}/Configure \
    --prefix=${INSTALL_ROOT}${PACKAGE_PREFIX} \
    --openssldir=${OPENSSL_DIR} \
    "${OPENSSL_DEFINES}" \
    ${OPENSSL_TARGET}

# Build the components
make -j${NUM_PROCESSORS}

TARGETS="install_sw install_ssldirs" \
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-make-build

# Build the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-${PACKAGE_CLASS}-build

# Install the package
source ${BUILD_PACKAGE_PREFIX}/bin/${PACKAGE_BASE_NAME}-platform-sdk-package-install
