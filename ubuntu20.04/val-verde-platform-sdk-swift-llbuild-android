#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=swift-llbuild
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

# Configure the package
cd ${SOURCE_ROOT}
git remote set-branches --add origin dutch-android-master
git fetch origin dutch-android-master
git checkout dutch-android-master
mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

SWIFTCFLAGS="\
    -sdk ${SYSROOT} \
    ${SWIFTCFLAGS} \
" \
${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -Ddispatch_DIR=/sources/build-staging/swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DFoundation_DIR=/sources/build-staging/swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DLLBUILD_SUPPORT_BINDINGS=Swift \
    -DSQLite3_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DSQLite3_LIBRARY=${PACKAGE_PREFIX}/lib/libsqlite3.so \
    ${SOURCE_ROOT}

# Package the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build

rsync -aPx ${STAGE_ROOT}/lib/*.so* install${PACKAGE_PREFIX}/lib
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build