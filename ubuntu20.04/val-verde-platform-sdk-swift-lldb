#!/bin/bash

set -e

# Set all environment vars
export NUM_PROCESSORS="$(($(getconf _NPROCESSORS_ONLN) + 1))"
export SOURCE_PACKAGE_NAME=swift-lldb
export SOURCE_ROOT=/sources/llvm-project/lldb
export STAGE_ROOT=/sources/build-staging/${SOURCE_PACKAGE_NAME}
export LLVM_SOURCE_ROOT=/sources/llvm-project
export LLVM_STAGE_ROOT=/sources/build-staging/llvm-project
export SWIFT_STAGE_ROOT=/sources/build-staging/swift

export PACKAGE_NAME=${PACKAGE_BASE_NAME}-${SOURCE_PACKAGE_NAME}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

# Configure the package
mkdir -p ${STAGE_ROOT}
cd ${STAGE_ROOT}

CFLAGS="\
    -Wno-register \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -Wno-register \
    ${CXXFLAGS} \
" \
${PACKAGE_BASE_NAME}-platform-sdk-cmake \
    -DClang_DIR=${LLVM_STAGE_ROOT}/lib/cmake/clang \
    -DCLANG_LINK_CLANG_DYLIB=TRUE \
    -DCMAKE_EXE_LINKER_FLAGS="${LDFLAGS} ${LIBS} -O2" \
    -DLLDB_ENABLE_SWIFT_SUPPORT=TRUE \
    -DLLDB_INCLUDE_TESTS=FALSE \
    -DLLVM_BUILD_LIBRARY_DIR=${LLVM_STAGE_ROOT}/lib \
    -DLLVM_BUILD_MAIN_SRC_DIR=${LLVM_SOURCE_ROOT}/llvm \
    -DLLVM_DIR=${LLVM_STAGE_ROOT}/lib/cmake/llvm \
    -DLLVM_ENABLE_ASSERTIONS=FALSE \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LLD=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_INCLUDE_TESTS=FALSE \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=TRUE \
    -DLLVM_LINK_LLVM_DYLIB=TRUE \
    -DLLVM_MAIN_INCLUDE_DIR=${LLVM_SOURCE_ROOT}/llvm/include \
    -DLLVM_TABLEGEN=${LLVM_STAGE_ROOT}/bin/llvm-tblgen \
    -DSwift_DIR=${SWIFT_STAGE_ROOT}/lib/cmake/swift \
    ${SOURCE_ROOT}

# Build the components
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-ninja-build
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-build

# Build the package
source /sources/${PACKAGE_BASE_NAME}-platform-sdk-package-install
