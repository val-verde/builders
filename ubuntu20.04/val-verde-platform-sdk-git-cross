#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=git
export SOURCE_PACKAGE_VERSION=9999-git
export SOURCE_ROOT=/sources/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}

# Source package build helper functions
source ${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-curl-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-expat-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-pcre-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-zlib-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

if [ "${HOST_OS}" != "android" ]; then
    NEEDS_LIBRT=1
fi

# Configure the build components
GIT_URL="https://github.com/${VAL_VERDE_GH_TEAM}/${SOURCE_PACKAGE_NAME}.git" \
git-clone val-verde-mainline
rsync -aPx ${SOURCE_ROOT}/ \
           ${STAGE_ROOT}
           
cd ${STAGE_ROOT}
autoreconf -i
package-configure \
    ${STAGE_ROOT}/configure \
    --prefix=${INSTALL_PREFIX} \
    --with-curl=${PACKAGE_PREFIX} \
    --with-expat=${PACKAGE_PREFIX} \
    --with-openssl=${PACKAGE_PREFIX} \
    ac_cv_fread_reads_directories=true \
    ac_cv_iconv_omits_bom=true \
    ac_cv_snprintf_returns_bogus=false

# Build the components
TARGETS="NEEDS_LIBRT=${NEEDS_LIBRT} install" \
make-build

# Build the package
deb-package-build

# Install the package
deb-package-install
