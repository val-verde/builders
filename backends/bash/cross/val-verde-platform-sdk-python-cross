#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-bzip2-1-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-libffi-3-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-openssl-1-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-ncurses-6-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-sqlite-3-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-util-linux-2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-xz-5-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0) \
"

# Invoke one-shot template for stage/configure/install
function package-install-completion-callback() {
    if [ -n "${ENABLE_PIP}" ]; then
        ${RM} -rf ${INSTALL_PREFIX}/lib/python${PYTHON_VERSION}/ste-packages/_distutils_hack
    fi

    ${LN} -sf \
          `package-get-filename python3 EXECUTABLE HOST` \
          ${INSTALL_PREFIX}/bin/`package-get-filename python EXECUTABLE HOST`

    if [ "${HOST_OS}" = "macos" ]; then
	PYTHON_LIBRARY=`package-get-filename python${PYTHON_VERSION} SHARED HOST`

        ${RSYNC} -ax \
                 ${INSTALL_PREFIX}/include/python${PYTHON_VERSION}/* \
                 ${INSTALL_ROOT}/${PACKAGE_PLATFORM_SYSROOT}/System/Library/Frameworks/Python.framework/Versions/${PYTHON_VERSION}/Headers/
        ${RM} -rf ${INSTALL_PREFIX}/include/python${PYTHON_VERSION}
        ${LN} -sf \
              ../../System/Library/Frameworks/Python.framework/Versions/Current/Headers \
              ${INSTALL_PREFIX}/include/python${PYTHON_VERSION}
        ${LN} -sf \
              ../../System/Library/Frameworks/Python.framework/Versions/Current/Python \
              ${INSTALL_PREFIX}/lib/${PYTHON_LIBRARY}
        ${INSTALL_NAME_TOOL} -id \
                             @rpath/Python.framework/Versions/${PYTHON_VERSION}/Python \
                             ${INSTALL_ROOT}/${PACKAGE_PLATFORM_SYSROOT}/System/Library/Frameworks/Python.framework/Versions/${PYTHON_VERSION}/Python
    fi
    
    ${CHMOD} 755 \
         ${INSTALL_PREFIX}/lib/python3.10/*
}

${MKDIR} -p ${STAGE_ROOT}/Modules

ENSURE_PIP=no
ENABLE_SHARED_OPTION="--enable-shared"
HAVE_ALARM=yes
HAVE_CLOCK_API=yes
HAVE_DEV_PTMX=yes
HAVE_SOCKLEN_T=yes

if [ -n "${ENABLE_PIP}" ]; then
    ENSURE_PIP=yes
fi

if [ "${HOST_OS}" = "mingw" ]; then
    ADDITIONAL_LIBS="\
        -lcrypt32 \
        -lffi \
        -liphlpapi \
        -lnetio \
        -lole32 \
        -loleaut32 \
        -lpathcch \
        -lshlwapi \
        -luuid \
        -lversion \
        -lws2_32 \
        ${ADDITIONAL_LIBS} \
    "
    COMMON_LDFLAGS="\
        -pthread \
        ${COMMON_LDFLAGS} \
    "
    HAVE_ALARM=no
    HAVE_CLOCK_API=no
    HAVE_DEV_PTMX=no

    ${ECHO} '\
nt -DPy_BUILD_CORE_BUILTIN -I$(srcdir)/Include/internal posixmodule.c # posix (UNIX) system calls
_overlapped -DPy_BUILD_CORE_BUILTIN -I$(srcdir)/Include/internal overlapped.c # _overlapped
_winapi -DPy_BUILD_CORE_BUILTIN -I$(srcdir)/Include/internal _winapi.c # _winapi
msvcrt -DPy_BUILD_CORE_BUILTIN -I$(srcdir)/Include/internal ../PC/msvcrtmodule.c # msvcrt
winreg -DPy_BUILD_CORE_BUILTIN -I$(srcdir)/Include/internal ../PC/winreg.c # winreg
winsound -DPy_BUILD_CORE_BUILTIN -I$(srcdir)/Include/internal -lwinmm ../PC/winsound.c # winsound
' > ${STAGE_ROOT}/Modules/Setup.local
else
    ${ECHO} '\
posix -DPy_BUILD_CORE_BUILTIN -I$(srcdir)/Include/internal posixmodule.c # posix (UNIX) system calls
' > ${STAGE_ROOT}/Modules/Setup.local

    if [ "${HOST_OS}" = "macos" ]; then
        function tool-install-invocation() {
            NUM_PROCESSORS=1 \
            tool-install
        }

        ENABLE_SHARED_OPTION="--enable-framework=${PACKAGE_PLATFORM_SYSROOT}/System/Library/Frameworks"
        TOOL_INSTALL_INVOCATION=tool-install-invocation
    fi
fi

export-compiler-environment
generate-compiler-tools

CFLAGS="\
    --sysroot=${SYSROOT} \
    -I${PACKAGE_PREFIX}/include \
    -I${PACKAGE_PREFIX}/include/ncurses \
    ${CFLAGS} \
" \
CPPFLAGS="\
    --sysroot=${SYSROOT} \
    -I${PACKAGE_PREFIX}/include \
    -I${PACKAGE_PREFIX}/include/ncurses \
    ${CPPFLAGS} \
" \
LD=${CCLD} \
LDFLAGS="\
    --sysroot=${SYSROOT} \
    -L${PACKAGE_PREFIX}/lib \
    ${ADDITIONAL_LIBS} \
    ${CCLDFLAGS} \
" \
_PYTHON_PROJECT_BASE=${STAGE_ROOT} \
CONFIGURE_BUILD_ROOT=${STAGE_ROOT} \
DISABLE_GENERATED_TOOLS=TRUE \
OPENSSL_LIBS=`${ECHO} "\
    -lcrypto \
    -lssl \
" | ${XARGS}` \
PACKAGE_INSTALL_COMPLETION_CALLBACK=package-install-completion-callback \
package-stage-configure-install-archive \
    ac_cv_broken_sem_getvalue=no \
    ac_cv_buggy_getaddrinfo=no \
    ac_cv_file__dev_ptc=no \
    ac_cv_file__dev_ptmx=${HAVE_DEV_PTMX} \
    ac_cv_func_alarm=${HAVE_ALARM} \
    ac_cv_func_clock_gettime=${HAVE_CLOCK_API} \
    ac_cv_func_clock_getres=${HAVE_CLOCK_API} \
    ac_cv_func_clock_settime=${HAVE_CLOCK_API} \
    ac_cv_type_socklen_t=${HAVE_SOCKLEN_T} \
    --with-ensurepip=${ENSURE_PIP} \
    --with-openssl=${PACKAGE_PREFIX} \
    --with-system-expat \
    --with-system-ffi \
    --without-static-libpython \
    ${ENABLE_SHARED_OPTION}
