#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

# Invoke one-shot template for stage/configure/install
if [ "${HOST_TRIPLE}" != "${BUILD_TRIPLE}" ]; then
    CROSS_CMD="\
        --with-wine-tools=${STAGE_ROOT_BASE}/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_CPU}/build \
    "
    WINEBUILD="`package-get-path winebuild EXECUTABLE BUILD`"
fi

if [ "${HOST_PROCESSOR}" = "aarch64" ] ||
   [ "${HOST_PROCESSOR}" = "x86_64" ]; then
    ENABLE_WINE64_CMD="--enable-win64"
elif [ "${HOST_PROCESSOR}" = "armv7a" ] ||
     [ "${HOST_PROCESSOR}" = "i386" ] ||
     [ "${HOST_PROCESSOR}" = "i486" ] ||
     [ "${HOST_PROCESSOR}" = "i586" ] ||
     [ "${HOST_PROCESSOR}" = "i686" ] ||
     [ "${HOST_PROCESSOR}" = "i786" ]; then
    WINE64_PREFIX=${STAGE_ROOT_BASE}/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}-${HOST_OS}-${HOST_CPU}

    if [ -d "${WINE64_PREFIX}" ]; then
        ENABLE_WINE64_CMD="--with-wine64=${WINE64_PREFIX}"
    fi
fi

WITH_OR_WITHOUT_UDEV=without

if [ "${HOST_OS}" = "macos" ]; then
    COMMON_CFLAGS="\
        -L${SYSROOT}/${PACKAGE_USR_PREFIX}/lib \
        ${COMMON_CFLAGS} \
    "
    DYLIB1_O_PATH=${SYSROOT}/${PACKAGE_USR_PREFIX}/lib/dylib1.o
    HAS_NO_PIE=no
elif [ "${HOST_OS}" = "musl" ] ||
   [ "${HOST_OS}" = "gnu" ]; then
    WITH_OR_WITHOUT_UDEV=with
fi

DISABLE_FPIC=TRUE \
DYLIB1_O_PATH=${DYLIB1_O_PATH} \
ENABLE_LD_AS_CCLD=TRUE \
FREETYPE_CFLAGS="-I${PACKAGE_PREFIX}/include/freetype2" \
FREETYPE_LIBS="-lfreetype" \
WINEBUILD=${WINEBUILD} \
package-stage-configure-install-archive \
    ac_cv_cflags__Wl__no_pie=${HAS_NO_PIE} \
    ac_cv_lib_soname_freetype=`package-get-filename freetype SHARED HOST` \
    --disable-tests \
    --with-float-abi=hard \
    --with-mingw=${STAGE_ROOT}/host-clang \
    --with-pulseaudio \
    --with-unwind \
    --${WITH_OR_WITHOUT_UDEV}-udev \
    ${CROSS_CMD} \
    ${ENABLE_WINE64_CMD}