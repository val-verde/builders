#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=swift-llbuild
export SOURCE_PACKAGE_VERSION=5

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-llvm-project-13-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-sqlite-3-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

# Invoke one-shot template for cmake/install
function package-install-completion-callback {
    package-rsync -ax \
                  ${STAGE_ROOT}/lib/*.so* \
                  ${INSTALL_PREFIX}/lib/
}

if [ "${HOST_OS}" = "android" ]; then
    export SOURCE_ROOT=${SOURCE_ROOT}-android
fi

DISABLE_INSTALL_DEB=TRUE \
PACKAGE_INSTALL_COMPLETION_CALLBACK=package-install-completion-callback \
package-cmake-install-archive \
    -Ddispatch_DIR=${STAGE_ROOT_BASE}/swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DFoundation_DIR=${STAGE_ROOT_BASE}/swift-corelibs-foundation-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DLLBUILD_SUPPORT_BINDINGS=Swift \
    -DSQLite3_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DSQLite3_LIBRARY=`package-get-path sqlite3 SHARED HOST`