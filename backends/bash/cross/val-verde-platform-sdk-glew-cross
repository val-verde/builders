#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

# Configure the build components
function glew-build() {
    GL_LIBRARY=GL

    if [ "${HOST_OS}" = "macos" ]; then
        GL_LIBRARY=MesaGL
    fi

    GL_LIBS="-ldl -l${GL_LIBRARY} -lX11"
    GLEW_LN="${LN} -s"

    if [ "${HOST_OS}" = "macos" ]; then
        CFLAGS="-DGLEW_APPLE_GLX=1 ${CFLAGS}"
    elif [ "${HOST_OS}" = "mingw" ]; then
        GL_LIBS="-lgdi32 -lopengl32"
        unset GLEW_LN
    fi

    make-build \
        AR=${AR} \
        AS=${AS} \
        CC=${CC} \
        CFLAGS.EXTRA="${CFLAGS}" \
        LD=${CCLD} \
        LDFLAGS.EXTRA="${CCLDFLAGS}" \
        LDFLAGS.GL="${GL_LIBS}" \
        LIBDIR=${INSTALL_PREFIX}/lib \
        LN="${GLEW_LN}" \
        GLEW_DEST=${INSTALL_PREFIX} \
        GLEW_PREFIX=${PACKAGE_PREFIX} \
        RANLIB=${RANLIB} \
        REPO_EGL=${SOURCE_ROOT_BASE}/egl-registry-1 \
        REPO_OPENGL=${SOURCE_ROOT_BASE}/opengl-headers-1 \
        STRIP= \
        SYSTEM=${SYSTEM} \
        ${@}
}

cd ${STAGE_ROOT}
copy-source-to-staging
export-compiler-environment

SYSTEM=${HOST_OS}

if [ "${HOST_OS}" = "android" ] ||
   [ "${HOST_OS}" = "musl" ]; then
    SYSTEM=linux
elif [ "${HOST_OS}" = "mingw" ]; then
    SYSTEM=linux-mingw64
elif [ "${HOST_OS}" = "macos" ]; then
    SYSTEM=${DARWIN_OS}
fi

NUM_PROCESSORS=1 \
glew-build extensions
glew-build all
glew-build install.all

# Build and install the package
package-invoke-archive-install