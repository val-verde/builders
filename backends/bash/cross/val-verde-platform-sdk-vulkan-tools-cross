#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=vulkan-tools
export SOURCE_PACKAGE_VERSION=1

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export-compiler-environment

export DEPENDS="${PACKAGE_BASE_NAME}-vulkan-loader-1-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0)"

# Configure the build components
cd ${STAGE_ROOT}

BUILD_CUBE=TRUE
CUBE_WSI_SELECTION=WAYLAND
ENABLE_WAYLAND=FALSE
ENABLE_XCB=FALSE
ENABLE_XLIB=FALSE
LIB_SUFFIX=so

if [ "${HOST_OS}" = "android" ] ||
   [ "${HOST_OS}" = "gnu" ] ||
   [ "${HOST_OS}" = "musl" ]; then
    if [ "${HOST_OS}" = "android" ]; then
        BUILD_CUBE=FALSE
        CUBE_WSI_SELECTION=ANDROID
    fi

    ENABLE_WAYLAND=TRUE
    ENABLE_XCB=TRUE
    ENABLE_XLIB=TRUE
elif [ "${HOST_OS}" = "mingw32" ]; then
    LIB_SUFFIX=dll.a
    LIB_VERSION_SUFFIX=-1
    export LIBS="\
        -lgdi32 \
        ${LDFLAGS} \
    "
fi

package-cmake \
    -DBUILD_CUBE=${BUILD_CUBE} \
    -DBUILD_ICD=FALSE \
    -DBUILD_WSI_DIRECTFB_SUPPORT=FALSE \
    -DBUILD_WSI_XCB_SUPPORT=TRUE \
    -DBUILD_WSI_WAYLAND_SUPPORT=${ENABLE_WAYLAND} \
    -DBUILD_WSI_XCB_SUPPORT=${ENABLE_XCB} \
    -DBUILD_WSI_XLIB_SUPPORT=${ENABLE_XLIB} \
    -DCUBE_WSI_SELECTION=${CUBE_WSI_SELECTION} \
    -DGLSLANG_INSTALL_DIR=${BUILD_PACKAGE_PREFIX}/bin \
    -DGLSLANG_VALIDATOR=${BUILD_PACKAGE_PREFIX}/bin/glslangValidator \
    -DPKG_CONFIG_EXECUTABLE=${PKG_CONFIG} \
    -DVulkan_LIBRARY=${PACKAGE_PREFIX}/lib/libvulkan${LIB_VERSION_SUFFIX}.${LIB_SUFFIX} \
    "${CMAKE_ANDROID_DEFINE_CMD}" \
    "${CMAKE_XCB_CMD}" \
    ${SOURCE_ROOT}

# Build the components
ninja-install

# Build and install the package
package-invoke-artifact-install
