#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-curl-7-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-expat-2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-pcre-8-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-zlib-1-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0) \
"

# Invoke one-shot template for stage/configure/install
if [ "${HOST_OS}" = "android" ]; then
    UNAME_S=Linux
elif [ "${HOST_OS}" = "gnu" ] ||
     [ "${HOST_OS}" = "musl" ]; then
    NEEDS_LIBRT=1
    UNAME_S=Linux
elif [ "${HOST_OS}" = "macos" ]; then
    UNAME_S=Darwin
fi

CONFIGURE_BUILD_ROOT=${STAGE_ROOT} \
DISABLE_TOOL_BUILD=TRUE \
INSTALL_TARGET="NEEDS_LIBRT=${NEEDS_LIBRT} uname_S=${UNAME_S} install" \
package-stage-configure-install-archive \
    ac_cv_fread_reads_directories=true \
    ac_cv_iconv_omits_bom=true \
    ac_cv_snprintf_returns_bogus=false \
    --with-curl=${PACKAGE_PREFIX} \
    --with-expat=${PACKAGE_PREFIX} \
    --with-openssl=${PACKAGE_PREFIX}
