#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

copy-source-to-staging

# Invoke one-shot template for cmake/install
cd ${STAGE_ROOT}

BUILD_COMMON_CFLAGS="\
    -L${BUILD_PACKAGE_PREFIX}/lib \
    ${BUILD_COMMON_CFLAGS} \
" \
export-compiler-environment

TOOL_LOG=${STAGE_ROOT}/builder-bootstrap \
tool-log ${BASH} ${SOURCE_ROOT}/bootstrap.sh \
    --with-toolset=clang

BOOST_CONTEXT_ABI=sysv
BOOST_CONTEXT_ASSEMBLER=gas
BOOST_CONTEXT_IMPLEMENTATION=fcontext
BOOST_FIBER_NUMA_TARGET_OS=none
BOOST_LOCALE_ENABLE_POSIX=FALSE
BOOST_PROCESSOR=${HOST_PROCESSOR}

if [ "${BOOST_PROCESSOR}" = "aarch64" ]; then
    BOOST_CONTEXT_ABI=aapcs
    BOOST_PROCESSOR=arm64
fi

if [ "${HOST_OS}" = "mingw32" ]; then
    BOOST_CONTEXT_ASSEMBLER=armasm
    BOOST_CONTEXT_ABI=ms
    BOOST_CONTEXT_IMPLEMENTATION=winfib
    BOOST_FIBER_NUMA_TARGET_OS=windows
elif [ "${HOST_OS}" = "musl" ] ||
     [ "${HOST_OS}" = "gnu" ]; then
    BOOST_FIBER_NUMA_TARGET_OS=linux
    BOOST_LOCALE_ENABLE_POSIX=TRUE
fi

CMAKE_CONFIGURE_ROOT=${STAGE_ROOT} \
package-cmake-install-archive \
    -DBOOST_CONTEXT_ABI=${BOOST_CONTEXT_ABI} \
    -DBOOST_CONTEXT_ARCHITECTURE=${BOOST_PROCESSOR} \
    -DBOOST_CONTEXT_ASSEMBLER=${BOOST_CONTEXT_ASSEMBLER} \
    -DBOOST_CONTEXT_IMPLEMENTATION=${BOOST_CONTEXT_IMPLEMENTATION} \
    -DBOOST_ENABLE_CMAKE=TRUE \
    -DBOOST_FIBER_NUMA_TARGET_OS=${BOOST_FIBER_NUMA_TARGET_OS} \
    -DBOOST_LOCALE_ENABLE_POSIX=${BOOST_LOCALE_ENABLE_POSIX} \
    -DBOOST_INSTALL_LAYOUT=system \
    -DLIBLZMA_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DLIBLZMA_LIBRARY=`package-get-path lzma SHARED HOST` \
    -DZSTD_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DZSTD_LIBRARY=`package-get-path zstd SHARED HOST`