#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="${PACKAGE_BASE_NAME}-zlib-1-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0)"

# Configure the build components
cd ${STAGE_ROOT}
copy-source-to-staging
export-compiler-environment

if [ "${HOST_OS}" != "macos" ] &&
   [ "${HOST_OS}" != "mingw32" ]; then
    MYCFLAGS="\
        -DDLUA_USE_LINUX \
    "
    MYLDFLAGS="\
        -Wl,-E \
    "
fi

ARFLAGS="rc"
MYCFLAGS=`${ECHO} ${MYCFLAGS} | ${XARGS}`
MYLDFLAGS=`${ECHO} "\
    ${CCLDFLAGS} \
    ${MYLDFLAGS} \
" | ${XARGS}`
MYLIBS=`${ECHO} "\
    -lm \
" | ${XARGS}`

make-build \
    AR="${AR} ${ARFLAGS}" \
    CC="${CC}" \
    CFLAGS="${CFLAGS}" \
    LD="${CCLD}" \
    MYCFLAGS="${MYCFLAGS}" \
    MYLDFLAGS="${MYLDFLAGS}" \
    MYLIBS="${MYLIBS}" \
    RANLIB="${RANLIB}"

package-rsync -ax \
              ${STAGE_ROOT}/*.h \
              ${INSTALL_PREFIX}/include/
${ECHO} "
#pragma once

extern \"C\" {
    #include \"lua.h\"
    #include \"lualib.h\"
    #include \"lauxlib.h\"
}
" > ${INSTALL_PREFIX}/include/lua.hpp

package-rsync -ax \
              `package-get-filename lua STATIC` \
              ${INSTALL_PREFIX}/lib/

${MKDIR} -p ${INSTALL_PREFIX}/lib/pkgconfig
${ECHO} "
V=5.4
R=5.4

prefix=${PACKAGE_PREFIX}
INSTALL_INC=\${prefix}/include
INSTALL_LIB=\${prefix}/lib
exec_prefix=\${prefix}
libdir=\${exec_prefix}/lib
includedir=\${prefix}/include

Name: Lua
Description: An Extensible Extension Language
Version: \${R}
Requires:
Libs: -L\${libdir} -llua -lm -ldl
Cflags: -I\${includedir}
" > ${INSTALL_PREFIX}/lib/pkgconfig/lua.pc

# Build and install the package
package-invoke-archive-install
