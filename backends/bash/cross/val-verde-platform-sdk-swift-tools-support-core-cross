#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-llvm-project-13-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-sqlite-3-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0) \
"

if [ "${HOST_OS}" != "macos" ]; then
    export DEPENDS="\
        ${DEPENDS}, \
        ${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0), \
        ${PACKAGE_BASE_NAME}-swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}-${QUALIFIED_HOST_PROCESSOR} (>=1.0.0) \
    "
fi

# Invoke one-shot template for cmake/install
if [ "${HOST_OS}" = "android" ]; then
    CMAKE_ANDROID_DEFINE_CMD="-DANDROID=1"
elif [ "${HOST_OS}" = "musl" ]; then
    SWIFTCFLAGS="\
        -DUSE_MUSL_LIBC \
        ${SWIFTCFLAGS} \
    "
fi

package-cmake-install-archive \
    -Ddispatch_DIR=${STAGE_ROOT_BASE}/swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}/cmake/modules \
    -DFoundation_DIR=${STAGE_ROOT_BASE}/swift-corelibs-foundation-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}/cmake/modules \
    -DSQLite3_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DSQLite3_LIBRARY=`package-get-path sqlite3 SHARED HOST` \
    ${CMAKE_ANDROID_DEFINE_CMD}
