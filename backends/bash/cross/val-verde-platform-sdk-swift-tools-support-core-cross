#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=swift-tools-support-core
export SOURCE_PACKAGE_VERSION=5

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-llvm-project-12-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-sqlite3-autoconf-3340100-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"
export SOURCE_ROOT=${SOURCE_ROOT}-android

# Configure the build components
cd ${STAGE_ROOT}
package-cmake \
    -Ddispatch_DIR=${STAGE_ROOT_BASE}/swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DFoundation_DIR=${STAGE_ROOT_BASE}/swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DSQLite3_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DSQLite3_LIBRARY=${PACKAGE_PREFIX}/lib/libsqlite3.so \
    ${SOURCE_ROOT}

# Build the components
ninja-install

# Build the package
deb-package-build
