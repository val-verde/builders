#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-curl-7-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-icu4c-69-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-libxml2-2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-llvm-project-13-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

# Invoke one-shot template for cmake/install
function package-install-completion-callback() {
    if [ "${HOST_OS}" = "android" ]; then
        ${MV} ${INSTALL_PREFIX}/lib/swift/linux \
              ${INSTALL_PREFIX}/lib/swift/android
    elif [ "${HOST_OS}" = "musl" ]; then
        ${MV} ${INSTALL_PREFIX}/lib/swift/linux \
              ${INSTALL_PREFIX}/lib/swift/musl
    fi
}

if [ "${HOST_OS}" = "android" ]; then
    CMAKE_ANDROID_DEFINE_CMD="-DANDROID=1"
    SDK="linux"
elif [ "${HOST_OS}" = "gnu" ] ||
     [ "${HOST_OS}" = "musl" ]; then
    SDK="linux"
elif [ "${HOST_OS}" = "mingw32" ]; then
    SDK="windows"
else
    SDK=${HOST_OS}
fi

if [ "${HOST_OS}" = "musl" ]; then
    SWIFTCFLAGS="\
        -lfts \
        -DNO_BACKTRACE \
        ${SWIFTCFLAGS} \
    "
fi

COMPONENT_RPATH="\$ORIGIN:\$ORIGIN/../.." \
PACKAGE_INSTALL_COMPLETION_CALLBACK=package-install-completion-callback \
RPATH_COMPONENTS="\
    ${INSTALL_PREFIX}/lib/swift/${SDK}/${SHARED_LIBRARY_PREFIX}*${SHARED_LIBRARY_SUFFIX} \
" \
package-cmake-install-archive \
    -Ddispatch_DIR=${STAGE_ROOT_BASE}/swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DICU_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DICU_LIBRARY=`package-get-path icudataswift SHARED HOST` \
    -DICU_I18N_LIBRARY_RELEASE=`package-get-path icui18nswift SHARED HOST` \
    -DICU_UC_LIBRARY_RELEASE=`package-get-path icuucswift SHARED HOST` \
    -DCURL_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DCURL_LIBRARY=`package-get-path curl SHARED HOST` \
    -DLIBXML2_INCLUDE_DIR=${PACKAGE_PREFIX}/include/libxml2 \
    -DLIBXML2_LIBRARY=`package-get-path xml2 SHARED HOST` \
    -DOPENSSL_CRYPTO_LIBRARY=`package-get-path crypto SHARED HOST` \
    -DOPENSSL_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DOPENSSL_SSL_LIBRARY=`package-get-path ssl SHARED HOST` \
    ${CMAKE_ANDROID_DEFINE_CMD}
