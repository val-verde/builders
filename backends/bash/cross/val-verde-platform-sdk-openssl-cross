#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

# Configure the build components
cd ${STAGE_ROOT}
export-compiler-environment

OPENSSL_DIR=/etc/ssl
OPENSSL_OS=${HOST_OS}
OPENSSL_PROCESSOR=${HOST_PROCESSOR}

if [ "${OPENSSL_PROCESSOR}" = "arm" ]; then
    OPENSSL_PROCESSOR=arm
elif [ "${OPENSSL_PROCESSOR}" = "i686" ]; then
    OPENSSL_PROCESSOR=x86
fi

if [ "${HOST_OS}" = "android" ]; then
    OPENSSL_DIR=/data/local/tmp${PACKAGE_PREFIX}/etc/ssl
    OPENSSL_OS=linux
elif [ "${HOST_OS}" = "gnu" ] || \
     [ "${HOST_OS}" = "musl" ]; then
    OPENSSL_OS=linux

    if [ "${HOST_PROCESSOR}" = "armv7a" ]; then
        OPENSSL_PROCESSOR=generic32
    fi
elif [ "${HOST_OS}" = "macos" ]; then
    OPENSSL_OS=darwin64

    if [ "${OPENSSL_PROCESSOR}" = "aarch64" ]; then
        OPENSSL_PROCESSOR=arm64
    fi
elif [ "${HOST_OS}" = "mingw" ]; then
    OPENSSL_DIR=${PACKAGE_PREFIX}/etc/ssl
    OPENSSL_OS=${HOST_OS}${HOST_OS_API_LEVEL}
fi

OPENSSL_TARGET=${OPENSSL_OS}-${OPENSSL_PROCESSOR}

if [ "${HOST_OS}" = "macos" ]; then
    OPENSSL_TARGET=${OPENSSL_TARGET}-cc
elif [ "${HOST_OS}" = "mingw" ] &&
     [ "${OPENSSL_PROCESSOR}" = "arm" ]; then
    OPENSSL_TARGET=${OPENSSL_TARGET}
fi

LD=${CCLD} \
LDFLAGS=${CCLDFLAGS} \
TOOL_LOG=${STAGE_ROOT}/builder-invocation \
tool-log ${SOURCE_ROOT}/Configure \
    --libdir=lib \
    --openssldir=${OPENSSL_DIR} \
    --prefix=${PACKAGE_PREFIX} \
    ${OPENSSL_TARGET}

# Build the components
make-build

INSTALL_TARGET="install_sw install_ssldirs" \
make-install

# Build and install the package
package-invoke-archive-install
