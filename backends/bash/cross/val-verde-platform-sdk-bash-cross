#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-bzip2-1-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-xz-5-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0) \
"

if [ "${HOST_OS}" != "macos" ] &&
   [ "${HOST_OS}" != "mingw32" ]; then

    export DEPENDS="\
        ${PACKAGE_BASE_NAME}-acl-2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
	${DEPENDS} \
    "
fi

# Invoke one-shot template for configure/install
HAS_GETCWD=yes
WITH_OR_WITHOUT_BASH_MALLOC=with

if [ "${HOST_OS}" = "android" ]; then
    HAS_GETCWD=no
elif [ "${HOST_OS}" = "macos" ] ||
     [ "${HOST_OS}" = "musl" ]; then
    WITH_OR_WITHOUT_BASH_MALLOC=without
fi

NUM_PROCESSORS=1 \
package-configure-install-archive \
    ac_cv_func_getcwd=${HAS_GETCWD} \
    bash_cv_dup2_broken=no \
    bash_cv_fnmatch_equiv_fallback=yes \
    bash_cv_func_ctype_nonascii=yes \
    bash_cv_func_sbrk=yes \
    bash_cv_func_sigsetjmp=yes \
    bash_cv_func_snprintf=yes \
    bash_cv_func_strcoll_broken=no \
    bash_cv_func_vsnprintf=yes \
    bash_cv_getcwd_malloc=yes \
    bash_cv_getenv_redef=yes \
    bash_cv_must_reinstall_sighandlers=no \
    bash_cv_opendir_not_robust=no \
    bash_cv_pgrp_pipe=yes \
    bash_cv_printf_a_format=yes \
    bash_cv_sys_named_pipes=yes \
    bash_cv_sys_siglist=yes \
    bash_cv_ulimit_maxfds=no \
    bash_cv_under_sys_siglist=no \
    bash_cv_unusable_rtsigs=no \
    bash_cv_wcontinued_broken=no \
    bash_cv_wexitstatus_offset=8 \
    --${WITH_OR_WITHOUT_BASH_MALLOC}-bash-malloc
