#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=openjdk
export SOURCE_PACKAGE_VERSION=17

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export-compiler-environment
generate-compiler-tools

# Configure the build components
${CHMOD} +x ${SOURCE_ROOT}/configure
${MKDIR} -p ${STAGE_ROOT}/build

cd ${STAGE_ROOT}/build
BUILD_CFLAGS=`${ECHO} "\
    -I${BUILD_PACKAGE_PREFIX}/include \
    -L${BUILD_PACKAGE_PREFIX}/lib \
" | ${XARGS}`
BUILD_CXXFLAGS=`${ECHO} "\
    ${BUILD_CFLAGS} \
    -stdlib++-isystem ${BUILD_PACKAGE_PREFIX}/include/c++/v1 \
" | ${XARGS}`

create-host-tool ${BUILD_CC} BUILD_CFLAGS ${STAGE_ROOT}/build-clang
create-host-tool ${BUILD_CC}++ BUILD_CXXFLAGS ${STAGE_ROOT}/build-clang++

HOST_ASFLAGS=${ASFLAGS}
HOST_CFLAGS=${CFLAGS}
HOST_CXXFLAGS=${CXXFLAGS}
HOST_LDFLAGS=${LDFLAGS}

export RM=${BINDIR}/rm
unset \
    ASFLAGS \
    BUILD_CC \
    CFLAGS \
    CXXFLAGS \
    LDFLAGS \
    UNZIP \
    ZIP

TOOL_LOG=${STAGE_ROOT}/builder-invocation
tool-log ${SOURCE_ROOT}/configure \
    AR=${AR} \
    BASH=${BASH} \
    BUILD_AR=${AR} \
    BUILD_CC=${STAGE_ROOT}/build-clang \
    BUILD_CXX=${STAGE_ROOT}/build-clang++ \
    BUILD_NM=${NM} \
    BUILD_OBJCOPY=${OBJCOPY} \
    BUILD_STRIP=${STRIP} \
    AWK=${GAWK} \
    CAT=${CAT} \
    CHMOD=${CHMOD} \
    CMP=${CMP} \
    CP=${CP} \
    CUT=${CUT} \
    CXXFILT=${CXXFILT} \
    DATE=${DATE} \
    DF=${DF} \
    DIFF=${DIFF} \
    ECHO=${ECHO} \
    EXPR=${EXPR} \
    FIND=${FIND} \
    FLOCK=${FLOCK} \
    GIT=${GIT} \
    GREP=${GREP} \
    HEAD=${HEAD} \
    JAVA=${JAVA} \
    JAVAC=${JAVAC} \
    LD_JAOTC=${LD} \
    LN=${LN} \
    LS=${LS} \
    LSB_RELEASE=${LSB_RELEASE} \
    MAKE=${MAKE} \
    MKDIR=${MKDIR} \
    MKTEMP=${MKTEMP} \
    MV=${MV} \
    NICE=${NICE} \
    NM=${NM} \
    OBJCOPY=${OBJCOPY} \
    OBJDUMP=${OBJDUMP} \
    PATCH=${PATCH} \
    READELF=${READELF} \
    READLINK=${READLINK} \
    RM=${RM} \
    RMDIR=${RMDIR} \
    SED=${SED} \
    SH=${BASH} \
    SORT=${SORT} \
    STAT=${STAT} \
    STRIP=${STRIP} \
    TAIL=${TAIL} \
    TAR=${TAR} \
    TEE=${TEE} \
    TOUCH=${TOUCH} \
    TR=${TR} \
    UNAME=${UNAME} \
    UNIQ=${UNIQ} \
    WC=${WC} \
    XARGS=${XARGS} \
    --disable-jvm-feature-static-build \
    --disable-static-build \
    --disable-warnings-as-errors \
    --openjdk-target=${HOST_TRIPLE} \
    --prefix=${INSTALL_PREFIX} \
    --with-boot-jdk=${BUILD_PACKAGE_PREFIX} \
    --with-extra-asflags="${HOST_ASFLAGS}" \
    --with-extra-cflags="${HOST_CFLAGS}" \
    --with-extra-cxxflags="${HOST_CXXFLAGS}" \
    --with-extra-ldflags="${HOST_LDFLAGS}" \
    --with-freetype-include=${PACKAGE_PREFIX}/include \
    --with-freetype-lib=${PACKAGE_PREFIX}/lib \
    --with-stdc++lib=dynamic \
    --with-toolchain-type=clang

# Build the components
TOOL_LOG=${STAGE_ROOT}/builder-installation
tool-log ${MAKE} \
    JOBS=${NUM_PROCESSORS} \
    INSTALL_PREFIX=${INSTALL_PREFIX} \
    install

# Build and install the package
package-invoke-archive-install
