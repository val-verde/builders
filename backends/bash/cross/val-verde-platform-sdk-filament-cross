#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=filament
export SOURCE_PACKAGE_VERSION=1

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-glslang-10-11-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-spirv-tools-2020-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-vulkan-loader-1-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

BUILD_TYPE=${BUILD_TYPE:-Release}

# Configure the build components
copy-source-to-staging

if [ "${BUILD_TRIPLE}" != ${HOST_TRIPLE} ]; then
    ${RSYNC} -aPx \
             ${BUILD_PACKAGE_PREFIX}/lib/cmake/${SOURCE_PACKAGE_NAME}.cmake \
             ${STAGE_ROOT}/ImportExecutables-${BUILD_TYPE}.cmake
fi

if [ "${HOST_KERNEL}" = "linux" ] &&
   [ "${HOST_PROCESSOR}" = "aarch64" ]; then
    CMAKE_BLUEGL_ARCH_CMD="-DLINUX_AARCH64=TRUE"
fi

if [ "${HOST_OS}" = "android" ]; then
    CFLAGS="\
        -DANDROID \
        ${CFLAGS} \
    "
    CXXFLAGS="\
        -DANDROID \
        ${CXXFLAGS} \
    "
    CMAKE_ANDROID_DEFINE_CMD="-DANDROID=TRUE"
elif [ "${HOST_OS}" = "mingw32" ]; then
    CMAKE_ASM_COMPILER_CMD="-DCMAKE_ASM_COMPILER=${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-ml64"
    CMAKE_ASM_COMPILER_ID_CMD="-DCMAKE_ASM_COMPILER_ID=MSVC"
    CMAKE_ASM_FLAGS_CMD="-DCMAKE_ASM_FLAGS_RELEASE="
fi

cd ${STAGE_ROOT}

CFLAGS="\
    -fno-builtin \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -fno-builtin \
    -DSTRSAFE_NO_DEPRECATE \
    ${CXXFLAGS} \
" \
CXX_STANDARD=17 \
package-cmake \
    -DBUILD_WSI_DIRECTFB_SUPPORT=FALSE \
    -DBUILD_WSI_WAYLAND_SUPPORT=FALSE \
    -DBUILD_WSI_XLIB_SUPPORT=FALSE \
    -DDIST_ARCH=${HOST_PROCESSOR} \
    -DDIST_DIR="/" \
    -DFILAMENT_ENABLE_JAVA=FALSE \
    -DFILAMENT_ENABLE_LTO=FALSE \
    -DFILAMENT_SKIP_SAMPLES=TRUE \
    -DFILAMENT_SUPPORTS_VULKAN=TRUE \
    -DPYTHON_EXECUTABLE=${PYTHON} \
    -DSPIRV_WERROR=FALSE \
    -DUSE_STATIC_LIBCXX=FALSE \
    "${CMAKE_ANDROID_DEFINE_CMD}" \
    "${CMAKE_ASM_COMPILER_CMD}" \
    "${CMAKE_ASM_COMPILER_ID_CMD}" \
    "${CMAKE_ASM_FLAGS_CMD}" \
    "${CMAKE_BLUEGL_ARCH_CMD}" \
    ${STAGE_ROOT}

# Build the components
ninja-install

${MKDIR} -p ${INSTALL_PREFIX}/lib/cmake

if [ "${BUILD_TRIPLE}" == ${HOST_TRIPLE} ]; then
    ${RSYNC} -aPx \
             ${STAGE_ROOT}/ImportExecutables-${BUILD_TYPE}.cmake \
             ${INSTALL_PREFIX}/lib/cmake/${SOURCE_PACKAGE_NAME}.cmake
fi

# Build the package
deb-package-build

# Install the package
deb-package-install
