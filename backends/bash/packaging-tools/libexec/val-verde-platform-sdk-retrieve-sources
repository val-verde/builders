#!/bin/bash

set -e

# Source deb packaging helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-common-variables
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-packaging-api

# Source package retrueval utils
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-fetch-utils

function build-install-git-source-package() {
    # Establish package url
    PACKAGE_VERSION=$(package-major-version) \
    derive-upstream-source-url

    # Set source package details
    determine-git-source-package

    export PACKAGE_PREFIX=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk/sources/${PACKAGE_NAME}
    export INSTALL_ROOT=${TEMPDIR}/${INSTALL_ROOT_BASE}/${PACKAGE_NAME}-sources
    export INSTALL_PREFIX=${INSTALL_ROOT}${PACKAGE_PREFIX}
    export STAGE_ROOT=${STAGE_ROOT_BASE}/${PACKAGE_NAME}

    ${ECHO}
    ${ECHO} -e "    Source Builder Started"
    ${ECHO} -e "        Name: \e[1;35m${SOURCE_PACKAGE_NAME}\e[0m"
    ${ECHO} -e "        Version: \e[32m${SOURCE_PACKAGE_VERSION}\e[0m"
    ${ECHO} -e "        URL: \e[31m${PACKAGE_URL}\e[0m"
    ${ECHO} -e "        Stage Root: \e[33m${STAGE_ROOT}\e[0m"
    ${ECHO} -e "        Install Prefix: \e[33m${PACKAGE_PREFIX}\e[0m"

    # Prepare stage root (for logs) and install directory for source package
    ${MKDIR} -p \
                ${INSTALL_PREFIX} \
                ${STAGE_ROOT}

    GIT_URL=${PACKAGE_URL} \
        TARGET_ROOT=${INSTALL_PREFIX} \
        package-git-clone ${SOURCE_BRANCH}

    # Prepare source root
    package-push-directory ${INSTALL_PREFIX}
        ${RM} -rf .git*
        ${RM} -rf "^.git*"
        package-git-init
        package-git-add -A
        package-git-commit -m "Val verde source base commit."
    package-pop-directory

    # Build the source deb package
    deb-package-build

    # Install the source deb package
    deb-package-install

    # Clean up
    ${RM} -rf ${INSTALL_ROOT}
    ${ECHO} -e "    Source Builder Completed"

}

function build-install-other-source-package() {
    # Establish package url
    PACKAGE_VERSION=$(package-major-version) \
    derive-upstream-source-url

    export PACKAGE_PREFIX=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk/sources/${PACKAGE_NAME}
    export INSTALL_ROOT=${TEMPDIR}/${INSTALL_ROOT_BASE}/${PACKAGE_NAME}-sources
    export INSTALL_PREFIX=${INSTALL_ROOT}${PACKAGE_PREFIX}
    export STAGE_ROOT=${STAGE_ROOT_BASE}/${PACKAGE_NAME}

    ${ECHO}
    ${ECHO} -e "    Source Builder Started"
    ${ECHO} -e "        Name: \e[35m${SOURCE_PACKAGE_NAME}\e[0m"
    ${ECHO} -e "        Version: \e[32m${SOURCE_PACKAGE_VERSION}\e[0m"
    ${ECHO} -e "        URL: \e[31m${PACKAGE_URL}\e[0m"
    ${ECHO} -e "        Stage Root: \e[33m${STAGE_ROOT}\e[0m"
    ${ECHO} -e "        Install Prefix: \e[33m${PACKAGE_PREFIX}\e[0m"

    # Prepare stage root (for logs) and install directory for source package
    ${MKDIR} -p \
                ${INSTALL_PREFIX} \
                ${STAGE_ROOT}

    # Extract source package from tar ball
    untar-tar-balls

    # Build the source deb package
    deb-package-build

    # Install the source deb package
    deb-package-install

    # Clean up
    ${RM} -rf ${INSTALL_ROOT}
    ${ECHO} -e "    Source Builder Completed"
}

function fetch-single-source() {
    SOURCE_FILE=${SOURCE_FILE:-/usr/share/${VAL_VERDE_GH_TEAM}-sources.json}
    EMAIL_ID="openvalverde@gmail.com"

    package-push-directory /sources

    SOURCE_PACKAGE_NAME=$1 \
    SOURCE_TYPE=$2 \
    query-single-source

    if [[ ${SOURCE_TYPE} == "git" ]]; then
        build-install-git-source-package
    elif [[ ${SOURCE_TYPE} == "other" ]]; then
        build-install-other-source-package
    fi

    package-pop-directory
}

function fetch-sources() {
    GIT_INDEX_OVERRIDE=${GIT_INDEX_OVERRIDE:-0}
    OTHER_INDEX_OVERRIDE=${OTHER_INDEX_OVERRIDE:-0}
    SOURCE_FILE=${SOURCE_FILE:-/usr/share/${VAL_VERDE_GH_TEAM}-sources.json}
    EMAIL_ID="openvalverde@gmail.com"

    package-push-directory /sources
        ${ECHO} -e "Source Builder Invocation Started"
        ${ECHO} -e "    Vendor: \e[1m${PACKAGE_BASE_NAME}\e[0m"
        ${ECHO} -e "    Email: \e[4m${EMAIL_ID}\e[0m"
        ${ECHO} -e "    Sources File: \e[31m${SOURCE_FILE}\e[0m"

        # Fetch git upstream sources
        SOURCE_TYPE=git get-source-package-count

        ${GIT} config \
               --global user.email ${EMAIL_ID}

        for index in `seq "${GIT_INDEX_OVERRIDE}" $(($sourceCount - 1))`; do
            index=$index \
            SOURCE_TYPE=git \
            get-source-package-metadata

            PACKAGE_VERSION=$(package-major-version) \
            derive-upstream-source-url

            build-install-git-source-package
        done

        # Fetch other upstream sources
        SOURCE_TYPE=other get-source-package-count

        for index in `seq "${OTHER_INDEX_OVERRIDE}" $(($otherSourcesCount - 1))`; do
            index=$index \
            SOURCE_TYPE=other \
            get-source-package-metadata

            PACKAGE_VERSION=$(package-major-version) \
            derive-upstream-source-url

            build-install-other-source-package
        done

        ${ECHO} -e "Source Builder Invocation Completed"
        ${ECHO}
    package-pop-directory
}
