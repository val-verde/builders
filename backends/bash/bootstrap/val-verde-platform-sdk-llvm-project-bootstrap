#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=llvm-project
export SOURCE_PACKAGE_VERSION=14

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

COMPILER_RT_SANITIZERS_TO_BUILD="asan;cfi;dfsan;gwp_asan;hwasan;msan;safestack;scudo;tsan;ubsan_minimal"
CUDA_GPU_PRIMARY_ARCH=61
CUDA_GPU_SECONDARY_ARCH=35
COMPILER_RT_SANITIZERS_TO_BUILD="asan;cfi;dfsan;gwp_asan;hwasan;msan;safestack;scudo;tsan;ubsan_minimal"

# Invoke one-shot template for cmake/install
function package-install-completion-callback() {
    package-rsync -ax \
                  ${STAGE_ROOT}/bin/dsymutil \
                  ${STAGE_ROOT}/bin/ld64.lld* \
                  ${STAGE_ROOT}/bin/llvm-as* \
                  ${STAGE_ROOT}/bin/llvm-dlltool* \
                  ${STAGE_ROOT}/bin/llvm-install-name-tool* \
                  ${STAGE_ROOT}/bin/llvm-libtool-darwin* \
                  ${STAGE_ROOT}/bin/llvm-link* \
                  ${STAGE_ROOT}/bin/llvm-lipo* \
                  ${STAGE_ROOT}/bin/llvm-mt* \
                  ${STAGE_ROOT}/bin/llvm-otool* \
                  ${STAGE_ROOT}/bin/llvm-pdbutil* \
                  ${STAGE_ROOT}/bin/llvm-readelf* \
                  ${STAGE_ROOT}/bin/llvm-readobj* \
                  ${STAGE_ROOT}/bin/opt* \
                  ${INSTALL_PREFIX}/bin/

    # remove libcxx as it is superceded by llvm-project
    HOST_PROCESSOR=`${ECHO} ${HOST_PROCESSOR} | ${TR} _ -`
    PACKAGES_TO_MANAGE=( 'libcxx-14' 'HOST' )

    PACKAGE_ACTION=UNINSTALL \
    deb-package-mgmt ${PACKAGES_TO_MANAGE[@]}
}

LLVM_TARGETS_TO_BUILD="NVPTX;WebAssembly"

if [ "${HOST_PROCESSOR}" = "aarch64" ]; then
    COMPILER_RT_HAS_FVISIBILITY_HIDDEN_FLAG=FALSE
    LLVM_TARGETS_TO_BUILD="AArch64;${LLVM_TARGETS_TO_BUILD}"
elif [ "${HOST_PROCESSOR}" = "x86_64" ]; then
    COMPILER_RT_HAS_FVISIBILITY_HIDDEN_FLAG=TRUE
    LLVM_TARGETS_TO_BUILD="${LLVM_TARGETS_TO_BUILD};X86"
fi

CMAKE_CONFIGURE_ROOT=${SOURCE_ROOT}/llvm \
COMMON_LDFLAGS="\
    -lunwind \
    ${COMMON_LDFLAGS} \
" \
CXX_STANDARD=17 \
PACKAGE_INSTALL_COMPLETION_CALLBACK=package-install-completion-callback \
package-cmake-install-archive \
    -DBUILD_SHARED_LIBS=FALSE \
    -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
    -DCLANG_DEFAULT_RTLIB=compiler-rt \
    -DCLANG_DEFAULT_STD_C=gnu2x \
    -DCLANG_DEFAULT_STD_CXX=gnucxx20 \
    -DCLANG_DEFAULT_UNWINDLIB=libunwind \
    -DCLANG_ENABLE_ARCMT=FALSE \
    -DCLANG_ENABLE_STATIC_ANALYZER=FALSE \
    -DCLANG_INCLUDE_DOCS=FALSE \
    -DCLANG_INCLUDE_TESTS=FALSE \
    -DCLANG_LINK_CLANG_DYLIB=TRUE \
    -DCLANG_OPENMP_NVPTX_DEFAULT_ARCH=sm_${CUDA_GPU_PRIMARY_ARCH} \
    -DCLANG_TOOL_ARCMT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_CLANG_IMPORT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_CLANG_REFACTOR_TEST_BUILD=FALSE \
    -DCLANG_TOOL_C_ARCMT_TEST_BUILD=FALSE \
    -DCLANG_TOOL_C_INDEX_TEST_BUILD=FALSE \
    -DCMAKE_CUDA_COMPILER=${BINDIR}/clang \
    -DCOMPILER_RT_BUILD_LIBFUZZER=FALSE \
    -DCOMPILER_RT_BUILD_MEMPROF=FALSE \
    -DCOMPILER_RT_BUILD_PROFILE=FALSE \
    -DCOMPILER_RT_BUILD_SANITIZERS=FALSE \
    -DCOMPILER_RT_BUILD_XRAY=FALSE \
    -DCOMPILER_RT_CAN_EXECUTE_TESTS=FALSE \
    -DCOMPILER_RT_DEFAULT_TARGET_TRIPLE=${HOST_TRIPLE} \
    -DCOMPILER_RT_EXCLUDE_ATOMIC_BUILTIN=FALSE \
    -DCOMPILER_RT_HAS_ATOMIC_KEYWORD=TRUE \
    -DCOMPILER_RT_HAS_FVISIBILITY_HIDDEN_FLAG=${COMPILER_RT_HAS_FVISIBILITY_HIDDEN_FLAG} \
    -DCOMPILER_RT_HAS_FFREESTANDING_FLAG=FALSE \
    -DCOMPILER_RT_HAS_LIBSTDCXX=FALSE \
    -DCOMPILER_RT_HAS_NODEFAULTLIBS_FLAG=FALSE \
    -DCOMPILER_RT_INCLUDE_TESTS=FALSE \
    -DCOMPILER_RT_SANITIZERS_TO_BUILD=${COMPILER_RT_SANITIZER_TO_BUILD} \
    -DCUDA_NVCC_EXECUTABLE=${BINDIR}/clang \
    -DCUDA_TOOLKIT_INCLUDE=${PACKAGE_PREFIX}/include \
    -DDEFAULT_SYSROOT=${BINDIR} \
    -DENABLE_EXPERIMENTAL_NEW_PASS_MANAGER=TRUE \
    -DFFI_INCLUDE_DIR=\
    -DFFI_INCLUDE_PATH=\
    -DFFI_LIBRARY_DIR=\
    -DFFI_LIBRARY_PATH=\
    -DHAVE_GNU_POSIX_REGEX=TRUE \
    -DHAVE_CXX_ATOMICS_WITHOUT_LIB=TRUE \
    -DHAVE_CXX_ATOMICS64_WITHOUT_LIB=TRUE \
    -DHAVE_INOTIFY=TRUE \
    -DHAVE_LIBCXXABI=TRUE \
    -DHAVE_LIBUNWIND=TRUE \
    -DHAVE_THREAD_SAFETY_ATTRIBUTES=TRUE \
    -DLIBCXX_CXX_ABI=libcxxabi \
    -DLIBCXX_CXX_ABI_INCLUDE_PATHS=${SOURCE_ROOT}/libcxxabi/include \
    -DLIBCXX_ENABLE_ABI_LINKER_SCRIPT=FALSE \
    -DLIBCXX_ENABLE_ASSERTIONS=FALSE \
    -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=TRUE \
    -DLIBCXX_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXX_ENABLE_FILESYSTEM=TRUE \
    -DLIBCXX_ENABLE_NEW_DELETE_DEFINITIONS=FALSE \
    -DLIBCXX_ENABLE_PARALLEL_ALGORITHMS=TRUE \
    -DLIBCXX_ENABLE_RTTI=TRUE \
    -DLIBCXX_ENABLE_SHARED=TRUE \
    -DLIBCXX_ENABLE_STATIC=TRUE \
    -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=TRUE \
    -DLIBCXX_ENABLE_THREADS=TRUE \
    -DLIBCXX_HAS_ATOMIC_LIB=FALSE \
    -DLIBCXX_HAS_MUSL_LIBC=FALSE \
    -DLIBCXX_HAS_PTHREAD_API=TRUE \
    -DLIBCXX_HAS_WIN32_THREAD_API=FALSE \
    -DLIBCXX_INCLUDE_BENCHMARKS=FALSE \
    -DLIBCXX_INCLUDE_DOCS=FALSE \
    -DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=TRUE \
    -DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=FALSE \
    -DLIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG=TRUE \
    -DLIBCXX_SUPPORTS_NOSTDINCXX_FLAG=TRUE \
    -DLIBCXX_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_ENABLE_ASSERTIONS=FALSE \
    -DLIBCXXABI_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXXABI_ENABLE_SHARED=FALSE \
    -DLIBCXXABI_ENABLE_STATIC=TRUE \
    -DLIBCXXABI_ENABLE_THREADS=TRUE \
    -DLIBCXXABI_HAS_NOSTDINCXX_FLAG=TRUE \
    -DLIBCXXABI_INSTALL_LIBRARY=TRUE \
    -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=FALSE \
    -DLIBCXXABI_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_LLVM_UNWINDER=TRUE \
    -DLIBCXXABI_USE_SJLJ_EXCEPTIONS=FALSE \
    -DLIBOMP_ENABLE_ASSERTIONS=FALSE \
    -DLIBOMP_HAVE_VERSION_SCRIPT_FLAG=TRUE \
    -DLIBOMPTARGET_BUILD_AMDGCN_BCLIB=FALSE \
    -DLIBOMPTARGET_BUILD_NVPTX_BCLIB=FALSE \
    -DLIBOMPTARGET_DEP_LIBELF_INCLUDE_DIR= \
    -DLIBOMPTARGET_DEP_LIBELF_LIBRARIES= \
    -DLIBOMPTARGET_NVPTX_COMPUTE_CAPABILITIES="${CUDA_GPU_PRIMARY_ARCH},${CUDA_GPU_SECONDARY_ARCH}" \
    -DLIBOMPTARGET_SEARCH_LIBFFI_INCLUDE_DIRS= \
    -DLIBOMPTARGET_SEARCH_LIBFFI_LIBRARY_DIRS= \
    -DLIBUNWIND_ENABLE_ASSERTIONS=FALSE \
    -DLIBUNWIND_ENABLE_PEDANTIC=FALSE \
    -DLIBUNWIND_ENABLE_SHARED=TRUE \
    -DLIBUNWIND_ENABLE_STATIC=TRUE \
    -DLIBUNWIND_ENABLE_THREADS=TRUE \
    -DLIBUNWIND_HAS_NOSTDINCXX_FLAG=TRUE \
    -DLIBUNWIND_INCLUDE_DOCS=FALSE \
    -DLIBUNWIND_INSTALL_LIBRARY=TRUE \
    -DLIBUNWIND_SUPPORTS_FNO_EXCEPTIONS_FLAG=TRUE \
    -DLIBUNWIND_SUPPORTS_FNO_RTTI_FLAG=TRUE \
    -DLIBUNWIND_SUPPORTS_NODEFAULTLIBS_FLAG=TRUE \
    -DLIBUNWIND_USE_COMPILER_RT=TRUE \
    -DLLD_INCLUDE_TESTS=FALSE \
    -DLLVM_ABI_BREAKING_CHECKS=FORCE_OFF \
    -DLLVM_BUILD_DOCS=FALSE \
    -DLLVM_BUILD_EXAMPLES=FALSE \
    -DLLVM_BUILD_LLVM_DYLIB=TRUE \
    -DLLVM_BUILD_TESTS=FALSE \
    -DLLVM_BUILD_UTILS=FALSE \
    -DLLVM_DEFAULT_TARGET_TRIPLE=${HOST_4_TRIPLE} \
    -DLLVM_ENABLE_ASSERTIONS=FALSE \
    -DLLVM_ENABLE_BACKTRACES=FALSE \
    -DLLVM_ENABLE_DOXYGEN=FALSE \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_FFI=FALSE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LLD=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_PIC=TRUE \
    -DLLVM_ENABLE_PROJECTS="clang;compiler-rt;libcxx;libcxxabi;libunwind;lld;openmp;parallel-libs;polly;pstl" \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_ENABLE_TERMINFO=FALSE \
    -DLLVM_ENABLE_THREADS=TRUE \
    -DLLVM_ENABLE_UNWIND_TABLES=FALSE \
    -DLLVM_ENABLE_WARNINGS=FALSE \
    -DLLVM_ENABLE_Z3_SOLVER=TRUE \
    -DLLVM_ENABLE_ZLIB=TRUE \
    -DLLVM_HOST_TRIPLE=${HOST_4_TRIPLE} \
    -DLLVM_INCLUDE_BENCHMARKS=FALSE \
    -DLLVM_INCLUDE_DOCS=FALSE \
    -DLLVM_INCLUDE_EXAMPLES=FALSE \
    -DLLVM_INCLUDE_GO_TESTS=FALSE \
    -DLLVM_INCLUDE_TESTS=FALSE \
    -DLLVM_INCLUDE_UTILS=TRUE \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=TRUE \
    -DLLVM_LINK_LLVM_DYLIB=TRUE \
    -DLLVM_OPTIMIZED_TABLEGEN=TRUE \
    -DLLVM_POLLY_LINK_INTO_TOOLS=TRUE \
    -DLLVM_TARGETS_TO_BUILD="${LLVM_TARGETS_TO_BUILD}" \
    -DLLVM_TOOL_LLVM_C_TEST_BUILD=FALSE \
    -DLLVM_USE_HOST_TOOLS=FALSE \
    -DLLVM_USE_NEWPM=FALSE \
    -DLLVM_USE_RELATIVE_PATHS_IN_DEBUG_INFO=TRUE \
    -DLLVM_USE_RELATIVE_PATHS_IN_FILES=TRUE \
    -DLLVM_VERSION_SUFFIX="-${PACKAGE_BASE_NAME}" \
    -DLLVM_Z3_INSTALL_DIR=${PACKAGE_PLATFORM_SYSROOT} \
    -DMLIR_ENABLE_BINDINGS_PYTHON=FALSE \
    -DMLIR_ENABLE_CUDA_RUNNER=FALSE \
    -DMLIR_ENABLE_SPIRV_CPU_RUNNER=FALSE \
    -DMLIR_ENABLE_VULKAN_RUNNER=FALSE \
    -DPython3_EXECUTABLE=/usr/bin/python3 \
    -DPOLLY_ENABLE_GPGPU_CODEGEN=FALSE \
    -DSANITIZER_CXX_ABI=libc++ \
    -DZ3_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DZ3_LIBRARIES=`package-get-path z3 SHARED HOST` \
    -DZ3_RETURNCODE=0 \
    -DZ3_RETURNCODE__TRYRUN_OUTPUT=4.8.12
