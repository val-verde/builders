#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=libcxx
export SOURCE_PACKAGE_VERSION=14
export SOURCE_ROOT=${SOURCE_ROOT_BASE}/llvm-project-${SOURCE_PACKAGE_VERSION}

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

# Configure the build components
ENABLE_FILESYSTEM=TRUE
ENABLE_SHARED=TRUE
ENABLE_STATIC=TRUE
ENABLE_THREADS=TRUE
HAS_MUSL_LIBC=FALSE
HAS_PTHREAD_API=TRUE
HAS_WIN32_THREAD_API=FALSE
SIZEOF_VOID_P=8

if [ "${HOST_OS}" = "musl" ]; then
    HAS_MUSL_LIBC=TRUE
elif [ "${HOST_OS}" = "mingw32" ]; then
    ENABLE_FILESYSTEM=FALSE
    HAS_PTHREAD_API=FALSE
    HAS_WIN32_THREAD_API=TRUE
elif [ "${HOST_OS}" = "wasi" ]; then
    DISABLE_LIBUNWIND=TRUE
    ENABLE_FILESYSTEM=FALSE
    ENABLE_SHARED=FALSE
    ENABLE_THREADS=FALSE
    HAS_MUSL_LIBC=TRUE
    HAS_PTHREAD_API=FALSE
fi

if [ "${HOST_PROCESSOR}" = "wasm32" ]; then
    SIZEOF_VOID_P=4
fi

ENABLED_PROJECTS="libcxx;libcxxabi;parallel-libs;pstl"

if [ -z "${DISABLE_LIBUNWIND}" ]; then
    ENABLED_PROJECTS="${ENABLED_PROJECTS};libunwind"
fi

INSTALL_TARGET="projects/libcxxabi/install projects/libcxx/install projects/parallel-libs/install projects/pstl/install"

if [ "${HOST_OS}" != "wasi" ]; then
    INSTALL_TARGET="projects/libunwind/install ${INSTALL_TARGET}"
fi

COMMON_CFLAGS="\
    -unwindlib=none \
    ${COMMON_CFLAGS} \
" \
CMAKE_CONFIGURE_ROOT=${SOURCE_ROOT}/llvm \
CXXFLAGS="\
    -nostdlib++ \
    ${CXXFLAGS} \
" \
DISABLE_TOOL_BUILD=TRUE \
package-cmake-install-archive \
    -DCMAKE_C_COMPILER_WORKS=TRUE \
    -DCMAKE_CXX_COMPILER_WORKS=TRUE \
    -DCMAKE_SIZEOF_VOID_P=${SIZEOF_VOID_P} \
    -DDARWIN_macosx_OVERRIDE_SDK_VERSION=${MACOS_VERSION} \
    -DDARWIN_osx_BUILTIN_ARCHS="arm64;x86_64" \
    -DDARWIN_osx_BUILTIN_MIN_VER=${MACOS_VERSION} \
    -DDARWIN_osx_SYSROOT=${SOURCE_ROOT_BASE}/macosx-${MACOS_VERSION} \
    -DHAVE_CXX_ATOMICS_WITHOUT_LIB=TRUE \
    -DHAVE_CXX_ATOMICS64_WITHOUT_LIB=TRUE \
    -DLIBCXX_CXX_ABI=libcxxabi \
    -DLIBCXX_CXX_ABI_INCLUDE_PATHS=${SOURCE_ROOT}/libcxxabi/include \
    -DLIBCXX_ENABLE_ABI_LINKER_SCRIPT=FALSE \
    -DLIBCXX_ENABLE_ASSERTIONS=FALSE \
    -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=TRUE \
    -DLIBCXX_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXX_ENABLE_FILESYSTEM=${ENABLE_FILESYSTEM} \
    -DLIBCXX_ENABLE_NEW_DELETE_DEFINITIONS=FALSE \
    -DLIBCXX_ENABLE_PARALLEL_ALGORITHMS=TRUE \
    -DLIBCXX_ENABLE_RTTI=TRUE \
    -DLIBCXX_ENABLE_SHARED=${ENABLE_SHARED} \
    -DLIBCXX_ENABLE_STATIC=${ENABLE_STATIC} \
    -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=TRUE \
    -DLIBCXX_ENABLE_THREADS=${ENABLE_THREADS} \
    -DLIBCXX_HAS_ATOMIC_LIB=FALSE \
    -DLIBCXX_HAS_MUSL_LIBC=${HAS_MUSL_LIBC} \
    -DLIBCXX_HAS_PTHREAD_API=${HAS_PTHREAD_API} \
    -DLIBCXX_HAS_WIN32_THREAD_API=${HAS_WIN32_THREAD_API} \
    -DLIBCXX_INCLUDE_BENCHMARKS=FALSE \
    -DLIBCXX_INCLUDE_DOCS=FALSE \
    -DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=TRUE \
    -DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=FALSE \
    -DLIBCXX_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_ENABLE_ASSERTIONS=FALSE \
    -DLIBCXXABI_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXXABI_ENABLE_SHARED=FALSE \
    -DLIBCXXABI_ENABLE_STATIC=TRUE \
    -DLIBCXXABI_ENABLE_THREADS=${ENABLE_THREADS} \
    -DLIBCXXABI_HAS_NOSTDINCXX_FLAG=TRUE \
    -DLIBCXXABI_INSTALL_LIBRARY=TRUE \
    -DLIBCXXABI_LIBCXX_INCLUDES=${SOURCE_ROOT}/libcxx/include \
    -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=FALSE \
    -DLIBCXXABI_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_LLVM_UNWINDER=TRUE \
    -DLIBCXXABI_USE_SJLJ_EXCEPTIONS=FALSE \
    -DLIBUNWIND_ENABLE_ASSERTIONS=FALSE \
    -DLIBUNWIND_ENABLE_PEDANTIC=FALSE \
    -DLIBUNWIND_ENABLE_SHARED=${ENABLE_SHARED} \
    -DLIBUNWIND_ENABLE_STATIC=${ENABLE_STATIC} \
    -DLIBUNWIND_ENABLE_THREADS=${ENABLE_THREADS} \
    -DLIBUNWIND_HAS_NOSTDINCXX_FLAG=TRUE \
    -DLIBUNWIND_INCLUDE_DOCS=FALSE \
    -DLIBUNWIND_INSTALL_LIBRARY=TRUE \
    -DLIBUNWIND_SUPPORTS_FNO_EXCEPTIONS_FLAG=TRUE \
    -DLIBUNWIND_SUPPORTS_FNO_RTTI_FLAG=TRUE \
    -DLIBUNWIND_SUPPORTS_NODEFAULTLIBS_FLAG=TRUE \
    -DLIBUNWIND_USE_COMPILER_RT=TRUE \
    -DLLVM_DEFAULT_TARGET_TRIPLE=${HOST_4_TRIPLE} \
    -DLLVM_HOST_TRIPLE=${HOST_4_TRIPLE} \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_PROJECTS=${ENABLED_PROJECTS} \
    -DLLVM_INCLUDE_BENCHMARKS=FALSE \
    -DLLVM_INCLUDE_EXAMPLES=FALSE \
    -DLLVM_INCLUDE_RUNTIMES=FALSE \
    -DLLVM_INCLUDE_TESTS=FALSE \
    -DLLVM_INCLUDE_TOOLS=FALSE \
    -DLLVM_INCLUDE_UTILS=FALSE \
    -DLLVM_TARGETS_TO_BUILD= \
    -DPython3_EXECUTABLE=${PYTHON}
