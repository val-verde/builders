#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=libcxx
export SOURCE_PACKAGE_VERSION=13
export SOURCE_ROOT=${SOURCE_ROOT_BASE}/llvm-project-${SOURCE_PACKAGE_VERSION}

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

# Configure the build components
cd ${STAGE_ROOT}

if [ -n "${ENABLE_MUSL_LIBC}" ]; then
    LIBC_CMD="-DLIBCXX_HAS_MUSL_LIBC=TRUE"
fi

COMMON_CFLAGS="\
    -unwindlib=none \
    ${COMMON_CFLAGS} \
" \
CXXFLAGS="\
    -nostdlib++ \
    ${CXXFLAGS} \
" \
package-cmake \
    -DCMAKE_C_COMPILER_WORKS=TRUE \
    -DCMAKE_CXX_COMPILER_WORKS=TRUE \
    -DCMAKE_LIPO=${BINDIR}/llvm-lipo \
    -DCMAKE_SIZEOF_VOID_P=8 \
    -DCOMPILER_RT_BUILD_LIBFUZZER=FALSE \
    -DCOMPILER_RT_BUILD_MEMPROF=FALSE \
    -DCOMPILER_RT_BUILD_PROFILE=FALSE \
    -DCOMPILER_RT_BUILD_SANITIZERS=FALSE \
    -DCOMPILER_RT_BUILD_XRAY=FALSE \
    -DCOMPILER_RT_CAN_EXECUTE_TESTS=FALSE \
    -DCOMPILER_RT_DEFAULT_TARGET_TRIPLE=${HOST_TRIPLE} \
    -DCOMPILER_RT_EXCLUDE_ATOMIC_BUILTIN=FALSE \
    -DCOMPILER_RT_HAS_ATOMIC_KEYWORD=TRUE \
    -DCOMPILER_RT_INCLUDE_TESTS=FALSE \
    -DDARWIN_macosx_OVERRIDE_SDK_VERSION=11 \
    -DDARWIN_osx_SYSROOT=${SOURCE_ROOT_BASE}/macosx-11 \
    -DHAVE_CXX_ATOMICS_WITHOUT_LIB=TRUE \
    -DHAVE_CXX_ATOMICS64_WITHOUT_LIB=TRUE \
    -DLIBCXX_CXX_ABI=libcxxabi \
    -DLIBCXX_CXX_ABI_INCLUDE_PATHS=${SOURCE_ROOT}/libcxxabi/include \
    -DLIBCXX_ENABLE_ABI_LINKER_SCRIPT=FALSE \
    -DLIBCXX_ENABLE_ASSERTIONS=FALSE \
    -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=TRUE \
    -DLIBCXX_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXX_ENABLE_FILESYSTEM=TRUE \
    -DLIBCXX_ENABLE_NEW_DELETE_DEFINITIONS=FALSE \
    -DLIBCXX_ENABLE_PARALLEL_ALGORITHMS=TRUE \
    -DLIBCXX_ENABLE_RTTI=TRUE \
    -DLIBCXX_ENABLE_SHARED=TRUE \
    -DLIBCXX_ENABLE_STATIC=FALSE \
    -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=TRUE \
    -DLIBCXX_ENABLE_THREADS=TRUE \
    -DLIBCXX_HAS_ATOMIC_LIB=FALSE \
    -DLIBCXX_HAS_PTHREAD_API=TRUE \
    -DLIBCXX_HAS_WIN32_THREAD_API=FALSE \
    -DLIBCXX_INCLUDE_BENCHMARKS=FALSE \
    -DLIBCXX_INCLUDE_DOCS=FALSE \
    -DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=TRUE \
    -DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=FALSE \
    -DLIBCXX_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_ENABLE_ASSERTIONS=FALSE \
    -DLIBCXXABI_ENABLE_EXCEPTIONS=TRUE \
    -DLIBCXXABI_ENABLE_SHARED=FALSE \
    -DLIBCXXABI_ENABLE_STATIC=TRUE \
    -DLIBCXXABI_ENABLE_THREADS=TRUE \
    -DLIBCXXABI_HAS_NOSTDINCXX_FLAG=TRUE \
    -DLIBCXXABI_INSTALL_LIBRARY=TRUE \
    -DLIBCXXABI_LIBCXX_INCLUDES=${SOURCE_ROOT}/libcxx/include \
    -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=FALSE \
    -DLIBCXXABI_USE_COMPILER_RT=TRUE \
    -DLIBCXXABI_USE_LLVM_UNWINDER=TRUE \
    -DLIBCXXABI_USE_SJLJ_EXCEPTIONS=FALSE \
    -DLIBUNWIND_ENABLE_ASSERTIONS=FALSE \
    -DLIBUNWIND_ENABLE_PEDANTIC=FALSE \
    -DLIBUNWIND_ENABLE_SHARED=TRUE \
    -DLIBUNWIND_ENABLE_STATIC=TRUE \
    -DLIBUNWIND_ENABLE_THREADS=TRUE \
    -DLIBUNWIND_HAS_NOSTDINCXX_FLAG=TRUE \
    -DLIBUNWIND_INCLUDE_DOCS=FALSE \
    -DLIBUNWIND_INSTALL_LIBRARY=TRUE \
    -DLIBUNWIND_SUPPORTS_FNO_EXCEPTIONS_FLAG=TRUE \
    -DLIBUNWIND_SUPPORTS_FNO_RTTI_FLAG=TRUE \
    -DLIBUNWIND_SUPPORTS_NODEFAULTLIBS_FLAG=TRUE \
    -DLIBUNWIND_USE_COMPILER_RT=TRUE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_PROJECTS="compiler-rt;libcxx;libcxxabi;libunwind;parallel-libs;pstl" \
    -DLLVM_TARGETS_TO_BUILD= \
    -DPython3_EXECUTABLE=${PYTHON} \
    "${LIBC_CMD}" \
    ${SOURCE_ROOT}/llvm

# Build the components
INSTALL_TARGET="projects/compiler-rt/install projects/libcxx/install projects/libcxxabi/install projects/libunwind/install projects/parallel-libs/install projects/pstl/install" \
ninja-install

# Build the package
deb-package-build

# Install the package
deb-package-install
