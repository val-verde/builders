#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-icu4c-71-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
"

# Invoke one-shot template for cmake/install
LLVM_SOURCE_ROOT=${SOURCE_ROOT_BASE}/${QUALIFIED_LLVM_PATH}
LLVM_STAGE_ROOT=${STAGE_ROOT_BASE}/${QUALIFIED_LLVM_PATH}-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_CPU}
LLVM_NATIVE_TOOL_ROOT=${LLVM_STAGE_ROOT}
NATIVE_TOOLS_PATH=${BUILD_PACKAGE_PREFIX}/bin
USE_NEWPM=${USE_NEWPM:-TRUE}

if [ "${BUILD_PROCESSOR}" = "aarch64" ] &&
   [ "${BUILD_OS}" = "macos" ]; then
    SWIFT_BUILD_PROCESSOR=arm64
elif [ "${BUILD_PROCESSOR}" = "armv7a" ]; then
    SWIFT_BUILD_PROCESSOR=armv7
elif [ "${BUILD_PROCESSOR}" = "i386" ] ||
     [ "${BUILD_PROCESSOR}" = "i486" ] ||
     [ "${BUILD_PROCESSOR}" = "i586" ] ||
     [ "${BUILD_PROCESSOR}" = "i686" ] ||
     [ "${BUILD_PROCESSOR}" = "i786" ]; then
    SWIFT_BUILD_PROCESSOR=i686
else
    SWIFT_BUILD_PROCESSOR=${BUILD_PROCESSOR}
fi

LLVM_TABLEGEN=`BINDIR=${LLVM_NATIVE_TOOL_ROOT}/bin package-get-path llvm-tblgen EXECUTABLE BUILD`
WASI_SYSROOT=${PACKAGE_PLATFORM_SYSROOT}/../../wasi-wasm32/sysroot

COMMON_CFLAGS="\
    -D_REENTRANT \
    ${COMMON_CFLAGS} \
" \
package-cmake-install-archive \
    -DClang_DIR=${LLVM_STAGE_ROOT}/lib/cmake/clang \
    -DCMAKE_Swift_COMPILER_WORKS=TRUE \
    -DEXPERIMENTAL_STRING_PROCESSING_SOURCE_DIR=${SOURCE_ROOT_BASE}/swift-experimental-string-processing-0 \
    -DICU_I18N_INCLUDE_DIR=${BUILD_PACKAGE_PREFIX}/include \
    -DICU_I18N_LIBRARY_RELEASE=`package-get-path icui18nswift SHARED BUILD` \
    -DICU_UC_INCLUDE_DIR=${BUILD_PACKAGE_PREFIX}/include \
    -DICU_UC_LIBRARY_RELEASE=`package-get-path icuucswift SHARED BUILD` \
    -DLibEdit_INCLUDE_DIRS=${BUILD_PACKAGE_PREFIX}/include \
    -DLibEdit_LIBRARIES=`package-get-path edit SHARED BUILD` \
    -DLibRT_INCLUDE_PATH=${BUILD_PACKAGE_PREFIX}/include \
    -DLibRT_LIBRARIES=`package-get-path rt SHARED BUILD` \
    -DLIBXML2_INCLUDE_DIR=${BUILD_PACKAGE_PREFIX}/include/libxml2 \
    -DLIBXML2_LIBRARY=`package-get-path xml2 SHARED BUILD` \
    -DLLVM_BUILD_LIBRARY_DIR=${LLVM_STAGE_ROOT}/lib \
    -DLLVM_BUILD_MAIN_SRC_DIR=${LLVM_SOURCE_ROOT} \
    -DLLVM_DIR=${LLVM_STAGE_ROOT}/lib/cmake/llvm \
    -DLLVM_ENABLE_ASSERTIONS=FALSE \
    -DLLVM_ENABLE_BACKTRACES=FALSE \
    -DLLVM_ENABLE_DOXYGEN=FALSE \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=TRUE \
    -DLLVM_MAIN_INCLUDE_DIR=${LLVM_SOURCE_ROOT}/llvm/include \
    -DLLVM_TABLEGEN=${LLVM_TABLEGEN} \
    -DLLVM_USE_NEWPM=${USE_NEWPM} \
    -DLLVM_USE_RELATIVE_PATHS_IN_DEBUG_INFO=TRUE \
    -DPython3_EXECUTABLE=${PYTHON} \
    -DSWIFT_BUILD_DYNAMIC_SDK_OVERLAY=FALSE \
    -DSWIFT_BUILD_DYNAMIC_STDLIB=FALSE \
    -DSWIFT_BUILD_PERF_TESTSUITE=FALSE \
    -DSWIFT_BUILD_RUNTIME_WITH_HOST_COMPILER=TRUE \
    -DSWIFT_BUILD_SOURCEKIT=FALSE \
    -DSWIFT_BUILD_STATIC_SDK_OVERLAY=TRUE \
    -DSWIFT_BUILD_STATIC_STDLIB=TRUE \
    -DSWIFT_BUILD_STDLIB_EXTRA_TOOLCHAIN_CONTENT=TRUE \
    -DSWIFT_BUILD_SYNTAXPARSERLIB=FALSE \
    -DSWIFT_BUILD_TEST_SUPPORT_MODULES=FALSE \
    -DSWIFT_CMARK_LIBRARY_DIR=${STAGE_ROOT_BASE}/swift-cmark-${SOURCE_PACKAGE_VERSION}-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_CPU}/src \
    -DSWIFT_ENABLE_DISPATCH=TRUE \
    -DSWIFT_ENABLE_EXPERIMENTAL_CONCURRENCY=FALSE \
    -DSWIFT_ENABLE_EXPERIMENTAL_DIFFERENTIABLE_PROGRAMMING=TRUE \
    -DSWIFT_ENABLE_EXPERIMENTAL_DISTRIBUTED=FALSE \
    -DSWIFT_ENABLE_EXPERIMENTAL_STRING_PROCESSING=TRUE \
    -DSWIFT_ENABLE_SOURCEKIT_TESTS=FALSE \
    -DSWIFT_IMPLICIT_CONCURRENCY_IMPORT=FALSE \
    -DSWIFT_INCLUDE_APINOTES=FALSE \
    -DSWIFT_INCLUDE_DOCS=FALSE \
    -DSWIFT_INCLUDE_TEST_BINARIES=FALSE \
    -DSWIFT_INCLUDE_TESTS=FALSE \
    -DSWIFT_INCLUDE_TOOLS=FALSE \
    -DSWIFT_LINK_SHARED_CLANG=TRUE \
    -DSWIFT_LIPO=${LIPO} \
    -DSWIFT_NATIVE_CLANG_TOOLS_PATH=${NATIVE_TOOLS_PATH} \
    -DSWIFT_NATIVE_LLVM_TOOLS_PATH=${NATIVE_TOOLS_PATH} \
    -DSWIFT_NATIVE_SWIFT_TOOLS_PATH=${NATIVE_TOOLS_PATH} \
    -DSWIFT_PATH_TO_CMARK_BUILD=${STAGE_ROOT_BASE}/swift-cmark-${SOURCE_PACKAGE_VERSION}-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_CPU} \
    -DSWIFT_PATH_TO_CMARK_SOURCE=${SOURCE_ROOT_BASE}/swift-cmark-${SOURCE_PACKAGE_VERSION} \
    -DSWIFT_PATH_TO_LIBDISPATCH_SOURCE=${SOURCE_ROOT_BASE}/swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION} \
    -DSWIFT_PATH_TO_SWIFT_SYNTAX_SOURCE=${SOURCE_ROOT_BASE}/swift-syntax-${SOURCE_PACKAGE_VERSION} \
    -DSWIFT_SDK_WASI_ARCH_wasm32_PATH=${WASI_SYSROOT} \
    -DSWIFT_SDK_WASI_ARCH_wasm32_LIBC_ARCHITECTURE_INCLUDE_DIRECTORY=${WASI_SYSROOT}/include \
    -DSWIFT_SDK_WASI_ARCH_wasm32_LIBC_INCLUDE_DIRECTORY=${WASI_SYSROOT}/include \
    -DSWIFT_WASI_wasm32_ICU_UC_INCLUDE_DIR="${WASI_SYSROOT}/include" \
    -DSWIFT_WASI_wasm32_ICU_UC="${WASI_SYSROOT}/lib/libicuucswift.a" \
    -DSWIFT_WASI_wasm32_ICU_I18N_INCLUDE_DIR="${WASI_SYSROOT}/include" \
    -DSWIFT_WASI_wasm32_ICU_I18N="${WASI_SYSROOT}/lib/libicui18nswift.a" \
    -DSWIFT_WASI_wasm32_ICU_DATA="${WASI_SYSROOT}/lib/libicudataswift.a" \
    -DSWIFT_STDLIB_ASSERTIONS=FALSE \
    -DSWIFT_STDLIB_SUPPORTS_BACKTRACE_REPORTING=FALSE \
    -DSWIFT_USE_LINKER=${BUILD_PACKAGE_PREFIX}/bin/wasm-ld \
    -DSWIFT_VENDOR="${PACKAGE_BASE_NAME}" \
    -DUUID_INCLUDE_DIR=${BUILD_PACKAGE_PREFIX}/include \
    -DUUID_LIBRARY=`package-get-path uuid SHARED BUILD` \
    -DZLIB_INCLUDE_DIR=${BUILD_PACKAGE_PREFIX}/include \
    -DZLIB_LIBRARY_DEBUG=`package-get-path z SHARED BUILD` \
    -DZLIB_LIBRARY_RELEASE=`package-get-path z SHARED BUILD`