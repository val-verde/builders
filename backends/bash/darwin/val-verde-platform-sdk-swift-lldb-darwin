#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-libedit-20210714-3-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-libxml2-2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-llvm-project-15-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-lua-5-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-ncurses-6-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swig-4-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-xz-5-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU} (>=1.0.0) \
"

# Invoke one-shot template for cmake/install
LLVM_SOURCE_ROOT=${SOURCE_ROOT_BASE}/${QUALIFIED_LLVM_PATH}
LLVM_STAGE_ROOT=${STAGE_ROOT_BASE}/${QUALIFIED_LLVM_PATH}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}
LLVM_NATIVE_STAGE_ROOT=${LLVM_NATIVE_STAGE_ROOT:-${STAGE_ROOT_BASE}/${QUALIFIED_LLVM_PATH}-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_CPU}}
LLVM_NATIVE_TOOL_ROOT=${LLVM_STAGE_ROOT}/bin
SOURCE_ROOT=${SOURCE_ROOT_BASE}/${QUALIFIED_LLVM_PATH}/lldb
SWIFT_STAGE_ROOT=${STAGE_ROOT_BASE}/swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}
SWIFT_NATIVE_STAGE_ROOT=${SWIFT_NATIVE_STAGE_ROOT:-${STAGE_ROOT_BASE}/swift-${SOURCE_PACKAGE_VERSION}-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_CPU}}

DISABLE_STRIP=TRUE \
export-compiler-environment

CROSS_TOOLCHAIN_FLAGS_NATIVE=`package-cmake-invocation-arguments-for-variant BUILD`
LLVM_TABLEGEN=`BINDIR=${LLVM_NATIVE_TOOL_ROOT}/bin package-get-path llvm-tblgen EXECUTABLE BUILD`
PYTHON_CONFIG=`package-get-path python3-config SCRIPT HOST`

CXX_STANDARD=17 \
package-cmake-install-archive \
    -DClang_DIR=${LLVM_STAGE_ROOT}/lib/cmake/clang \
    -DCLANG_LINK_CLANG_DYLIB=TRUE \
    -DCMAKE_ASM-ATT_COMPILER=${AS} \
    -DCMAKE_ASM-ATT_FLAGS="${ASFLAGS}" \
    -DCROSS_TOOLCHAIN_FLAGS_NATIVE="${CROSS_TOOLCHAIN_FLAGS_NATIVE}" \
    -DCURSES_CURSES_LIBRARY=`package-get-path ncurses SHARED HOST` \
    -DCURSES_FORM_LIBRARY=`package-get-path form SHARED HOST` \
    -DCURSES_INCLUDE_PATH=${PACKAGE_PREFIX}/include/ncurses \
    -DCURSES_NCURSES_LIBRARY=`package-get-path ncurses SHARED HOST` \
    -DLibEdit_INCLUDE_DIRS=${PACKAGE_PREFIX}/include \
    -DLibEdit_LIBRARIES=`package-get-path edit SHARED HOST` \
    -DLIBLZMA_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DLIBLZMA_LIBRARY=`package-get-path lzma SHARED HOST` \
    -DLIBXML2_INCLUDE_DIR=${PACKAGE_PREFIX}/include/libxml2 \
    -DLIBXML2_LIBRARY=`package-get-path xml2 SHARED HOST` \
    -DLLDB_BUILD_FRAMEWORK=TRUE \
    -DLLDB_ENABLE_CURSES=TRUE \
    -DLLDB_ENABLE_LIBEDIT=TRUE \
    -DLLDB_ENABLE_LIBXML2=TRUE \
    -DLLDB_ENABLE_LUA=TRUE \
    -DLLDB_ENABLE_LZMA=TRUE \
    -DLLDB_ENABLE_PYTHON=TRUE \
    -DLLDB_ENABLE_SWIFT_SUPPORT=TRUE \
    -DLLDB_ENABLE_WERROR=FALSE \
    -DLLDB_FRAMEWORK_INSTALL_DIR=${PACKAGE_PLATFORM_SYSROOT}/System/Library/Frameworks \
    -DLLDB_INCLUDE_TESTS=FALSE \
    -DLLDB_PATH_TO_NATIVE_SWIFT_BUILD=${SWIFT_NATIVE_STAGE_ROOT}/lib/cmake/swift \
    -DLLDB_PYTHON_EXE_RELATIVE_PATH=bin/python \
    -DLLDB_PYTHON_EXT_SUFFIX=`${PYTHON_CONFIG} --extension-suffix` \
    -DLLDB_PYTHON_RELATIVE_PATH=lib/python${PYTHON_VERSION}/site-packages \
    -DLLDB_TABLEGEN=${STAGE_ROOT_BASE}/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_CPU}/bin/lldb-tblgen \
    -DLLDB_USE_SYSTEM_DEBUGSERVER=TRUE \
    -DLLDB_USE_SYSTEM_SIX=TRUE \
    -DLLDB_BUILD_FRAMEWORK=TRUE \
    -DLLVM_BUILD_LIBRARY_DIR=${LLVM_STAGE_ROOT}/lib \
    -DLLVM_BUILD_MAIN_SRC_DIR=${LLVM_SOURCE_ROOT}/llvm \
    -DLLVM_DIR=${LLVM_STAGE_ROOT}/lib/cmake/llvm \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_ASSERTIONS=FALSE \
    -DLLVM_ENABLE_BACKTRACES=FALSE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LLD=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_INCLUDE_TESTS=FALSE \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=TRUE \
    -DLLVM_LINK_LLVM_DYLIB=TRUE \
    -DLLVM_MAIN_INCLUDE_DIR=${LLVM_SOURCE_ROOT}/llvm/include \
    -DLLVM_TABLEGEN=${LLVM_TABLEGEN} \
    -DLUA_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DLUA_LIBRARY=`package-get-path lua STATIC HOST` \
    -DNATIVE_Clang_DIR=${LLVM_NATIVE_STAGE_ROOT}/lib/cmake/clang \
    -DNATIVE_LLVM_DIR=${LLVM_NATIVE_STAGE_ROOT}/lib/cmake/lib \
    -DPython3_EXECUTABLE=${PYTHON} \
    -DPython3_ROOT_DIR=${PACKAGE_PREFIX} \
    -DPANEL_LIBRARIES=`package-get-path panel SHARED HOST` \
    -DPYTHON_HOME=${PACKAGE_PREFIX} \
    -DSwift_DIR=${SWIFT_STAGE_ROOT}/lib/cmake/swift \
    -DSWIG_EXECUTABLE=`package-get-path swig EXECUTABLE BUILD` \
    -DZLIB_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DZLIB_LIBRARY_DEBUG=`package-get-path z SHARED HOST` \
    -DZLIB_LIBRARY_RELEASE=`package-get-path z SHARED HOST`