#!/bin/bash

set -e

# Source package build helper functions
export COMMON_CFLAGS="-Wl,-platform_version,${HOST_OS},${HOST_OS_API_LEVEL},${HOST_OS_API_LEVEL} -Wno-unused-command-line-argument"
export SYSTEM_NAME=Darwin
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

# compiler-rt build
if [ "${BUILD_PROCESSOR}" != ${HOST_PROCESSOR} ]; then
    CLANG_RT_LIB=`package-get-filename clang_rt.builtins-${HOST_PROCESSOR} STATIC` \
    package-invoke-builder compiler-rt-musl
fi

# libunwind build
package-invoke-builder libunwind-cross

# libcxxabi build
package-invoke-builder libcxxabi-cross

# libcxx build
package-invoke-builder libcxx-cross

# llvm dependencies
package-invoke-builder llvm-dependencies-darwin

# swift tools build
package-invoke-builder swift-tools-darwin

# swift sdk build
package-invoke-builder swift-sdk-darwin

# go build
package-invoke-builder go-cross

# graphics sdk build
package-invoke-builder graphics-sdk-cross

# node + sdk build
package-invoke-builder node-cross
package-invoke-builder npm-yarn-cross

# rust build
# package-invoke-builder rust-cross
