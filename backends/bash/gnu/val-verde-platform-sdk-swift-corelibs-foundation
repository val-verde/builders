#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=swift-corelibs-foundation
export SOURCE_PACKAGE_VERSION=5

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-curl-7-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-icu4c-68-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-libxml2-2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-llvm-project-12-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

# Configure the build components
cd ${STAGE_ROOT}
package-cmake \
    -Ddispatch_DIR=${STAGE_ROOT_BASE}/swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DICU_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DICU_LIBRARY=${PACKAGE_PREFIX}/lib/libicudataswift.so \
    -DICU_I18N_LIBRARY_RELEASE=${PACKAGE_PREFIX}/lib/libicui18nswift.so \
    -DICU_UC_LIBRARY_RELEASE=${PACKAGE_PREFIX}/lib/libicuucswift.so \
    -DCURL_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DCURL_LIBRARY=${PACKAGE_PREFIX}/lib/libcurl.so \
    -DLIBXML2_INCLUDE_DIR=${PACKAGE_PREFIX}/include/libxml2 \
    -DLIBXML2_LIBRARY=${PACKAGE_PREFIX}/lib/libxml2.so \
    ${SOURCE_ROOT}

# Build the components
ninja-install

# RPATH fixups
COMPONENTS="\
    ${INSTALL_PREFIX}/lib/swift/${HOST_KERNEL}/lib*.so \
" \
COMPONENT_RPATH="\$ORIGIN:\$ORIGIN/../.." \
rpath-fixup

# Build the package
deb-package-build
