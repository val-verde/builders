#!/bin/bash

set -e

if [ "${BUILD_TRIPLE}" = "${HOST_TRIPLE}" ]; then
    export \
        APT=/usr/bin/apt \
        AUTOGEN=/usr/bin/autogen \
        BASENAME=/usr/bin/basename \
        BASH=/usr/bin/bash \
        BISON=/usr/bin/bison \
        CHMOD=/usr/bin/chmod \
        CP=/usr/bin/cp \
        CURL=/usr/bin/curl \
        CUT=/usr/bin/cut \
        DNF=/usr/bin/dnf \
        DPKG=/usr/bin/dpkg \
        ECHO=/usr/bin/echo \
        FIND=/usr/bin/find \
        GAWK=/usr/bin/gawk \
        GETTEXT=/usr/bin/gettext \
        GIT=/usr/bin/git \
        GPERF=/usr/bin/gperf \
        GREP=/usr/bin/grep \
        INSTALL=/usr/bin/install \
        LESS=/usr/bin/less \
        LN=/usr/bin/ln \
        LS=/usr/bin/ls \
        M4=/usr/bin/m4 \
        MAKE=/usr/bin/make \
        MAKEINFO=/usr/bin/true \
        MESON=/usr/bin/meson \
        MKDIR=/usr/bin/mkdir \
        MV=/usr/bin/mv \
        NINJA=/usr/bin/ninja \
        PERL=/usr/bin/perl \
        PYTHON=/usr/bin/python3 \
        READLINK=/usr/bin/readlink \
        RM="/usr/bin/rm -f" \
        RMDIR=/usr/bin/rmdir \
        RPM=/usr/bin/rpm \
        RSYNC=/usr/bin/rsync \
        SED=/usr/bin/sed \
        SSH=/usr/bin/ssh \
        TAR=/usr/bin/tar \
        TEE=/usr/bin/tee \
        TR=/usr/bin/tr \
        WGET=/usr/bin/wget \
        WHICH=/usr/bin/which \
        XARGS=/usr/bin/xargs \
        XZ=/usr/bin/xz
    GUNZIP=/usr/bin/gunzip
    GZIP=/usr/bin/gzip
    UNZIP=/usr/bin/unzip
    ZIP=/usr/bin/zip
fi

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-api
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

# glibc build phase
SPECIFIED_SYSROOT=${SYSROOT}
unset SYSROOT

if [ "${BUILD_TRIPLE}" = ${HOST_TRIPLE} ]; then
    SPECIFIED_BUILD_SYSROOT=${BUILD_SYSROOT}
    unset BUILD_SYSROOT
fi

# kernel headers builds
package-invoke-builder kernel-headers-cross 5

# glibc runtime build
package-invoke-builder glibc-runtime 2 no-install

# glibc interface build
package-invoke-builder glibc-interface 2

PACKAGES_TO_MANAGE=( 'glibc-runtime-2' 'HOST' )
package-invoke-archive-action install ${PACKAGES_TO_MANAGE[@]}

# glibc build phase complete
export SYSROOT=${SPECIFIED_SYSROOT}
unset SPECIFIED_SYSROOT

if [ "${BUILD_TRIPLE}" = ${HOST_TRIPLE} ]; then
    export BUILD_SYSROOT=${SPECIFIED_BUILD_SYSROOT}
    unset SPECIFIED_BUILD_SYSROOT
fi

# autoconf build
package-invoke-builder autoconf-cross 2

# automake build
package-invoke-builder automake-cross 1

# autoconf-archive build
package-invoke-builder autoconf-archive-cross 2021

# libxcrypt build
package-invoke-builder libxcrypt-cross 4

# zlib build
package-invoke-builder zlib-cross 1

# bzip2 build
package-invoke-builder bzip2-cross 1

# lz4 build
package-invoke-builder lz4-cross 1

# xxhash build
package-invoke-builder xxhash-cross 0

# zip build
package-invoke-builder zip-cross 30
unset ZIP

# zstd build
package-invoke-builder zstd-cross 0

# unzip build
package-invoke-builder unzip-cross 60
unset UNZIP

# help2man build
package-invoke-builder help2man-cross 1

# gperf build
package-invoke-builder gperf-cross 3
unset GPERF

# libtool build
ENABLE_STAGE_ROOT_BUILD=TRUE \
package-invoke-builder libtool-cross 2

# libatomic-ops build
package-invoke-builder libatomic-ops-cross 7

# libffi build
package-invoke-builder libffi-cross 3

# icu build
ENABLE_STAGE_ROOT_BUILD=TRUE \
package-invoke-builder icu4c-cross 70

# libunistring build
package-invoke-builder libunistring-cross 0

# gc build
package-invoke-builder gc-cross 8

# gmp build
package-invoke-builder gmp-cross 6

# ncurses build
package-invoke-builder ncurses-cross 6

# gettext build (without libxml2 and xz)
ARCHIVE_PATH=${BOOTSTRAP_ARCHIVE_PATH} \
package-invoke-builder gettext-cross 0 bootstrap-only
unset GETTEXT

# gzip build
package-invoke-builder gzip-cross 1
unset \
    GUNZIP \
    GZIP

# xz build
package-invoke-builder xz-cross 5
unset XZ

# libxml2 build
ARCHIVE_PATH=${BOOTSTRAP_ARCHIVE_PATH} \
package-invoke-builder libxml2-cross 2 bootstrap-only

# gettext build
package-invoke-builder gettext-cross 0

if [ "${BUILD_TRIPLE}" = "${HOST_TRIPLE}" ]; then
    # texinfo build
    package-invoke-builder texinfo-cross 6
fi

unset MAKEINFO

# guile build
package-invoke-builder guile-cross 3

# make build
package-invoke-builder make-cross 4
unset MAKE

# m4 build
package-invoke-builder m4-cross 1
unset M4

# ninja build
package-invoke-builder ninja-cross 1
unset NINJA

# file build
package-invoke-builder file-cross 5
unset FILE

if [ "${BUILD_TRIPLE}" = "${HOST_TRIPLE}" ]; then
    # perl build
    package-invoke-builder perl-cross 5
fi

unset PERL

# libedit build
package-invoke-builder libedit-cross 20210714-3

# readline build
package-invoke-builder readline-cross 8

# pcre build
package-invoke-builder pcre-cross 8

# mpfr build
package-invoke-builder mpfr-cross 4

# mpc build
package-invoke-builder mpc-cross 1

# isl build
package-invoke-builder isl-cross 0

# libaio build
package-invoke-builder libaio-cross 0

# libev build
package-invoke-builder libev-cross 4

# gdbm build
package-invoke-builder gdbm-cross 1

# libdb build
package-invoke-builder libdb-cross 5

# tcl build
ENABLE_STAGE_ROOT_BUILD=TRUE \
package-invoke-builder tcl-cross 8

# sqlite build
package-invoke-builder sqlite-cross 3

# openssl build
package-invoke-builder openssl-cross 1

# libcap build
package-invoke-builder libcap-cross 2

# krb5 build
package-invoke-builder krb5-cross 1

# expat build
package-invoke-builder expat-cross 2

if [ "${BUILD_TRIPLE}" = "${HOST_TRIPLE}" ]; then
    # perl-xml-parser build
    package-invoke-builder perl-xml-parser-cross 2
fi

# gawk build
package-invoke-builder gawk-cross 5

# autogen build
package-invoke-builder autogen-cross 5
unset AUTOGEN

# libgpg-error build
package-invoke-builder libgpg-error-cross 1

# libgcrypt build
package-invoke-builder libgcrypt-cross 1

# libassuan build
package-invoke-builder libassuan-cross 2

# gpgme build
package-invoke-builder gpgme-cross 1

# indent build
package-invoke-builder indent-cross 2

# util-linux build
ARCHIVE_PATH=${BOOTSTRAP_ARCHIVE_PATH} \
package-invoke-builder util-linux-cross 2 bootstrap-only

# attr build
package-invoke-builder attr-cross 2

# acl build
package-invoke-builder acl-cross 2

# libarchive build
package-invoke-builder libarchive-cross 3

# libssh build
package-invoke-builder libssh-cross 0

# libssh2 build
package-invoke-builder libssh2-cross 1

# curl build
package-invoke-builder curl-cross 7
unset CURL

# libndp build
package-invoke-builder libndp-cross 1

# apple-mig build
package-invoke-builder apple-mig-cross 121

# apple-xar build
package-invoke-builder apple-xar-cross 452

# alsa-lib build
package-invoke-builder alsa-lib-cross 1

# libuv build
package-invoke-builder libuv-cross 1

# ldns build
package-invoke-builder ldns-cross 1

# c-ares build
package-invoke-builder c-ares-cross 1

# openssh-portable build
package-invoke-builder openssh-portable-cross 8
unset SSH

# bash build
package-invoke-builder bash-cross 5
unset BASH

# grep build
package-invoke-builder grep-cross 3
unset GREP

# sed build
package-invoke-builder sed-cross 4
unset SED

# bison build
package-invoke-builder bison-cross 3
unset BISON

if [ "${BUILD_TRIPLE}" = "${HOST_TRIPLE}" ]; then
    # flex build
    package-invoke-builder flex-cross 2
fi

# jq build
package-invoke-builder jq-cross 1

# json-c build
package-invoke-builder json-c-cross 0

# tar build
package-invoke-builder tar-cross 1
unset TAR

# bc build
package-invoke-builder bc-cross 1

# coreutils build
ENABLE_STAGE_ROOT_BUILD=TRUE \
package-invoke-builder coreutils-cross 8
unset \
    BASENAME \
    CHMOD \
    CP \
    CUT \
    ECHO \
    INSTALL \
    LS \
    LN \
    MKDIR \
    MV \
    READLINK \
    RM \
    RMDIR \
    TEE \
    TR

# which build
package-invoke-builder which-cross 2
unset WHICH

# ed build
package-invoke-builder ed-cross 1

# findutils build
package-invoke-builder findutils-cross 4
unset \
    FIND \
    XARGS

# less build
package-invoke-builder less-cross 590
unset LESS

# dpkg build
package-invoke-builder dpkg-cross 1
unset DPKG

# rsync build
package-invoke-builder rsync-cross 3
unset RSYNC

# lua build
package-invoke-builder lua-cross 5

# wget build
package-invoke-builder wget-cross 1
unset WGET

if [ "${BUILD_TRIPLE}" = "${HOST_TRIPLE}" ]; then
    # python bootstrap build (with pip)
    ARCHIVE_PATH=${BOOTSTRAP_ARCHIVE_PATH} \
    ENABLE_PIP=TRUE \
    ENABLE_STAGE_ROOT_BUILD=TRUE \
    package-invoke-builder python-cross 3
    unset PYTHON

    # python-setuptools build
    package-invoke-builder python-setuptools-cross 60 no-install

    # python-pip build
    package-invoke-builder python-pip-cross 21 no-install

    # python build (without pip)
    ENABLE_STAGE_ROOT_BUILD=TRUE \
    package-invoke-builder python-cross 3 no-install

    # install python-pip package
    PACKAGES_TO_MANAGE=( 'python-3' 'HOST'
                         'python-pip-21' 'HOST'
                         'python-setuptools-60' 'HOST' )

    package-invoke-archive-action install ${PACKAGES_TO_MANAGE[@]}
else
    # python build
    ENABLE_STAGE_ROOT_BUILD=TRUE \
    package-invoke-builder python-cross 3
    unset PYTHON

    # python-setuptools build
    package-invoke-builder python-setuptools-cross 60

    # python-pip build
    package-invoke-builder python-pip-cross 21
fi

# libxml2 build (with python support)
package-invoke-builder libxml2-cross 2

# libxslt build
package-invoke-builder libxslt-cross 1

# pugixml build
package-invoke-builder pugixml-cross 1

# xmlto build
package-invoke-builder xmlto-cross 0

# libyaml build
package-invoke-builder libyaml-cross 0

# libzmq build
package-invoke-builder libzmq-cross 4

# protobuf build
package-invoke-builder protobuf-cross 3

# python sdk build
package-invoke-category-builder python-sdk-cross
unset MESON

# dnf package manager category build
package-invoke-category-builder dnf-package-manager-cross
unset RPM
unset DNF

# itstool build
package-invoke-builder itstool-cross 2

# gtk-doc build
package-invoke-builder gtk-doc-cross 1

# libtasn1 build
package-invoke-builder libtasn1-cross 4

# p11-kit build
ARCHIVE_PATH=${BOOTSTRAP_ARCHIVE_PATH} \
DISABLE_SYSTEMD=TRUE \
package-invoke-builder p11-kit-cross 0

# nettle build
package-invoke-builder nettle-cross 3

# unbound build
package-invoke-builder unbound-cross 1

# gnutls build
package-invoke-builder gnutls-cross 3

# libmicrohttpd build
package-invoke-builder libmicrohttpd-cross 0

# elfutils build
ENABLE_STAGE_ROOT_BUILD=TRUE \
package-invoke-builder elfutils-cross 0

# strace build
package-invoke-builder strace-cross 5

# glib build
package-invoke-builder glib-cross 1

if [ "${BUILD_TRIPLE}" = "${HOST_TRIPLE}" ]; then
    # gobject-introspection build
    package-invoke-builder gobject-introspection-cross 1
fi

# libsecret build
package-invoke-builder libsecret-cross 0

# pkg-config build
package-invoke-builder pkg-config-cross 0

if [ "${BUILD_TRIPLE}" = "${HOST_TRIPLE}" ]; then
    # ocaml build
    ENABLE_STAGE_ROOT_BUILD=TRUE \
    package-invoke-builder ocaml-cross 4

    # ocaml-sdk build
    package-invoke-category-builder ocaml-sdk-cross
fi

# graphics server build
package-invoke-category-builder graphics-server-cross

# graphviz build
ENABLE_STAGE_ROOT_BUILD=TRUE \
package-invoke-builder graphviz-cross 2

# intltool build
package-invoke-builder intltool-cross 0

# systemd build
package-invoke-builder systemd 250

# p11-kit build
package-invoke-builder p11-kit-cross 0

# dbus build
package-invoke-builder dbus-cross 1

# cups build
package-invoke-builder cups-cross 2

# util-linux build (with python and systemd support)
package-invoke-builder util-linux-cross 2

# lvm2 build
package-invoke-builder lvm2-cross 2

# apt build
package-invoke-builder apt-cross 2
unset APT

# alien package tool build
package-invoke-builder alien-package-tool-cross 8

# AI SDK build
package-invoke-category-builder ai-sdk-cross

# openjdk build
ENABLE_STAGE_ROOT_BUILD=TRUE \
package-invoke-builder openjdk-cross 17

# maven build
package-invoke-builder maven-cross 3

# onetbb build
package-invoke-builder onetbb-cross 2021

# z3 build
package-invoke-builder z3-cross 4

# git build
package-invoke-builder git-cross 2
unset GIT

# vim build
package-invoke-builder vim-cross 8

# cmake build
package-invoke-builder cmake-cross 3

# gflags build
package-invoke-builder gflags-cross 2

# glog build
package-invoke-builder glog-cross 0

# boost build
package-invoke-builder boost-cross 1

# cereal build
package-invoke-builder cereal-cross 1

# libobjc2 build
package-invoke-builder libobjc2-cross 2

# android patch elf
package-invoke-builder android-patch-elf-cross 1

# jwasm (ml64) cross compiler build
package-invoke-builder jwasm 2

# re2c build
package-invoke-builder re2c-cross 3

# alive2 build
package-invoke-builder alive2-cross 1

# hiredis build
package-invoke-builder hiredis-cross 1

# ccache build
package-invoke-builder ccache-cross 4

# distcc build
package-invoke-builder distcc-cross 3

# binutils-gdb build
package-invoke-builder cross-binutils-gdb-cross 2

# gcc build
package-invoke-builder cross-gcc-cross 11