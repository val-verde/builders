#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-libedit-20210714-3-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-libxml2-2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-llvm-project-13-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-lua-5-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-ncurses-6-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-python-3-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swig-4-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-xz-5-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"
export LLVM_SOURCE_ROOT=${SOURCE_ROOT_BASE}/${QUALIFIED_LLVM_PATH}
export LLVM_STAGE_ROOT=${STAGE_ROOT_BASE}/${QUALIFIED_LLVM_PATH}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
export SOURCE_ROOT=${SOURCE_ROOT_BASE}/${QUALIFIED_LLVM_PATH}/lldb
export SWIFT_STAGE_ROOT=${STAGE_ROOT_BASE}/swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}

# Invoke one-shot template for cmake/install
COMMON_CFLAGS="\
    -Wno-register \
    ${COMMON_CFLAGS} \
" \
CXX_STANDARD=17 \
RPATH_COMPONENTS="\
    ${INSTALL_PREFIX}/bin/lldb \
    ${INSTALL_PREFIX}/bin/repl_swift \
    ${INSTALL_PREFIX}/lib/${SHARED_LIBRARY_PREFIX}lldb${SHARED_LIBRARY_SUFFIX} \
" \
package-cmake-install-archive \
    -DClang_DIR=${LLVM_STAGE_ROOT}/lib/cmake/clang \
    -DCLANG_LINK_CLANG_DYLIB=TRUE \
    -DCMAKE_EXE_LINKER_FLAGS="-O2" \
    -DCURSES_CURSES_LIBRARY=`package-get-path ncurses SHARED HOST` \
    -DCURSES_FORM_LIBRARY=`package-get-path form SHARED HOST` \
    -DCURSES_INCLUDE_PATH=${PACKAGE_PREFIX}/include/ncurses \
    -DCURSES_NCURSES_LIBRARY=`package-get-path ncurses SHARED HOST` \
    -DLibEdit_INCLUDE_DIRS=${PACKAGE_PREFIX}/include \
    -DLibEdit_LIBRARIES=`package-get-path edit SHARED HOST` \
    -DLIBLZMA_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DLIBLZMA_LIBRARY=`package-get-path lzma SHARED HOST` \
    -DLIBXML2_INCLUDE_DIR=${PACKAGE_PREFIX}/include/libxml2 \
    -DLIBXML2_LIBRARY=`package-get-path xml2 SHARED HOST` \
    -DLLDB_ENABLE_CURSES=TRUE \
    -DLLDB_ENABLE_LIBEDIT=TRUE \
    -DLLDB_ENABLE_LIBXML2=TRUE \
    -DLLDB_ENABLE_LUA=TRUE \
    -DLLDB_ENABLE_LZMA=TRUE \
    -DLLDB_ENABLE_PYTHON=TRUE \
    -DLLDB_ENABLE_SWIFT_SUPPORT=TRUE \
    -DLLDB_ENABLE_WERROR=FALSE \
    -DLLDB_INCLUDE_TESTS=FALSE \
    -DLLDB_PYTHON_RELATIVE_PATH=lib/python${PYTHON_VERSION}/site-packages \
    -DLLDB_USE_SYSTEM_SIX=TRUE \
    -DLLVM_BUILD_LIBRARY_DIR=${LLVM_STAGE_ROOT}/lib \
    -DLLVM_BUILD_MAIN_SRC_DIR=${LLVM_SOURCE_ROOT}/llvm \
    -DLLVM_DIR=${LLVM_STAGE_ROOT}/lib/cmake/llvm \
    -DLLVM_ENABLE_ASSERTIONS=FALSE \
    -DLLVM_ENABLE_BACKTRACES=FALSE \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LLD=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_INCLUDE_TESTS=FALSE \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=TRUE \
    -DLLVM_LINK_LLVM_DYLIB=TRUE \
    -DLLVM_MAIN_INCLUDE_DIR=${LLVM_SOURCE_ROOT}/llvm/include \
    -DLLVM_TABLEGEN=${LLVM_STAGE_ROOT}/bin/llvm-tblgen \
    -DLUA_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DLUA_LIBRARY=`package-get-path lua STATIC HOST` \
    -DPython3_EXECUTABLE=${PYTHON} \
    -DPython3_INCLUDE_DIRS=${PACKAGE_PREFIX}/include/python${PYTHON_VERSION} \
    -DPython3_LIBRARIES=`package-get-path python${PYTHON_VERSION} SHARED HOST` \
    -DPANEL_LIBRARIES=`package-get-path panel SHARED HOST` \
    -DSwift_DIR=${SWIFT_STAGE_ROOT}/lib/cmake/swift \
    -DSWIG_EXECUTABLE=${BUILD_PACKAGE_PREFIX}/bin/swig