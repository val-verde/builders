#!/bin/bash

set -e

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

# Invoke one-shot template for stage/configure/install
function package-install-completion-callback() {
    if [ -n "${ENABLE_BOOTSTRAP}" ]; then
        ${MKDIR} -p ${INSTALL_PREFIX}/glibc-interface/usr/lib
	${MV} ${INSTALL_PREFIX}/include \
              ${INSTALL_PREFIX}/glibc-interface/usr/
        ${LN} -sf \
              ../../../include/asm \
              ../../../include/asm-generic \
              ../../../include/linux \
              ${INSTALL_PREFIX}/glibc-interface/usr/include/
        ${TOUCH} ${INSTALL_PREFIX}/glibc-interface/usr/include/gnu/stubs.h
        package-rsync -ax \
                      ${STAGE_ROOT}/build/csu/crt*.o \
                      ${INSTALL_PREFIX}/glibc-interface/usr/lib/
    else
        ${RM} -rf ${INSTALL_PREFIX}/../lib
        ${MV} ${INSTALL_PREFIX}/../lib64 \
              ${INSTALL_PREFIX}/glibc-interface
        ${LN} -sf \
              ../glibc-interface/libanl.so.1 \
              ${INSTALL_PREFIX}/lib/libanl.so
        ${LN} -sf \
              ../glibc-interface/libdl.so.2 \
              ${INSTALL_PREFIX}/lib/libdl.so
        ${LN} -sf \
              ../glibc-interface/libnsl.so.1 \
              ${INSTALL_PREFIX}/lib/libnsl.so
        ${LN} -sf \
              ../glibc-interface/libnss_compat.so.2 \
              ${INSTALL_PREFIX}/lib/libnss_compat.so
        ${LN} -sf \
              ../glibc-interface/libnss_db.so.2 \
              ${INSTALL_PREFIX}/lib/libnss_db.so
        ${LN} -sf \
              ../glibc-interface/libnss_dns.so.2 \
              ${INSTALL_PREFIX}/lib/libnss_dns.so
        ${LN} -sf \
              ../glibc-interface/libnss_files.so.2 \
              ${INSTALL_PREFIX}/lib/libnss_files.so
        ${LN} -sf \
              ../glibc-interface/libnss_hesiod.so.2 \
              ${INSTALL_PREFIX}/lib/libnss_hesiod.so
        ${LN} -sf \
              ../glibc-interface/libpthread.so.0 \
              ${INSTALL_PREFIX}/lib/libpthread.so
        ${LN} -sf \
              ../glibc-interface/libresolv.so.2 \
              ${INSTALL_PREFIX}/lib/libresolv.so
        ${LN} -sf \
              ../glibc-interface/librt.so.1 \
              ${INSTALL_PREFIX}/lib/librt.so
        ${LN} -sf \
              ../glibc-interface/libthread_db.so.1 \
              ${INSTALL_PREFIX}/lib/libthread_db.so
        ${LN} -sf \
              ../glibc-interface/libutil.so.1 \
              ${INSTALL_PREFIX}/lib/libutil.so
        ${LN} -sf \
              ../glibc-interface/libBrokenLocale.so.1 \
              ${INSTALL_PREFIX}/lib/libBrokenLocale.so

        if [ "${HOST_PROCESSOR}" = "aarch64" ]; then
            ${LN} -sf \
                  ../glibc-interface/libm.so.6 \
                  ${INSTALL_PREFIX}/lib/libm.so
        elif [ "${HOST_PROCESSOR}" = "x86_64" ]; then
            ${LN} -sf \
                  ../glibc-interface/libmvec.so.1 \
                  ${INSTALL_PREFIX}/lib/libmvec.so
            ${SED} -i \
                   "s| /lib64/| ../glibc-interface/|g" \
                   ${INSTALL_PREFIX}/lib/libm.so
        fi

        ${SED} -i \
               "s| /usr/lib/| |g" \
               ${INSTALL_PREFIX}/lib/libc.so
        ${SED} -i \
               "s| /lib/| ../glibc-interface/|g" \
               ${INSTALL_PREFIX}/lib/libc.so
        ${SED} -i \
               "s| /lib64/| ../glibc-interface/|g" \
               ${INSTALL_PREFIX}/lib/libc.so
    fi
}

if [ -n "${ENABLE_BOOTSTRAP}" ]; then
    DISABLE_TOOL_BUILD=TRUE

    function tool-install-invocation() {
        INSTALL_TARGET="install-headers" \
        tool-install

        INSTALL_TARGET="csu/subdir_lib" \
        tool-install
    }

    TOOL_INSTALL_INVOCATION=tool-install-invocation
fi

if [ "${HOST_PROCESSOR}" = "x86_64" ]; then
    ENABLE_OR_DISABLE_STATIC_PIE=enable
else
    ENABLE_OR_DISABLE_STATIC_PIE=disable
fi

BUILD_CC=`BINDIR=${BUILD_PACKAGE_PREFIX}/${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_CPU}/bin package-get-path ${BUILD_TRIPLE}-gcc EXECUTABLE BUILD` \
CC=`BINDIR=${BUILD_PACKAGE_PREFIX}/${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_CPU}/bin package-get-path ${HOST_TRIPLE}-gcc EXECUTABLE BUILD` \
CONFIGURE_PACKAGE_PLATFORM_PREFIX=/ \
DESTDIR=${INSTALL_PREFIX}/.. \
DISABLE_FORTIFY_SOURCE_LEVEL=TRUE \
DISABLE_TOOL_BUILD=${DISABLE_TOOL_BUILD} \
INSTALL_TARGET=${INSTALL_TARGET} \
PACKAGE_INSTALL_COMPLETION_CALLBACK=package-install-completion-callback \
TOOL_INSTALL_INVOCATION=${TOOL_INSTALL_INVOCATION} \
USE_GCC=TRUE \
package-stage-configure-install-archive \
    libc_cv_include_x86_isa_level=no \
    --disable-crypt \
    --disable-sanity-checks \
    --disable-werror \
    --enable-cet=yes \
    --enable-kernel=4.0 \
    --with-headers=${PACKAGE_PREFIX}/include \
    --${ENABLE_OR_DISABLE_STATIC_PIE}-static-pie
