#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=swift-llbuild
export SOURCE_PACKAGE_VERSION=5

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-llvm-project-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-sqlite-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"
SOURCE_MAJOR_VERSION=$(package-major-version)

# Configure the build components
cd ${STAGE_ROOT}
CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    -I${SOURCE_ROOT_BASE}/${SOURCE_PACKAGE_NAME}-${SOURCE_MAJOR_VERSION}/lib/llvm/Support \
    -Wno-documentation \
    -Wno-macro-redefined \
    -Wno-unused-function \
    ${CXXFLAGS} \
" \
LIBS="\
    -lole32 \
    -luuid \
    ${LIBS} \
" \
SWIFTCFLAGS="\
    -use-ld=${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-mslink \
    ${SWIFTCFLAGS} \
" \
package-cmake \
    -Ddispatch_DIR=${STAGE_ROOT_BASE}/swift-corelibs-libdispatch-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DFoundation_DIR=${STAGE_ROOT_BASE}/swift-corelibs-foundation-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DLLBUILD_SUPPORT_BINDINGS=Swift \
    -DSQLite3_INCLUDE_DIR=${PACKAGE_PREFIX}/include \
    -DSQLite3_LIBRARY=${PACKAGE_PREFIX}/lib/libsqlite3.dll.a \
    ${SOURCE_ROOT}

# Build the components
ninja-install

${RSYNC} -aPx \
         ${STAGE_ROOT}/lib/*.dll* \
         ${INSTALL_PREFIX}/lib

# Build the package
deb-package-build
