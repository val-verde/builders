#!/bin/bash

set -e

# Source package build helper functions
export PACKAGE_USR_PREFIX=/
export SYSTEM_NAME=Windows
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

# windows mingw-headers build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-mingw-w64-headers

# windows mingw-crt build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-mingw-w64-crt

# windows compiler-rt build (for host)
CLANG_RT_LIB=libclang_rt.builtins-${HOST_PROCESSOR}.a \
DST_CLANG_RT_LIB=libclang_rt.builtins-${HOST_PROCESSOR}.a \
CXXFLAGS="\
    -Wl,/force:unresolved \
    ${CXXFLAGS} \
" \
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-compiler-rt

# windows libunwind build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-libunwind-windows

# windows mingw-winpthreads build
LD=${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-mslink \
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-winpthreads-cross

# windows libcxxabi build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-libcxxabi-windows

# windows libcxx build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-libcxx-windows

# windows llvm dependencies
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-llvm-dependencies-windows

# windows swift tools build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-tools-windows

# windows swift sdk build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-swift-sdk-windows

# windows graphics sdk build
bash ${VAL_VERDE_GH_TEAM}-platform-sdk-graphics-sdk-cross
