#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=swift-corelibs-xctest
export SOURCE_PACKAGE_VERSION=5

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-builder-utils

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-llvm-project-14-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-foundation-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"

# Invoke one-shot template for cmake/install
function package-install-completion-callback() {
    ${MV} ${INSTALL_PREFIX}/lib/swift/windows/XCTest.lib \
          ${INSTALL_PREFIX}/lib/swift/windows/${HOST_PROCESSOR}/${SHARED_LIBRARY_PREFIX}XCTest${SHARED_LIBRARY_SUFFIX}
}
COMMON_CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${COMMON_CFLAGS} \
" \
DISABLE_INSTALL_DEB=TRUE \
PACKAGE_INSTALL_COMPLETION_CALLBACK=package-install-completion-callback \
SWIFTCFLAGS="\
    -use-ld=${BUILD_PACKAGE_PREFIX}/bin/${VAL_VERDE_GH_TEAM}-platform-sdk-mslink \
    ${SWIFTCFLAGS} \
" \
package-cmake-install-archive \
    -Ddispatch_DIR=${STAGE_ROOT_BASE}/swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules \
    -DFoundation_DIR=${STAGE_ROOT_BASE}/swift-corelibs-foundation-${SOURCE_PACKAGE_VERSION}-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/cmake/modules