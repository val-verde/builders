#!/bin/bash

set -e

# Set all environment vars
export SOURCE_PACKAGE_NAME=swift
export SOURCE_PACKAGE_VERSION=9999-git

# Source package build helper functions
source /usr/libexec/${VAL_VERDE_GH_TEAM}-platform-sdk-bash-source-scripts

export-compiler-environment

export DEPENDS="\
    ${PACKAGE_BASE_NAME}-icu4c-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-libxml2-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-llvm-project-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0), \
    ${PACKAGE_BASE_NAME}-mingw-w64-headers-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} (>=1.0.0) \
"
export LLVM_SOURCE_ROOT=${PACKAGE_SOURCES_ROOT}/llvm-project-${SOURCE_PACKAGE_VERSION}
export LLVM_NATIVE_STAGE_ROOT=${LLVM_NATIVE_STAGE_ROOT:-/sources/build-staging/llvm-project-${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}}
export LLVM_STAGE_ROOT=/sources/build-staging/llvm-project-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}
USE_NEWPM=${USE_NEWPM:-TRUE}
export SOURCE_ROOT=${PACKAGE_SOURCES_ROOT}/${SOURCE_PACKAGE_NAME}-${SOURCE_PACKAGE_VERSION}

# Configure the build components
cd ${STAGE_ROOT}

CFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CFLAGS} \
" \
CXXFLAGS="\
    -fms-compatibility-version=19.2 \
    -fms-extensions \
    ${CXXFLAGS} \
" \
CXX_STANDARD=17 \
UniversalCRTSdkDir=${SYSROOT} \
UCRTVersion=git \
VCToolsInstallDir=${SYSROOT} \
package-cmake-invocation \
    -DBUILD_SHARED_LIBS=TRUE \
    -DClang_DIR=${LLVM_STAGE_ROOT}/lib/cmake/clang \
    -DCLANG_LINK_CLANG_DYLIB=FALSE \
    -DICU_I18N_INCLUDE_DIRS=${PACKAGE_PREFIX}/include \
    -DICU_I18N_LIBRARIES=${PACKAGE_PREFIX}/lib/libicui18nswift.dll.a \
    -DICU_UC_INCLUDE_DIRS=${PACKAGE_PREFIX}/include \
    -DICU_UC_LIBRARIES=${PACKAGE_PREFIX}/lib/libicuucswift.dll.a \
    -DLibEdit_INCLUDE_DIRS=${PACKAGE_PREFIX}/include \
    -DLibEdit_LIBRARIES=${PACKAGE_PREFIX}/lib/edit.dll \
    -DLIBXML2_INCLUDE_DIR=${PACKAGE_PREFIX}/include/libxml2 \
    -DLIBXML2_LIBRARY=${PACKAGE_PREFIX}/lib/libxml2.a \
    -DLLVM_BUILD_LIBRARY_DIR=${LLVM_STAGE_ROOT}/lib \
    -DLLVM_BUILD_LLVM_DYLIB=FALSE \
    -DLLVM_BUILD_MAIN_SRC_DIR=${LLVM_SOURCE_ROOT}/llvm \
    -DLLVM_DIR=${LLVM_STAGE_ROOT}/lib/cmake/llvm \
    -DLLVM_ENABLE_ASSERTIONS=FALSE \
    -DLLVM_ENABLE_DOXYGEN=FALSE \
    -DLLVM_ENABLE_EH=TRUE \
    -DLLVM_ENABLE_LIBCXX=TRUE \
    -DLLVM_ENABLE_LTO=${ENABLE_FLTO} \
    -DLLVM_ENABLE_RTTI=TRUE \
    -DLLVM_INSTALL_TOOLCHAIN_ONLY=TRUE \
    -DLLVM_LINK_LLVM_DYLIB=FALSE \
    -DLLVM_MAIN_INCLUDE_DIR=${LLVM_SOURCE_ROOT}/llvm/include \
    -DLLVM_TABLEGEN=${LLVM_NATIVE_STAGE_ROOT}/bin/llvm-tblgen \
    -DLLVM_USE_NEWPM=${USE_NEWPM} \
    -DLLVM_USE_RELATIVE_PATHS_IN_DEBUG_INFO=TRUE \
    -DPython3_EXECUTABLE=${BUILD_PACKAGE_PREFIX}/bin/python3 \
    -DPKG_CONFIG_EXECUTABLE=${PKG_CONFIG} \
    -DSWIFT_BUILD_DYNAMIC_SDK_OVERLAY=TRUE \
    -DSWIFT_BUILD_DYNAMIC_STDLIB=TRUE \
    -DSWIFT_BUILD_PERF_TESTSUITE=FALSE \
    -DSWIFT_BUILD_RUNTIME_WITH_HOST_COMPILER=TRUE \
    -DSWIFT_BUILD_SOURCEKIT=TRUE \
    -DSWIFT_BUILD_STATIC_SDK_OVERLAY=TRUE \
    -DSWIFT_BUILD_STATIC_STDLIB=TRUE \
    -DSWIFT_BUILD_SYNTAXPARSERLIB=TRUE \
    -DSWIFT_CMARK_LIBRARY_DIR=/sources/build-staging/swift-cmark-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/src \
    -DSWIFT_ENABLE_EXPERIMENTAL_CONCURRENCY=TRUE \
    -DSWIFT_ENABLE_EXPERIMENTAL_DIFFERENTIABLE_PROGRAMMING=TRUE \
    -DSWIFT_ENABLE_SOURCEKIT_TESTS=FALSE \
    -DSWIFT_HOST_VARIANT_ARCH=${HOST_PROCESSOR} \
    -DSWIFT_HOST_VARIANT_SDK=WINDOWS \
    -DSWIFT_INCLUDE_APINOTES=FALSE \
    -DSWIFT_INCLUDE_DOCS=FALSE \
    -DSWIFT_INCLUDE_TESTS=FALSE \
    -DSWIFT_NATIVE_CLANG_TOOLS_PATH=${BUILD_PACKAGE_PREFIX}/bin \
    -DSWIFT_NATIVE_LLVM_TOOLS_PATH=${BUILD_PACKAGE_PREFIX}/bin \
    -DSWIFT_NATIVE_SWIFT_TOOLS_PATH=${BUILD_PACKAGE_PREFIX}/bin \
    -DSWIFT_PATH_TO_CMARK_BUILD=/sources/build-staging/swift-cmark-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH} \
    -DSWIFT_PATH_TO_CMARK_SOURCE=${PACKAGE_SOURCES_ROOT}/swift-cmark-${SOURCE_PACKAGE_VERSION} \
    -DSWIFT_PATH_TO_LIBDISPATCH_SOURCE=${PACKAGE_SOURCES_ROOT}/swift-corelibs-libdispatch-${SOURCE_PACKAGE_VERSION} \
    -DSWIFT_STDLIB_ASSERTIONS=FALSE \
    -DSWIFT_TOOL_COMPLETE_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_LLDB_MODULEIMPORT_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SOURCEKITD_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SWIFT_IDE_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SWIFT_REMOTEAST_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SWIFT_SYNTAX_PARSER_TEST_BUILD=FALSE \
    -DSWIFT_TOOL_SWIFT_SYNTAX_TEST_BUILD=FALSE \
    -DSWIFT_TOOLS_ENABLE_LTO=${ENABLE_FLTO} \
    -DSWIFT_USE_LINKER=${BUILD_PACKAGE_PREFIX}/bin/ld.lld \
    -DSWIFT_VENDOR="${PACKAGE_BASE_NAME}" \
    -DSWIFT_WINDOWS_NATIVE_SYSROOT=${PACKAGE_ROOT}/${PACKAGE_BASE_NAME}-platform-sdk-${HOST_OS}${HOST_OS_API_LEVEL}-${HOST_ARCH}/sysroot \
    -DUSE_POSIX_SEM=1 \
    -DUUID_INCLUDE_DIRS=${PACKAGE_PREFIX}/include \
    -DUUID_LIBRARIES=${PACKAGE_PREFIX}/lib/libuuid.a \
    ${SOURCE_ROOT}

# Build the components
ninja-build

rsync -aPx ${STAGE_ROOT}/lib/*.a \
           ${INSTALL_PREFIX}/lib/*.a \
           ${INSTALL_PREFIX}/lib/swift/windows/${HOST_PROCESSOR}
mv ${INSTALL_PREFIX}/lib/swift/windows/*.dll \
   ${INSTALL_PREFIX}/lib/swift/windows/${HOST_PROCESSOR}
mv ${INSTALL_PREFIX}/lib/swift/windows/*.swift* \
   ${INSTALL_PREFIX}/lib/swift/windows/${HOST_PROCESSOR}/
rm -f ${INSTALL_PREFIX}/bin/*libdispatch* \
      ${INSTALL_PREFIX}/bin/*BlocksRuntime* \
      ${INSTALL_PREFIX}/lib/*libdispatch* \
      ${INSTALL_PREFIX}/lib/*BlocksRuntime* \
      ${INSTALL_PREFIX}/lib/swift/windows/${HOST_PROCESSOR}/*libdispatch* \
      ${INSTALL_PREFIX}/lib/swift/windows/${HOST_PROCESSOR}/*BlocksRuntime*

# Build the package
deb-package-build

# Install the package
deb-package-install
