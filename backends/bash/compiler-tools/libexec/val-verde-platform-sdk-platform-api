#!/bin/bash

set -e

function platform-get-builder-args() {
    OS_ARG="$(cut -d'-' -f1 <<<$1)"
    CPU_ARG="$(cut -d'-' -f2 <<<$1)"
    ECHO=/usr/bin/echo
    if [[ "${OS_ARG}" = "gnu" && "${CPU_ARG}" = "westmere" ]]; then
        BUILD_ARGS="\
		HOST_ARCH="${BUILD_ARCH}" \
		HOST_CPU="${BUILD_CPU}" \
		HOST_KERNEL="${BUILD_KERNEL}" \
		HOST_OS="${BUILD_OS}" \
		HOST_PROCESSOR="${BUILD_PROCESSOR}" \
	"
    elif [[ "${OS_ARG}" = "gnu" && "${CPU_ARG}" = "armv8a" ]]; then
        BUILD_ARGS="\
		HOST_ARCH=armv8-a \
		HOST_CPU=apple-m1 \
		HOST_KERNEL="${BUILD_KERNEL}" \
		HOST_OS="${BUILD_OS}" \
		HOST_PROCESSOR=aarch64 \
	"
    elif [[ "${OS_ARG}" = "darwin" && "${CPU_ARG}" = "westmere" ]]; then
        BUILD_ARGS="\
		DARWIN_OS=darwin \
		DARWIN_OS_API_LEVEL=20 \
		HOST_ARCH=westmere \
		HOST_CPU=westmere \
		HOST_KERNEL=apple \
		HOST_OS=macos \
		HOST_OS_API_LEVEL="${MACOS_VERSION}" \
		HOST_PROCESSOR="${BUILD_PROCESSOR}" \
	"
    elif [[ "${OS_ARG}" = "darwin" && "${CPU_ARG}" = "armv8a" ]]; then
        BUILD_ARGS="\
		DARWIN_OS=darwin \
		DARWIN_OS_API_LEVEL=20 \
		HOST_ARCH=armv8-a \
		HOST_CPU=apple-m1 \
		HOST_KERNEL=apple \
		HOST_OS=macos \
		HOST_OS_API_LEVEL="${MACOS_VERSION}" \
		HOST_PROCESSOR=aarch64 \
	"
    elif [[ "${OS_ARG}" = "musl" && "${CPU_ARG}" = "westmere" ]]; then
        BUILD_ARGS="\
		HOST_ARCH="${BUILD_ARCH}" \
		HOST_CPU="${BUILD_CPU}" \
		HOST_KERNEL="${BUILD_KERNEL}" \
		HOST_OS=musl \
		HOST_PROCESSOR="${BUILD_PROCESSOR}" \
	"
    elif [[ "${OS_ARG}" = "musl" && "${CPU_ARG}" = "armv8a" ]]; then
        BUILD_ARGS="\
		HOST_ARCH=armv8-a \
		HOST_CPU=cortex-a57 \
		HOST_KERNEL="${BUILD_KERNEL}" \
		HOST_OS=musl \
		HOST_PROCESSOR=aarch64 \
	"
    elif [[ "${OS_ARG}" = "wasm32" && "${CPU_ARG}" = "wasm32" ]]; then
        BUILD_ARGS="\
		HOST_ARCH=wasm32 \
		HOST_CPU=wasm32 \
		HOST_KERNEL=unknown \
		HOST_OS=wasi \
		HOST_OS_API_LEVEL= \
		HOST_PROCESSOR=wasm32 \
	"
    elif [[ "${OS_ARG}" = "android" && "${CPU_ARG}" = "armv8a" ]]; then
        BUILD_ARGS="\
		HOST_ARCH=armv8-a \
		HOST_CPU=cortex-a57 \
		HOST_KERNEL="${BUILD_KERNEL}" \
		HOST_OS=android \
		HOST_OS_API_LEVEL=29 \
		HOST_PROCESSOR=aarch64 \
	"
    elif [[ "${OS_ARG}" = "android" && "${CPU_ARG}" = "westmere" ]]; then
        BUILD_ARGS="\
		HOST_ARCH=westmere \
		HOST_CPU=westmere \
		HOST_KERNEL="${BUILD_KERNEL}" \
		HOST_OS=android \
		HOST_PROCESSOR="${BUILD_PROCESSOR}" \
	"
    elif [[ "${OS_ARG}" = "windows" && "${CPU_ARG}" = "westmere" ]]; then
        BUILD_ARGS="\
		HOST_ARCH=westmere \
		HOST_CPU=westmere \
		HOST_KERNEL=w64 \
		HOST_OS=mingw32 \
		HOST_OS_API_LEVEL= \
		HOST_PROCESSOR=x86_64 \
	"
    elif [[ "${OS_ARG}" = "windows" && "${CPU_ARG}" = "armv8a" ]]; then
        BUILD_ARGS="\
		HOST_ARCH=armv8-a \
		HOST_CPU=cortex-a57 \
		HOST_KERNEL=w64 \
		HOST_OS=mingw32 \
		HOST_OS_API_LEVEL= \
		HOST_PROCESSOR=aarch64 \
	"
    fi

    ${ECHO} "${BUILD_ARGS}"
}

function platform-invoke-builder() {
    PLATFORM_BUILDER_ARGS=$1
    PLATFORM_BUILDER_STAGE=$2
    
    # Extract platform builder arguments.
    BUILD_ARGS=`platform-get-builder-args ${PLATFORM_BUILDER_STAGE}`
    PLATFORM_BUILD_COMMAND=""${BUILD_ARGS}" "${BASH}" "${VAL_VERDE_GH_TEAM}-platform-sdk-${PLATFORM_BUILDER_ARGS}""
    BUILDER_COMMAND=(${PLATFORM_BUILD_COMMAND})

    # Use builder arguments to invoke platform builder.
    ECHO=/usr/bin/echo
    BASH=/usr/bin/bash
    ${ECHO} -e "Platform Builder for ${PLATFORM_BUILDER_ARGS}-${PLATFORM_BUILDER_STAGE} Invocation Started."
    ${BASH} -c "${BUILDER_COMMAND[*]}"
    ${ECHO} -e "Platform Builder for ${PLATFORM_BUILDER_ARGS}-${PLATFORM_BUILDER_STAGE} Invocation Ended."
    ${ECHO}
}

