#!/bin/bash

set -e

function set-build-base-environment() {
    export BUILD_ARCH=skylake
    export BUILD_CPU=skylake
    export BUILD_KERNEL=linux
    export BUILD_OS=gnu
    export BUILD_OS_API_LEVEL=
    export BUILD_PROCESSOR=x86_64
    export ANDROID_NDK_VERSION=r22
}

# invoke package builder
function package-invoke-builder() {
    ${ECHO} -e "Builder Invocation Started"
    ${BASH} ${VAL_VERDE_GH_TEAM}-platform-sdk-${@}
    ${ECHO} -e "Builder Invocation Complete"
    ${ECHO}
}

# Check for util existence and get corect path
function get-util-path() {
    BIN_PATH_PREFIX=${PACKAGE_ROOT}/${VAL_VERDE_GH_TEAM}-platform-sdk
    BUILD_TRIPLE=${BUILD_OS}${BUILD_OS_API_LEVEL}-${BUILD_ARCH}/sysroot/usr/bin
    UTIL_FILE=${BIN_PATH_PREFIX}/${BUILD_TRIPLE}/${1}
    if [ -f "${UTIL_FILE}" ]; then
        echo ${BIN_PATH_PREFIX}/${BUILD_TRIPLE}/${1}
    else
        echo /usr/bin/${1}
    fi
}

# set default build env vars
function set-defaults() {
    AUTORECONF=$(get-util-path autoreconf)
    BASH=$(get-util-path bash)
    BISON=$(get-util-path bison)
    CHMOD=$(get-util-path chmod)
    CP=$(get-util-path cp)
    CURL=$(get-util-path curl)
    CUT=$(get-util-path cut)
    DPKG=$(get-util-path dpkg)
    ECHO=$(get-util-path echo)
    FIND=$(get-util-path find)
    GAWK=$(get-util-path gawk)
    GETTEXT=$(get-util-path gettext)
    GIT=$(get-util-path git)
    GPERF=$(get-util-path gperf)
    GREP=$(get-util-path grep)
    HELP2MAN=$(get-util-path true)
    INSTALL=$(get-util-path install)
    LN=$(get-util-path ln)
    LS=$(get-util-path ls)
    M4=$(get-util-path m4)
    MAKE=$(get-util-path make)
    MAKEINFO=$(get-util-path true)
    MKDIR=$(get-util-path mkdir)
    MV=$(get-util-path mv)
    NINJA=$(get-util-path ninja)
    PERL=$(get-util-path perl)
    PKG_CONFIG=$(get-util-path pkg-config)
    RM=$(get-util-path rm)
    RMDIR=$(get-util-path rmdir)
    RSYNC=$(get-util-path rsync)
    SED=$(get-util-path sed)
    SSH=$(get-util-path ssh)
    TAR=$(get-util-path tar)
    TEE=$(get-util-path tee)
    TR=$(get-util-path tr)
    WGET=$(get-util-path wget)
    XARGS=$(get-util-path xargs)
    XZ=$(get-util-path xz)
}

# set build time package environment vars
function set-package-environment() {
    set-build-base-environment
    OS_ARG="$(cut -d'-' -f1 <<<$1)"
    CPU_ARG="$(cut -d'-' -f2 <<<$1)"
    ECHO=$(get-util-path echo)

    if [ ${OS_ARG} = 'gnu' ]; then
        export HOST_ARCH=${BUILD_ARCH}
        export HOST_CPU=${BUILD_CPU}
        export HOST_KERNEL=${BUILD_KERNEL}
        export HOST_OS=${BUILD_OS}
        export HOST_PROCESSOR=${BUILD_PROCESSOR}
        export SYSROOT=/
    elif [ ${OS_ARG} = 'musl' && ${CPU_ARG} = 'skylake']; then
        export HOST_ARCH=${BUILD_ARCH}
        export HOST_CPU=${BUILD_CPU}
        export HOST_KERNEL=${BUILD_KERNEL}
        export HOST_OS=musl
        export HOST_PROCESSOR=${BUILD_PROCESSOR}
    elif [ ${OS_ARG} = 'musl' && ${CPU_ARG} = 'armv8a']; then
        export HOST_ARCH=armv8-a
        export HOST_CPU=cortex-a57
        export HOST_KERNEL=${BUILD_KERNEL}
        export HOST_OS=musl
        export HOST_PROCESSOR=aarch64
    elif [ ${OS_ARG} = 'wasm32' ]; then
        export HOST_ARCH=wasm32
        export HOST_CPU=wasm32
        export HOST_KERNEL=unknown
        export HOST_OS=wasi
        export HOST_OS_API_LEVEL=
        export HOST_PROCESSOR=wasm32
    elif [ ${OS_ARG} = 'android' && ${CPU_ARG} = 'armv8a']; then
        export HOST_ARCH=armv8-a
        export HOST_CPU=cortex-a57
        export HOST_KERNEL=linux
        export HOST_OS=android
        export HOST_OS_API_LEVEL=29
        export HOST_PROCESSOR=aarch64
    elif [ ${OS_ARG} = 'android' && ${CPU_ARG} = 'westmere']; then
        export HOST_ARCH=westmere
        export HOST_CPU=westmere
        export HOST_KERNEL=linux
        export HOST_OS=android
        export HOST_OS_API_LEVEL=29
        export HOST_PROCESSOR=x86_64
     elif [ ${OS_ARG} = 'windows' ]; then
        export HOST_ARCH=haswell
        export HOST_CPU=skylake
        export HOST_KERNEL=w64
        export HOST_OS=mingw32
        export HOST_OS_API_LEVEL=
        export HOST_PROCESSOR=x86_64
    fi
}

# unset build time package environment vars
function unset-package-environment() {
    unset HOST_ARCH
    unset HOST_CPU
    unset HOST_KERNEL
    unset HOST_OS
    unset HOST_PROCESSOR
    unset SYSROOT
}
